<?xml version="1.0"?>
<project version="0.16.0" title="">
  <file path="tests/core/SecuritySuite.php" hash="548bf745ea9e1eda09201991110c0e62" package="Test">
    <docblock>
      <description>TOODLE</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;
</long-description>
      <tag line="3" name="category" description="Framework"/>
      <tag line="3" name="package" description="Test"/>
      <tag line="3" name="author" description="Alexander Maslov &lt;it@delta-z.ru&gt;"/>
      <tag line="3" name="copyright" description="2011 Alexader Maslov (http://www.delta-z.ru)"/>
      <tag line="3" name="license" description="http://www.gnu.org/licenses/gpl-3.0.html GPL v3"/>
      <tag line="3" name="link" description="https://github.com/drakmail/toodle" link="https://github.com/drakmail/toodle"/>
    </docblock>
    <parse_markers>
      <critical line="23">No short description for method suite</critical>
    </parse_markers>
    <include type="Require Once" line="16">
      <name>SecurityTest.php</name>
    </include>
    <class final="false" abstract="false" line="21" namespace="default" package="Default">
      <name>SecuritySuite</name>
      <extends>\PHPUnit_Framework_TestSuite</extends>
      <full_name>\SecuritySuite</full_name>
      <docblock>
        <description>Test Suite for testing Security class</description>
        <long-description>
</long-description>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" line="27" package="Default">
        <name>suite</name>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag line="23" name="static" description=""/>
          <tag line="23" name="return" description="" type="\SecuritySuite">
            <type by_reference="false">\SecuritySuite</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="37" package="Default">
        <name>setUp</name>
        <docblock>
          <description>For future - setup fixtures</description>
          <long-description>
</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="44" package="Default">
        <name>tearDown</name>
        <docblock>
          <description>For future - setup fixtures</description>
          <long-description>
</long-description>
        </docblock>
      </method>
    </class>
  </file>
  <file path="tests/core/CoreTest.php" hash="d5e1e4a90ddad40c1a2678ee26f9676a" package="Test">
    <docblock>
      <description>TOODLE</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;
</long-description>
      <tag line="3" name="category" description="Framework"/>
      <tag line="3" name="package" description="Test"/>
      <tag line="3" name="author" description="Alexander Maslov &lt;it@delta-z.ru&gt;"/>
      <tag line="3" name="copyright" description="2011 Alexader Maslov (http://www.delta-z.ru)"/>
      <tag line="3" name="license" description="http://www.gnu.org/licenses/gpl-3.0.html GPL v3"/>
      <tag line="3" name="link" description="https://github.com/drakmail/toodle" link="https://github.com/drakmail/toodle"/>
    </docblock>
    <parse_markers>
      <critical line="38">No short description for method testRoute</critical>
    </parse_markers>
    <include type="Require Once" line="16">
      <name>PHPUnit/Autoload.php</name>
    </include>
    <include type="Require Once" line="17">
      <name>../../core/Core.php</name>
    </include>
    <class final="false" abstract="false" line="22" namespace="default" package="Default">
      <name>CoreTest</name>
      <extends>\PHPUnit_Framework_TestCase</extends>
      <full_name>\CoreTest</full_name>
      <docblock>
        <description>Test class for Core</description>
        <long-description>
</long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="protected" line="27" package="Default">
        <name>setUp</name>
        <docblock>
          <description>Setup fixture</description>
          <long-description>
</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="34" package="Default">
        <name>tearDown</name>
        <docblock>
          <description>Shutdown fixture</description>
          <long-description>
</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="44" package="Default">
        <name>testRoute</name>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag line="38" name="dataProvider" description="provideParams&#10;Must return array (module,action)"/>
          <tag line="38" name="param" description="array get array" type="\$get" variable="$get">
            <type by_reference="false">\$get</type>
          </tag>
          <tag line="38" name="param" description="array post array" type="\$post" variable="$post">
            <type by_reference="false">\$post</type>
          </tag>
        </docblock>
        <argument line="44">
          <name>$get</name>
          <default/>
          <type/>
        </argument>
        <argument line="44">
          <name>$post</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="58" package="Default">
        <name>provideParams</name>
        <docblock>
          <description>Function, that providing get and post parameters for testRoute function.</description>
          <long-description>&lt;p&gt;Provides no params, only one param, and many other combinations.&lt;/p&gt;
</long-description>
          <tag line="53" name="return" description="2 arrays of $get and $post arrays" type="array">
            <type by_reference="false">\array</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="tests/core/SecurityTest.php" hash="b21e9fa1caa727cbf0aa2aa97bcc342d" package="Test">
    <docblock>
      <description>TOODLE</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;
</long-description>
      <tag line="2" name="category" description="Framework"/>
      <tag line="2" name="package" description="Test"/>
      <tag line="2" name="author" description="Alexander Maslov &lt;it@delta-z.ru&gt;"/>
      <tag line="2" name="copyright" description="2011 Alexader Maslov (http://www.delta-z.ru)"/>
      <tag line="2" name="license" description="http://www.gnu.org/licenses/gpl-3.0.html GPL v3"/>
      <tag line="2" name="link" description="https://github.com/drakmail/toodle" link="https://github.com/drakmail/toodle"/>
    </docblock>
    <include type="Require Once" line="15">
      <name>PHPUnit/Autoload.php</name>
    </include>
    <include type="Require Once" line="16">
      <name>../../core/Security.php</name>
    </include>
    <class final="false" abstract="false" line="21" namespace="default" package="Default">
      <name>SecurityTest</name>
      <extends>\PHPUnit_Framework_TestCase</extends>
      <full_name>\SecurityTest</full_name>
      <docblock>
        <description>Test security module</description>
        <long-description>
</long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" line="29" package="Default">
        <name>testStringEscaping</name>
        <docblock>
          <description>Test user input escaping</description>
          <long-description>
</long-description>
          <tag line="23" name="dataProvider" description="provideStringParams"/>
          <tag line="23" name="param" description="expected result" type="string" variable="$result">
            <type by_reference="false">\string</type>
          </tag>
          <tag line="23" name="param" description="" type="string" variable="$string">
            <type by_reference="false">\string</type>
          </tag>
        </docblock>
        <argument line="29">
          <name>$result</name>
          <default/>
          <type/>
        </argument>
        <argument line="29">
          <name>$string</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="40" package="Default">
        <name>testFloatFormat</name>
        <docblock>
          <description>Test converting float to unified format</description>
          <long-description>
</long-description>
          <tag line="34" name="dataProvider" description="provideFloatParams"/>
          <tag line="34" name="param" description="" type="string" variable="$exp">
            <type by_reference="false">\string</type>
          </tag>
          <tag line="34" name="param" description="" type="string" variable="$float">
            <type by_reference="false">\string</type>
          </tag>
        </docblock>
        <argument line="40">
          <name>$exp</name>
          <default/>
          <type/>
        </argument>
        <argument line="40">
          <name>$float</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="48" package="Default">
        <name>provideStringParams</name>
        <docblock>
          <description>Provide params for string test</description>
          <long-description>
</long-description>
          <tag line="44" name="return" description="" type="array">
            <type by_reference="false">\array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="65" package="Default">
        <name>provideFloatParams</name>
        <docblock>
          <description>Provide params for float test</description>
          <long-description>
</long-description>
          <tag line="61" name="return" description="" type="array">
            <type by_reference="false">\array</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="tests/core/CoreSuite.php" hash="5724cd6b22a8af0d1653bb1eb6f3b8cc" package="Test">
    <docblock>
      <description>TOODLE</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;
</long-description>
      <tag line="3" name="category" description="Framework"/>
      <tag line="3" name="package" description="Test"/>
      <tag line="3" name="author" description="Alexander Maslov &lt;it@delta-z.ru&gt;"/>
      <tag line="3" name="copyright" description="2011 Alexader Maslov (http://www.delta-z.ru)"/>
      <tag line="3" name="license" description="http://www.gnu.org/licenses/gpl-3.0.html GPL v3"/>
      <tag line="3" name="link" description="https://github.com/drakmail/toodle" link="https://github.com/drakmail/toodle"/>
    </docblock>
    <parse_markers>
      <critical line="23">No short description for method suite</critical>
    </parse_markers>
    <include type="Require Once" line="16">
      <name>CoreTest.php</name>
    </include>
    <class final="false" abstract="false" line="21" namespace="default" package="Default">
      <name>CoreSuite</name>
      <extends>\PHPUnit_Framework_TestSuite</extends>
      <full_name>\CoreSuite</full_name>
      <docblock>
        <description>Test Suite for testing Core class</description>
        <long-description>
</long-description>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" line="27" package="Default">
        <name>suite</name>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag line="23" name="static" description=""/>
          <tag line="23" name="return" description="" type="\CoreSuite">
            <type by_reference="false">\CoreSuite</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="37" package="Default">
        <name>setUp</name>
        <docblock>
          <description>For future - setup fixtures</description>
          <long-description>
</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="44" package="Default">
        <name>tearDown</name>
        <docblock>
          <description>For future - setup fixtures</description>
          <long-description>
</long-description>
        </docblock>
      </method>
    </class>
  </file>
  <file path="doc/ajax_search.php" hash="b90b710361713f279b5ed683ea9f4443" package="Search">
    <docblock>
      <description>DocBlox</description>
      <long-description>&lt;p&gt;PHP Version 5&lt;/p&gt;
</long-description>
      <tag line="2" name="category" description="DocBlox"/>
      <tag line="2" name="package" description="Search"/>
      <tag line="2" name="author" description="Mike van Riel &lt;mike.vanriel@naenius.com&gt;"/>
      <tag line="2" name="copyright" description="2010-2011 Mike van Riel / Naenius (http://www.naenius.com)"/>
      <tag line="2" name="license" description="http://www.opensource.org/licenses/mit-license.php MIT"/>
      <tag line="2" name="link" description="http://docblox-project.org" link="http://docblox-project.org"/>
    </docblock>
  </file>
  <file path="index.php" hash="17cbcc715b9764f2534a02148311875c" package="Bootstrap">
    <docblock>
      <description>TOODLE</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;
</long-description>
      <tag line="2" name="category" description="Site"/>
      <tag line="2" name="package" description="Bootstrap"/>
      <tag line="2" name="author" description="Alexander Maslov &lt;it@delta-z.ru&gt;"/>
      <tag line="2" name="copyright" description="2011 Alexader Maslov (http://www.delta-z.ru)"/>
      <tag line="2" name="license" description="http://www.gnu.org/licenses/gpl-3.0.html GPL v3"/>
      <tag line="2" name="link" description="https://github.com/drakmail/toodle" link="https://github.com/drakmail/toodle"/>
    </docblock>
    <markers>
      <todo line="15">Write unit test when it could be done...</todo>
      <todo line="27">Khm... fix this :)</todo>
    </markers>
    <parse_markers>
      <error line="39">No DocBlock was found for Class Index</error>
      <critical line="41">No short description for property $core</critical>
    </parse_markers>
    <namespace-alias name="Core">\toodle\core\Core</namespace-alias>
    <function namespace="toodle" line="25" package="Bootstrap">
      <name>autoload</name>
      <type>function</type>
      <docblock>
        <description>Auto classloader</description>
        <long-description>
</long-description>
        <tag line="21" name="param" description="class name" type="\toodle\$class" variable="$class">
          <type by_reference="false">\toodle\$class</type>
        </tag>
      </docblock>
      <argument line="25">
        <name>$class</name>
        <default/>
        <type/>
      </argument>
    </function>
    <class final="false" abstract="false" line="39" namespace="toodle" package="Default">
      <name>Index</name>
      <extends/>
      <full_name>\toodle\Index</full_name>
      <property final="false" static="false" visibility="private" line="44" package="Default">
        <name>$core</name>
        <default/>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag line="41" name="var" description="" type="\toodle\core\Core">
            <type by_reference="false">\toodle\core\Core</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="49" package="Default">
        <name>__construct</name>
        <docblock>
          <description>Init core framework parts</description>
          <long-description>
</long-description>
        </docblock>
      </method>
    </class>
  </file>
  <file path="contrib/main/controller/main.php" hash="a4fc03f534908e4c9cf18e971f567f52" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File contrib/main/controller/main.php</error>
      <error line="6">No DocBlock was found for Class MainController</error>
      <error line="8">No DocBlock was found for Method run__index</error>
    </parse_markers>
    <class final="false" abstract="false" line="6" namespace="default" package="Default">
      <name>MainController</name>
      <extends>\toodle\core\BasicController</extends>
      <full_name>\MainController</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="8" package="Default">
        <name>run__index</name>
      </method>
    </class>
  </file>
  <file path="core/spec/context_spec.php" hash="68daed80a4094da89885259242282b2b" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File core/spec/context_spec.php</error>
      <error line="4">No DocBlock was found for Class Describe_local_variable</error>
      <error line="6">No DocBlock was found for Method should_retrive_variable_using_array_interface</error>
      <error line="19">No DocBlock was found for Method should_set_variable_using_array_interface</error>
      <error line="28">No DocBlock was found for Method should_ensure_scope_remain_local_in_a_stack_layer</error>
      <error line="44">No DocBlock was found for Class Describe_context_lookup_basic_data_types</error>
      <error line="46">No DocBlock was found for Method should_resolve_a_integer</error>
      <error line="54">No DocBlock was found for Method should_resolve_a_float_number</error>
      <error line="62">No DocBlock was found for Method should_resolve_a_negative_number</error>
      <error line="68">No DocBlock was found for Method should_resolve_a_string</error>
      <error line="74">No DocBlock was found for Method should_escape_output_by_default</error>
      <error line="92">No DocBlock was found for Class Describe_array_lookup</error>
      <error line="94">No DocBlock was found for Method should_be_access_by_array_index</error>
      <error line="104">No DocBlock was found for Method should_be_access_by_array_key</error>
      <error line="114">No DocBlock was found for Method should_resolve_array_like_objects</error>
      <error line="129">No DocBlock was found for Method should_resolve_additional_array_property</error>
      <error line="141">No DocBlock was found for Class Describe_object_context_lookup</error>
      <error line="143">No DocBlock was found for Method should_use_dot_to_access_object_property</error>
      <error line="155">No DocBlock was found for Method should_return_null_for_undefined_or_private_object_property</error>
      <error line="165">No DocBlock was found for Method should_use_dot_to_perform_method_call</error>
      <error line="175">No DocBlock was found for Method should_return_null_for_undefined_or_private_method_call</error>
      <error line="187">No DocBlock was found for Method should_resolve_overloaded_attributes</error>
      <error line="197">No DocBlock was found for Class Document</error>
      <error line="198">No DocBlock was found for Property $h2o_safe</error>
      <error line="199">No DocBlock was found for Property $uuid</error>
      <error line="201">No DocBlock was found for Method __construct</error>
      <error line="207">No DocBlock was found for Method to_pdf</error>
      <error line="211">No DocBlock was found for Method to_xml</error>
      <error line="215">No DocBlock was found for Method _secret</error>
      <error line="220">No DocBlock was found for Class Person</error>
      <error line="221">No DocBlock was found for Property $data</error>
      <error line="226">No DocBlock was found for Method __get</error>
      <error line="232">No DocBlock was found for Method __isset</error>
      <error line="237">No DocBlock was found for Function create_context</error>
    </parse_markers>
    <include type="Require Once" line="2">
      <name>spec_helper.php</name>
    </include>
    <function namespace="default" line="237" package="Default">
      <name>create_context</name>
      <type>function</type>
      <argument line="237">
        <name>$c</name>
        <default>array()</default>
        <type/>
      </argument>
    </function>
    <class final="false" abstract="false" line="4" namespace="default" package="Default">
      <name>Describe_local_variable</name>
      <extends>\SimpleSpec</extends>
      <full_name>\Describe_local_variable</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="6" package="Default">
        <name>should_retrive_variable_using_array_interface</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="19" package="Default">
        <name>should_set_variable_using_array_interface</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="28" package="Default">
        <name>should_ensure_scope_remain_local_in_a_stack_layer</name>
      </method>
    </class>
    <class final="false" abstract="false" line="44" namespace="default" package="Default">
      <name>Describe_context_lookup_basic_data_types</name>
      <extends>\SimpleSpec</extends>
      <full_name>\Describe_context_lookup_basic_data_types</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="46" package="Default">
        <name>should_resolve_a_integer</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="54" package="Default">
        <name>should_resolve_a_float_number</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="62" package="Default">
        <name>should_resolve_a_negative_number</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="68" package="Default">
        <name>should_resolve_a_string</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="74" package="Default">
        <name>should_escape_output_by_default</name>
      </method>
    </class>
    <class final="false" abstract="false" line="92" namespace="default" package="Default">
      <name>Describe_array_lookup</name>
      <extends>\SimpleSpec</extends>
      <full_name>\Describe_array_lookup</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="94" package="Default">
        <name>should_be_access_by_array_index</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="104" package="Default">
        <name>should_be_access_by_array_key</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="114" package="Default">
        <name>should_resolve_array_like_objects</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="129" package="Default">
        <name>should_resolve_additional_array_property</name>
      </method>
    </class>
    <class final="false" abstract="false" line="141" namespace="default" package="Default">
      <name>Describe_object_context_lookup</name>
      <extends>\SimpleSpec</extends>
      <full_name>\Describe_object_context_lookup</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="143" package="Default">
        <name>should_use_dot_to_access_object_property</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="155" package="Default">
        <name>should_return_null_for_undefined_or_private_object_property</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="165" package="Default">
        <name>should_use_dot_to_perform_method_call</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="175" package="Default">
        <name>should_return_null_for_undefined_or_private_method_call</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="187" package="Default">
        <name>should_resolve_overloaded_attributes</name>
      </method>
    </class>
    <class final="false" abstract="false" line="197" namespace="default" package="Default">
      <name>Document</name>
      <extends/>
      <full_name>\Document</full_name>
      <property final="false" static="false" visibility="public" line="198" package="Default">
        <name>$h2o_safe</name>
        <default>array('to_pdf'</default>
      </property>
      <property final="false" static="false" visibility="private" line="199" package="Default">
        <name>$uuid</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="201" package="Default">
        <name>__construct</name>
        <argument line="201">
          <name>$title</name>
          <default/>
          <type/>
        </argument>
        <argument line="201">
          <name>$content</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="207" package="Default">
        <name>to_pdf</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="211" package="Default">
        <name>to_xml</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="215" package="Default">
        <name>_secret</name>
      </method>
    </class>
    <class final="false" abstract="false" line="220" namespace="default" package="Default">
      <name>Person</name>
      <extends/>
      <full_name>\Person</full_name>
      <property final="false" static="false" visibility="public" line="221" package="Default">
        <name>$data</name>
        <default>array(
        'name' =&gt; 'The king'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="226" package="Default">
        <name>__get</name>
        <argument line="226">
          <name>$attr</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="232" package="Default">
        <name>__isset</name>
        <argument line="232">
          <name>$attr</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="core/spec/spec.php" hash="87c807cacd50dedeb12e8d3bd14cee04" package="Default">
    <docblock>
      <description/>
      <long-description>
</long-description>
      <tag line="2" name="name" description="SimpleSpec&#10;PHP SimpleTest extension for Behavior driven development(BDD)&#10;why not PHPSpec? well its a good project but SimpleTest has better coverage for testing &#10;and i want better grammer&#10;Features:&#10;- Reuse SimpleTest framework&#10;- simplly one include from away&#10;- Underscore for readibility - all examples uses underscore to seperate descriptions.&#10;- Natural language grammer&#10;- before_all, after_all is not supported, i don't want to modify SimpleTest&#10;- conventional before/after named prepare/cleanup respectively"/>
      <tag line="2" name="example" description="class Describe_his_mum extends SimpleSpec {&#10;function prepare() {&#10;$this-&gt;mum = new Mum(array('mood'=&gt;'angry')); &#10;}&#10;function should_be_very_angry_when_i_break_my_lunch_box() {&#10;expects($this-&gt;mum-&gt;mood)-&gt;should_be('angry');&#10;}&#10;function should_be_very_happy_when_i_punch_her_in_the_face() {&#10;punch($this-&gt;mum);&#10;expects($this-&gt;mum-&gt;mood)-&gt;should_be('happy');&#10;}&#10;function cleanup() {&#10;unset($this-&gt;mum); // kill da mum&#10;}&#10;}"/>
      <tag line="2" name="author" description="- Taylor Luk aka 'speedmax'"/>
      <tag line="2" name="license" description="Free for all"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file core/spec/spec.php</error>
      <critical line="2">No short description for class SimpleSpec</critical>
      <error line="41">No DocBlock was found for Property $target</error>
      <error line="42">No DocBlock was found for Property $negate</error>
      <error line="43">No DocBlock was found for Property $matcher</error>
      <error line="45">No DocBlock was found for Method __construct</error>
      <error line="53">No DocBlock was found for Method _isTest</error>
      <error line="60">No DocBlock was found for Method prepare</error>
      <error line="64">No DocBlock was found for Method cleanup</error>
      <error line="67">No DocBlock was found for Method setUp</error>
      <error line="71">No DocBlock was found for Method tearDown</error>
      <error line="75">No DocBlock was found for Method __call</error>
      <error line="95">No DocBlock was found for Method offsetGet</error>
      <error line="99">No DocBlock was found for Method offsetSet</error>
      <error line="100">No DocBlock was found for Method offsetExists</error>
      <error line="101">No DocBlock was found for Method offsetUnset</error>
      <error line="103">No DocBlock was found for Method expect</error>
      <error line="108">No DocBlock was found for Method value_of</error>
      <error line="112">No DocBlock was found for Method assert</error>
      <error line="136">No DocBlock was found for Function expects</error>
      <error line="142">No DocBlock was found for Class Have_Matcher</error>
      <error line="143">No DocBlock was found for Method __construct</error>
      <error line="149">No DocBlock was found for Method __get</error>
      <error line="160">No DocBlock was found for Class SpecMatcher</error>
      <error line="161">No DocBlock was found for Property $tester</error>
      <error line="162">No DocBlock was found for Property $negate</error>
      <error line="164">No DocBlock was found for Method __construct</error>
      <error line="168">No DocBlock was found for Method negate</error>
      <error line="172">No DocBlock was found for Method be</error>
      <error line="176">No DocBlock was found for Method be_equal</error>
      <error line="180">No DocBlock was found for Method be_empty</error>
      <error line="186">No DocBlock was found for Method be_true</error>
      <error line="190">No DocBlock was found for Method be_false</error>
      <error line="194">No DocBlock was found for Method be_null</error>
      <error line="200">No DocBlock was found for Method be_a</error>
      <error line="206">No DocBlock was found for Method be_an</error>
      <error line="210">No DocBlock was found for Method be_within_margin</error>
      <error line="217">No DocBlock was found for Method be_outside_margin</error>
      <error line="224">No DocBlock was found for Method be_identical</error>
      <error line="231">No DocBlock was found for Method be_reference_of</error>
      <error line="241">No DocBlock was found for Method be_clone_of</error>
      <error line="254">No DocBlock was found for Method be_copy_of</error>
      <error line="266">No DocBlock was found for Method contain</error>
      <error line="279">No DocBlock was found for Method have</error>
      <error line="294">No DocBlock was found for Method match</error>
      <error line="307">No DocBlock was found for Method expect_error</error>
      <error line="313">No DocBlock was found for Method expect_exception</error>
    </parse_markers>
    <function namespace="default" line="136" package="Default">
      <name>expects</name>
      <type>function</type>
      <argument line="136">
        <name>$subject</name>
        <default/>
        <type/>
      </argument>
    </function>
    <class final="false" abstract="false" line="40" namespace="default" package="Default">
      <name>SimpleSpec</name>
      <extends>\UnitTestCase</extends>
      <full_name>\SimpleSpec</full_name>
      <docblock>
        <description/>
        <long-description>
</long-description>
        <tag line="2" name="name" description="SimpleSpec&#10;PHP SimpleTest extension for Behavior driven development(BDD)&#10;why not PHPSpec? well its a good project but SimpleTest has better coverage for testing &#10;and i want better grammer&#10;Features:&#10;- Reuse SimpleTest framework&#10;- simplly one include from away&#10;- Underscore for readibility - all examples uses underscore to seperate descriptions.&#10;- Natural language grammer&#10;- before_all, after_all is not supported, i don't want to modify SimpleTest&#10;- conventional before/after named prepare/cleanup respectively"/>
        <tag line="2" name="example" description="class Describe_his_mum extends SimpleSpec {&#10;function prepare() {&#10;$this-&gt;mum = new Mum(array('mood'=&gt;'angry')); &#10;}&#10;function should_be_very_angry_when_i_break_my_lunch_box() {&#10;expects($this-&gt;mum-&gt;mood)-&gt;should_be('angry');&#10;}&#10;function should_be_very_happy_when_i_punch_her_in_the_face() {&#10;punch($this-&gt;mum);&#10;expects($this-&gt;mum-&gt;mood)-&gt;should_be('happy');&#10;}&#10;function cleanup() {&#10;unset($this-&gt;mum); // kill da mum&#10;}&#10;}"/>
        <tag line="2" name="author" description="- Taylor Luk aka 'speedmax'"/>
        <tag line="2" name="license" description="Free for all"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="41" package="Default">
        <name>$target</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="42" package="Default">
        <name>$negate</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="43" package="Default">
        <name>$matcher</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="45" package="Default">
        <name>__construct</name>
        <argument line="45">
          <name>$label</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="53" package="Default">
        <name>_isTest</name>
        <argument line="53">
          <name>$method</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="60" package="Default">
        <name>prepare</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="64" package="Default">
        <name>cleanup</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="67" package="Default">
        <name>setUp</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="71" package="Default">
        <name>tearDown</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="75" package="Default">
        <name>__call</name>
        <argument line="75">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="75">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="95" package="Default">
        <name>offsetGet</name>
        <argument line="95">
          <name>$object</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="99" package="Default">
        <name>offsetSet</name>
        <argument line="99">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="99">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="100" package="Default">
        <name>offsetExists</name>
        <argument line="100">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="101" package="Default">
        <name>offsetUnset</name>
        <argument line="101">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="103" package="Default">
        <name>expect</name>
        <argument line="103">
          <name>$object</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="108" package="Default">
        <name>value_of</name>
        <argument line="108">
          <name>$object</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="112" package="Default">
        <name>assert</name>
        <argument line="112">
          <name>$expectation</name>
          <default/>
          <type/>
        </argument>
        <argument line="112">
          <name>$compare</name>
          <default/>
          <type/>
        </argument>
        <argument line="112">
          <name>$message</name>
          <default>'%s'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="130" package="Default">
        <name>getAssertionLine</name>
        <docblock>
          <description>Uses a stack trace to find the line of an assertion.</description>
          <long-description>&lt;p&gt;@return string           Line number of first assert*
                            method embedded in format string.&lt;/p&gt;
</long-description>
          <tag line="124" name="access" description="public"/>
        </docblock>
      </method>
    </class>
    <class final="false" abstract="false" line="142" namespace="default" package="Default">
      <name>Have_Matcher</name>
      <extends/>
      <full_name>\Have_Matcher</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="143" package="Default">
        <name>__construct</name>
        <argument line="143">
          <name>$subject</name>
          <default/>
          <type/>
        </argument>
        <argument line="143">
          <name>$count</name>
          <default/>
          <type/>
        </argument>
        <argument line="143">
          <name>$runtime</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="149" package="Default">
        <name>__get</name>
        <argument line="149">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="160" namespace="default" package="Default">
      <name>SpecMatcher</name>
      <extends/>
      <full_name>\SpecMatcher</full_name>
      <property final="false" static="false" visibility="private" line="161" package="Default">
        <name>$tester</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="162" package="Default">
        <name>$negate</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="164" package="Default">
        <name>__construct</name>
        <argument line="164">
          <name>$runtime</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="168" package="Default">
        <name>negate</name>
        <argument line="168">
          <name>$bool</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="172" package="Default">
        <name>be</name>
        <argument line="172">
          <name>$first</name>
          <default/>
          <type/>
        </argument>
        <argument line="172">
          <name>$second</name>
          <default/>
          <type/>
        </argument>
        <argument line="172">
          <name>$message</name>
          <default>'%s'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="176" package="Default">
        <name>be_equal</name>
        <argument line="176">
          <name>$first</name>
          <default/>
          <type/>
        </argument>
        <argument line="176">
          <name>$second</name>
          <default/>
          <type/>
        </argument>
        <argument line="176">
          <name>$message</name>
          <default>'%s'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="180" package="Default">
        <name>be_empty</name>
        <argument line="180">
          <name>$subject</name>
          <default/>
          <type/>
        </argument>
        <argument line="180">
          <name>$message</name>
          <default>'%s'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="186" package="Default">
        <name>be_true</name>
        <argument line="186">
          <name>$result</name>
          <default/>
          <type/>
        </argument>
        <argument line="186">
          <name>$message</name>
          <default>'%s'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="190" package="Default">
        <name>be_false</name>
        <argument line="190">
          <name>$result</name>
          <default/>
          <type/>
        </argument>
        <argument line="190">
          <name>$message</name>
          <default>'%s'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="194" package="Default">
        <name>be_null</name>
        <argument line="194">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
        <argument line="194">
          <name>$message</name>
          <default>'%s'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="200" package="Default">
        <name>be_a</name>
        <argument line="200">
          <name>$object</name>
          <default/>
          <type/>
        </argument>
        <argument line="200">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="200">
          <name>$message</name>
          <default>'%s'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="206" package="Default">
        <name>be_an</name>
        <argument line="206">
          <name>$object</name>
          <default/>
          <type/>
        </argument>
        <argument line="206">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="206">
          <name>$message</name>
          <default>'%s'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="210" package="Default">
        <name>be_within_margin</name>
        <argument line="210">
          <name>$first</name>
          <default/>
          <type/>
        </argument>
        <argument line="210">
          <name>$second</name>
          <default/>
          <type/>
        </argument>
        <argument line="210">
          <name>$margin</name>
          <default/>
          <type/>
        </argument>
        <argument line="210">
          <name>$message</name>
          <default>'%s'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="217" package="Default">
        <name>be_outside_margin</name>
        <argument line="217">
          <name>$first</name>
          <default/>
          <type/>
        </argument>
        <argument line="217">
          <name>$second</name>
          <default/>
          <type/>
        </argument>
        <argument line="217">
          <name>$margin</name>
          <default/>
          <type/>
        </argument>
        <argument line="217">
          <name>$message</name>
          <default>'%s'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="224" package="Default">
        <name>be_identical</name>
        <argument line="224">
          <name>$first</name>
          <default/>
          <type/>
        </argument>
        <argument line="224">
          <name>$second</name>
          <default/>
          <type/>
        </argument>
        <argument line="224">
          <name>$message</name>
          <default>'%s'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="231" package="Default">
        <name>be_reference_of</name>
        <argument line="231">
          <name>$first</name>
          <default/>
          <type/>
        </argument>
        <argument line="231">
          <name>$second</name>
          <default/>
          <type/>
        </argument>
        <argument line="231">
          <name>$message</name>
          <default>'%s'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="241" package="Default">
        <name>be_clone_of</name>
        <argument line="241">
          <name>$first</name>
          <default/>
          <type/>
        </argument>
        <argument line="241">
          <name>$second</name>
          <default/>
          <type/>
        </argument>
        <argument line="241">
          <name>$message</name>
          <default>'%s'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="254" package="Default">
        <name>be_copy_of</name>
        <argument line="254">
          <name>$first</name>
          <default/>
          <type/>
        </argument>
        <argument line="254">
          <name>$second</name>
          <default/>
          <type/>
        </argument>
        <argument line="254">
          <name>$message</name>
          <default>'%s'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="266" package="Default">
        <name>contain</name>
        <argument line="266">
          <name>$subject</name>
          <default/>
          <type/>
        </argument>
        <argument line="266">
          <name>$target</name>
          <default/>
          <type/>
        </argument>
        <argument line="266">
          <name>$message</name>
          <default>'%s'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="279" package="Default">
        <name>have</name>
        <argument line="279">
          <name>$target</name>
          <default/>
          <type/>
        </argument>
        <argument line="279">
          <name>$count</name>
          <default/>
          <type/>
        </argument>
        <argument line="279">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="279">
          <name>$messages</name>
          <default>'%s'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="294" package="Default">
        <name>match</name>
        <argument line="294">
          <name>$subject</name>
          <default/>
          <type/>
        </argument>
        <argument line="294">
          <name>$pattern</name>
          <default/>
          <type/>
        </argument>
        <argument line="294">
          <name>$message</name>
          <default>'%s'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="307" package="Default">
        <name>expect_error</name>
        <argument line="307">
          <name>$message</name>
          <default>'%s'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="313" package="Default">
        <name>expect_exception</name>
        <argument line="313">
          <name>$message</name>
          <default>'%s'</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="core/spec/spec_helper.php" hash="dc8055d31906231cef03035281bc4217" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File core/spec/spec_helper.php</error>
    </parse_markers>
    <include type="Require" line="3">
      <name>simpletest/autorun.php</name>
    </include>
    <include type="Require" line="4">
      <name>Unknown</name>
    </include>
    <include type="Require" line="5">
      <name>/spec.php</name>
    </include>
  </file>
  <file path="core/spec/inheritance_spec.php" hash="c897d4b92486c958a9db1800a01f2b72" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File core/spec/inheritance_spec.php</error>
      <error line="22">No DocBlock was found for Class Describe_H2o_block_tag</error>
      <error line="23">No DocBlock was found for Method prepare</error>
      <error line="27">No DocBlock was found for Method should_render_template_content</error>
      <error line="39">No DocBlock was found for Class Describe_h2o_extends_tag</error>
      <error line="40">No DocBlock was found for Method prepare</error>
      <error line="43">No DocBlock was found for Method should_render_inherited_template</error>
      <error line="53">No DocBlock was found for Class Describe_h2o_block_variable</error>
      <error line="54">No DocBlock was found for Method prepare</error>
      <error line="62">No DocBlock was found for Method should_output_name_of_block</error>
      <error line="73">No DocBlock was found for Method should_display_correct_block_depth_level</error>
      <error line="81">No DocBlock was found for Method should_be_able_to_output_parent_template_using_blog_super</error>
    </parse_markers>
    <include type="Require Once" line="2">
      <name>spec_helper.php</name>
    </include>
    <class final="false" abstract="false" line="22" namespace="default" package="Default">
      <name>Describe_H2o_block_tag</name>
      <extends>\SimpleSpec</extends>
      <full_name>\Describe_H2o_block_tag</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="23" package="Default">
        <name>prepare</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="27" package="Default">
        <name>should_render_template_content</name>
      </method>
    </class>
    <class final="false" abstract="false" line="39" namespace="default" package="Default">
      <name>Describe_h2o_extends_tag</name>
      <extends>\SimpleSpec</extends>
      <full_name>\Describe_h2o_extends_tag</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="40" package="Default">
        <name>prepare</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="43" package="Default">
        <name>should_render_inherited_template</name>
      </method>
    </class>
    <class final="false" abstract="false" line="53" namespace="default" package="Default">
      <name>Describe_h2o_block_variable</name>
      <extends>\SimpleSpec</extends>
      <full_name>\Describe_h2o_block_variable</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="54" package="Default">
        <name>prepare</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="62" package="Default">
        <name>should_output_name_of_block</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="73" package="Default">
        <name>should_display_correct_block_depth_level</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="81" package="Default">
        <name>should_be_able_to_output_parent_template_using_blog_super</name>
      </method>
    </class>
  </file>
  <file path="core/spec/parser_spec.php" hash="36c21be70e32dcb9f8a5cdc0161779a9" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File core/spec/parser_spec.php</error>
      <error line="4">No DocBlock was found for Class Describe_Parser_Patterns</error>
      <error line="6">No DocBlock was found for Method should_match_basic_operators</error>
      <error line="14">No DocBlock was found for Method should_match_numeric_values</error>
      <error line="19">No DocBlock was found for Method should_match_string</error>
      <error line="29">No DocBlock was found for Method shuold_match_i18n_string</error>
      <error line="33">No DocBlock was found for Method should_match_variable_name</error>
      <error line="39">No DocBlock was found for Method should_match_named_arguments</error>
      <error line="47">No DocBlock was found for Method should_match_operators</error>
      <error line="56">No DocBlock was found for Class Describe_Argument_Lexer</error>
      <error line="58">No DocBlock was found for Method should_parse_named_arguments</error>
      <error line="70">No DocBlock was found for Method should_parse_variable_contains_operators</error>
      <error line="77">No DocBlock was found for Method parse</error>
      <error line="82">No DocBlock was found for Class Describe_Lexer</error>
      <error line="84">No DocBlock was found for Class Describe_Parser</error>
    </parse_markers>
    <include type="Require Once" line="2">
      <name>spec_helper.php</name>
    </include>
    <class final="false" abstract="false" line="4" namespace="default" package="Default">
      <name>Describe_Parser_Patterns</name>
      <extends>\SimpleSpec</extends>
      <full_name>\Describe_Parser_Patterns</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="6" package="Default">
        <name>should_match_basic_operators</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="14" package="Default">
        <name>should_match_numeric_values</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="19" package="Default">
        <name>should_match_string</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="29" package="Default">
        <name>shuold_match_i18n_string</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="33" package="Default">
        <name>should_match_variable_name</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="39" package="Default">
        <name>should_match_named_arguments</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="47" package="Default">
        <name>should_match_operators</name>
      </method>
    </class>
    <class final="false" abstract="false" line="56" namespace="default" package="Default">
      <name>Describe_Argument_Lexer</name>
      <extends>\SimpleSpec</extends>
      <full_name>\Describe_Argument_Lexer</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="58" package="Default">
        <name>should_parse_named_arguments</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="70" package="Default">
        <name>should_parse_variable_contains_operators</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" line="77" package="Default">
        <name>parse</name>
        <argument line="77">
          <name>$string</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="82" namespace="default" package="Default">
      <name>Describe_Lexer</name>
      <extends>\SimpleSpec</extends>
      <full_name>\Describe_Lexer</full_name>
    </class>
    <class final="false" abstract="false" line="84" namespace="default" package="Default">
      <name>Describe_Parser</name>
      <extends>\SimpleSpec</extends>
      <full_name>\Describe_Parser</full_name>
    </class>
  </file>
  <file path="core/spec/tags_spec.php" hash="96700663c70215b6258ae422aaa3ae8c" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File core/spec/tags_spec.php</error>
      <error line="4">No DocBlock was found for Class Describe_if_tag</error>
      <error line="6">No DocBlock was found for Method should_evaluate_boolean_expression</error>
      <error line="13">No DocBlock was found for Class Describe_for_tag</error>
      <error line="14">No DocBlock was found for Method should_iterate_over_an_array_of_objects</error>
      <error line="21">No DocBlock was found for Method should_reverse_array_when_reversed_keyword_supplied</error>
      <error line="28">No DocBlock was found for Method should_only_iterable_over_limit_of_time_when_limit_keyword_supplied</error>
      <error line="40">No DocBlock was found for Method should_provide_variable_loop_in_for_block</error>
      <error line="69">No DocBlock was found for Class Describe_with_tag</error>
      <error line="71">No DocBlock was found for Method should_return_nested_items</error>
    </parse_markers>
    <include type="Require Once" line="2">
      <name>spec_helper.php</name>
    </include>
    <class final="false" abstract="false" line="4" namespace="default" package="Default">
      <name>Describe_if_tag</name>
      <extends>\SimpleSpec</extends>
      <full_name>\Describe_if_tag</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="6" package="Default">
        <name>should_evaluate_boolean_expression</name>
      </method>
    </class>
    <class final="false" abstract="false" line="13" namespace="default" package="Default">
      <name>Describe_for_tag</name>
      <extends>\SimpleSpec</extends>
      <full_name>\Describe_for_tag</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="14" package="Default">
        <name>should_iterate_over_an_array_of_objects</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="21" package="Default">
        <name>should_reverse_array_when_reversed_keyword_supplied</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="28" package="Default">
        <name>should_only_iterable_over_limit_of_time_when_limit_keyword_supplied</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="40" package="Default">
        <name>should_provide_variable_loop_in_for_block</name>
      </method>
    </class>
    <class final="false" abstract="false" line="69" namespace="default" package="Default">
      <name>Describe_with_tag</name>
      <extends>\SimpleSpec</extends>
      <full_name>\Describe_with_tag</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="71" package="Default">
        <name>should_return_nested_items</name>
      </method>
    </class>
  </file>
  <file path="core/spec/include_spec.php" hash="d1dfa8240411432a3928b256757cb241" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File core/spec/include_spec.php</error>
      <error line="4">No DocBlock was found for Class Describe_include_tag</error>
      <error line="5">No DocBlock was found for Method prepare</error>
      <error line="18">No DocBlock was found for Method should_include_SubTemplate</error>
      <error line="24">No DocBlock was found for Method should_be_able_to_include_in_nested_fashion</error>
    </parse_markers>
    <include type="Require Once" line="2">
      <name>spec_helper.php</name>
    </include>
    <class final="false" abstract="false" line="4" namespace="default" package="Default">
      <name>Describe_include_tag</name>
      <extends>\SimpleSpec</extends>
      <full_name>\Describe_include_tag</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="5" package="Default">
        <name>prepare</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="18" package="Default">
        <name>should_include_SubTemplate</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="24" package="Default">
        <name>should_be_able_to_include_in_nested_fashion</name>
      </method>
    </class>
  </file>
  <file path="core/spec/h2o_spec.php" hash="c93c59287c8cd31157954dff0479fd1f" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File core/spec/h2o_spec.php</error>
      <error line="2">No DocBlock was found for Class Describe_Template</error>
      <error line="4">No DocBlock was found for Method should_be_able_to_create_from_string</error>
      <error line="11">No DocBlock was found for Class Sample_Tag</error>
      <error line="13">No DocBlock was found for Class Describe_h2o_tag_registration</error>
      <error line="14">No DocBlock was found for Method should_be_pre_registered_with_default_tags</error>
      <error line="20">No DocBlock was found for Method should_be_able_to_register_a_new_tag</error>
      <error line="30">No DocBlock was found for Method should_be_able_to_register_tag_using_alias</error>
      <error line="49">No DocBlock was found for Class Describe_h2o_filter_registration</error>
      <error line="50">No DocBlock was found for Method should_pre_register_default_filters</error>
      <error line="74">No DocBlock was found for Method should_be_able_to_register_a_filter</error>
      <error line="80">No DocBlock was found for Method should_be_able_to_register_a_filter_collection</error>
      <error line="88">No DocBlock was found for Function sample_filter</error>
      <error line="92">No DocBlock was found for Class SampleFilters</error>
      <error line="93">No DocBlock was found for Method hello</error>
      <error line="98">No DocBlock was found for Function w</error>
    </parse_markers>
    <function namespace="default" line="88" package="Default">
      <name>sample_filter</name>
      <type>function</type>
      <argument line="88">
        <name>$value</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="default" line="98" package="Default">
      <name>w</name>
      <type>function</type>
      <argument line="98">
        <name>$str</name>
        <default/>
        <type/>
      </argument>
    </function>
    <class final="false" abstract="false" line="2" namespace="default" package="Default">
      <name>Describe_Template</name>
      <extends>\SimpleSpec</extends>
      <full_name>\Describe_Template</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="4" package="Default">
        <name>should_be_able_to_create_from_string</name>
      </method>
    </class>
    <class final="false" abstract="false" line="11" namespace="default" package="Default">
      <name>Sample_Tag</name>
      <extends>\H2o_Node</extends>
      <full_name>\Sample_Tag</full_name>
    </class>
    <class final="false" abstract="false" line="13" namespace="default" package="Default">
      <name>Describe_h2o_tag_registration</name>
      <extends>\SimpleSpec</extends>
      <full_name>\Describe_h2o_tag_registration</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="14" package="Default">
        <name>should_be_pre_registered_with_default_tags</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="20" package="Default">
        <name>should_be_able_to_register_a_new_tag</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="30" package="Default">
        <name>should_be_able_to_register_tag_using_alias</name>
      </method>
    </class>
    <class final="false" abstract="false" line="49" namespace="default" package="Default">
      <name>Describe_h2o_filter_registration</name>
      <extends>\SimpleSpec</extends>
      <full_name>\Describe_h2o_filter_registration</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="50" package="Default">
        <name>should_pre_register_default_filters</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="74" package="Default">
        <name>should_be_able_to_register_a_filter</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="80" package="Default">
        <name>should_be_able_to_register_a_filter_collection</name>
      </method>
    </class>
    <class final="false" abstract="false" line="92" namespace="default" package="Default">
      <name>SampleFilters</name>
      <extends>\FilterCollection</extends>
      <full_name>\SampleFilters</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="93" package="Default">
        <name>hello</name>
        <argument line="93">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="core/spec/loader_spec.php" hash="244674bb932afcbcc6ea68decb2d4f94" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File core/spec/loader_spec.php</error>
      <error line="4">No DocBlock was found for Class Describe_file_loader</error>
      <error line="6">No DocBlock was found for Method should_be_able_to_read_template</error>
      <error line="20">No DocBlock was found for Method should_be_able_to_load_template_lazily</error>
      <error line="29">No DocBlock was found for Method should_read_from_alternitive_working_path</error>
      <error line="36">No DocBlock was found for Method should_load_subtemplate_upon_extends_tag</error>
      <error line="46">No DocBlock was found for Method should_load_subtemplate_upon_include_tag</error>
      <error line="53">No DocBlock was found for Method shouble_cache_main_template</error>
      <error line="61">No DocBlock was found for Method should_invalidate_cache_if_any_subtemplates_has_updated</error>
      <error line="79">No DocBlock was found for Class Describe_hash_loader</error>
      <error line="80">No DocBlock was found for Method prepare</error>
      <error line="91">No DocBlock was found for Method should_read_files_to_loader</error>
      <error line="95">No DocBlock was found for Method should_read_sub_template_in_extends_tag</error>
      <error line="100">No DocBlock was found for Method should_read_sub_template_in_include_tag</error>
    </parse_markers>
    <include type="Require Once" line="2">
      <name>spec_helper.php</name>
    </include>
    <class final="false" abstract="false" line="4" namespace="default" package="Default">
      <name>Describe_file_loader</name>
      <extends>\SimpleSpec</extends>
      <full_name>\Describe_file_loader</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="6" package="Default">
        <name>should_be_able_to_read_template</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="20" package="Default">
        <name>should_be_able_to_load_template_lazily</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="29" package="Default">
        <name>should_read_from_alternitive_working_path</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="36" package="Default">
        <name>should_load_subtemplate_upon_extends_tag</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="46" package="Default">
        <name>should_load_subtemplate_upon_include_tag</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="53" package="Default">
        <name>shouble_cache_main_template</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="61" package="Default">
        <name>should_invalidate_cache_if_any_subtemplates_has_updated</name>
      </method>
    </class>
    <class final="false" abstract="false" line="79" namespace="default" package="Default">
      <name>Describe_hash_loader</name>
      <extends>\SimpleSpec</extends>
      <full_name>\Describe_hash_loader</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="80" package="Default">
        <name>prepare</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="91" package="Default">
        <name>should_read_files_to_loader</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="95" package="Default">
        <name>should_read_sub_template_in_extends_tag</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="100" package="Default">
        <name>should_read_sub_template_in_include_tag</name>
      </method>
    </class>
  </file>
  <file path="core/spec/runner.php" hash="7a40aa49c9b6cd8248c2378ae290325c" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File core/spec/runner.php</error>
      <error line="4">No DocBlock was found for Class AllTests</error>
      <error line="5">No DocBlock was found for Method AllTests</error>
    </parse_markers>
    <include type="Require" line="2">
      <name>spec_helper.php</name>
    </include>
    <class final="false" abstract="false" line="4" namespace="default" package="Default">
      <name>AllTests</name>
      <extends>\TestSuite</extends>
      <full_name>\AllTests</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="5" package="Default">
        <name>AllTests</name>
      </method>
    </class>
  </file>
  <file path="core/spec/nodes_spec.php" hash="d4e1461172bc434b8b0b706de232ecae" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File core/spec/nodes_spec.php</error>
      <error line="4">No DocBlock was found for Class Describe_text_node</error>
      <error line="5">No DocBlock was found for Method should_display_text_content</error>
      <error line="11">No DocBlock was found for Class Describe_comment_node</error>
      <error line="12">No DocBlock was found for Method should_not_display_comments</error>
      <error line="21">No DocBlock was found for Class Describe_variable_node</error>
      <error line="23">No DocBlock was found for Method should_render_name_in_a_h2o_context</error>
      <error line="29">No DocBlock was found for Method should_apply_filter_if_available</error>
    </parse_markers>
    <include type="Require Once" line="2">
      <name>spec_helper.php</name>
    </include>
    <class final="false" abstract="false" line="4" namespace="default" package="Default">
      <name>Describe_text_node</name>
      <extends>\SimpleSpec</extends>
      <full_name>\Describe_text_node</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="5" package="Default">
        <name>should_display_text_content</name>
      </method>
    </class>
    <class final="false" abstract="false" line="11" namespace="default" package="Default">
      <name>Describe_comment_node</name>
      <extends>\SimpleSpec</extends>
      <full_name>\Describe_comment_node</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="12" package="Default">
        <name>should_not_display_comments</name>
      </method>
    </class>
    <class final="false" abstract="false" line="21" namespace="default" package="Default">
      <name>Describe_variable_node</name>
      <extends>\SimpleSpec</extends>
      <full_name>\Describe_variable_node</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="23" package="Default">
        <name>should_render_name_in_a_h2o_context</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="29" package="Default">
        <name>should_apply_filter_if_available</name>
      </method>
    </class>
  </file>
  <file path="core/Module.php" hash="74df25dda0efd0a37fbbbddab7461f78" package="Core">
    <docblock>
      <description>TOODLE</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;
</long-description>
      <tag line="2" name="category" description="Framework"/>
      <tag line="2" name="package" description="Core"/>
      <tag line="2" name="author" description="Alexander Maslov &lt;it@delta-z.ru&gt;"/>
      <tag line="2" name="copyright" description="2011 Alexader Maslov (http://www.delta-z.ru)"/>
      <tag line="2" name="license" description="http://www.gnu.org/licenses/gpl-3.0.html GPL v3"/>
      <tag line="2" name="link" description="https://github.com/drakmail/toodle" link="https://github.com/drakmail/toodle"/>
    </docblock>
    <class final="false" abstract="false" line="21" namespace="toodle\core" package="Default">
      <name>Module</name>
      <extends/>
      <full_name>\toodle\core\Module</full_name>
      <docblock>
        <description>Base module class. Contains links to controller, model and view. Provides interface to interaction between
Controller, Model and View and compounds it together.</description>
        <long-description>
</long-description>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="protected" line="29" package="Default">
        <name>loadController</name>
        <docblock>
          <description>Load controller by action</description>
          <long-description>
</long-description>
          <tag line="24" name="param" description="" type="string" variable="$action">
            <type by_reference="false">\toodle\core\string</type>
          </tag>
          <tag line="24" name="return" description="" type="\toodle\core\Controller">
            <type by_reference="false">\toodle\core\Controller</type>
          </tag>
        </docblock>
        <argument line="29">
          <name>$action</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="core/Output.php" hash="b51c739295d622b1a603c73d103a7fc5" package="Core">
    <docblock>
      <description>TOODLE</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;
</long-description>
      <tag line="2" name="category" description="Framework"/>
      <tag line="2" name="package" description="Core"/>
      <tag line="2" name="author" description="Alexander Maslov &lt;it@delta-z.ru&gt;"/>
      <tag line="2" name="copyright" description="2011 Alexader Maslov (http://www.delta-z.ru)"/>
      <tag line="2" name="license" description="http://www.gnu.org/licenses/gpl-3.0.html GPL v3"/>
      <tag line="2" name="link" description="https://github.com/drakmail/toodle" link="https://github.com/drakmail/toodle"/>
    </docblock>
  </file>
  <file path="core/Core.php" hash="8c3917a20d236847a1cbb75e837d0117" package="Core">
    <docblock>
      <description>TOODLE</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;
</long-description>
      <tag line="3" name="category" description="Framework"/>
      <tag line="3" name="package" description="Core"/>
      <tag line="3" name="author" description="Alexander Maslov &lt;it@delta-z.ru&gt;"/>
      <tag line="3" name="copyright" description="2011 Alexader Maslov (http://www.delta-z.ru)"/>
      <tag line="3" name="license" description="http://www.gnu.org/licenses/gpl-3.0.html GPL v3"/>
      <tag line="3" name="link" description="https://github.com/drakmail/toodle" link="https://github.com/drakmail/toodle"/>
    </docblock>
    <include type="Require Once" line="17">
      <name>Security.php</name>
    </include>
    <class final="false" abstract="false" line="22" namespace="toodle\core" package="Default">
      <name>Core</name>
      <extends/>
      <full_name>\toodle\core\Core</full_name>
      <docblock>
        <description>Performs framework initialization</description>
        <long-description>
</long-description>
      </docblock>
      <property final="false" static="false" visibility="private" line="28" package="Default">
        <name>$get</name>
        <default/>
        <docblock>
          <description>Array of escaped $_GET elements</description>
          <long-description>
</long-description>
          <tag line="24" name="var" description="array" type="array">
            <type by_reference="false">\toodle\core\array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="34" package="Default">
        <name>$post</name>
        <default/>
        <docblock>
          <description>* Array of escaped $_POST elements</description>
          <long-description>
</long-description>
          <tag line="30" name="var" description="array" type="array">
            <type by_reference="false">\toodle\core\array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="41" package="Default">
        <name>__construct</name>
        <docblock>
          <description>Initialization of core class</description>
          <long-description>
</long-description>
          <tag line="36" name="param" description="array Get params array" type="\toodle\core\$get" variable="$get">
            <type by_reference="false">\toodle\core\$get</type>
          </tag>
          <tag line="36" name="param" description="array Post params array" type="\toodle\core\$post" variable="$post">
            <type by_reference="false">\toodle\core\$post</type>
          </tag>
        </docblock>
        <argument line="41">
          <name>$get</name>
          <default/>
          <type/>
        </argument>
        <argument line="41">
          <name>$post</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="60" package="Default">
        <name>getRoute</name>
        <docblock>
          <description>Returns class and method to call for given $get array</description>
          <long-description>
</long-description>
          <tag line="56" name="return" description="module and action by given $get array" type="array">
            <type by_reference="false">\toodle\core\array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="79" package="Default">
        <name>getGet</name>
        <docblock>
          <description>Returns value of given key of $get array</description>
          <long-description>
</long-description>
          <tag line="74" name="param" description="key of $get array" type="string" variable="$key">
            <type by_reference="false">\toodle\core\string</type>
          </tag>
          <tag line="74" name="return" description="returns the key of $get array, or empty string if key doesn't exists" type="string">
            <type by_reference="false">\toodle\core\string</type>
          </tag>
        </docblock>
        <argument line="79">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" line="90" package="Default">
        <name>setGet</name>
        <docblock>
          <description>Autoescape given array and set it as the internal $get array</description>
          <long-description>
</long-description>
          <tag line="86" name="param" description="" type="array" variable="$get">
            <type by_reference="false">\toodle\core\array</type>
          </tag>
        </docblock>
        <argument line="90">
          <name>$get</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="103" package="Default">
        <name>getPost</name>
        <docblock>
          <description>Returns value of given key of $post array</description>
          <long-description>
</long-description>
          <tag line="98" name="param" description="key of $post array" type="string" variable="$key">
            <type by_reference="false">\toodle\core\string</type>
          </tag>
          <tag line="98" name="return" description="returns key of $post array, or empty string if key doesn't exists" type="string">
            <type by_reference="false">\toodle\core\string</type>
          </tag>
        </docblock>
        <argument line="103">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" line="114" package="Default">
        <name>setPost</name>
        <docblock>
          <description>Autoescape given array and set it as the internal $post array</description>
          <long-description>
</long-description>
          <tag line="110" name="param" description="" type="array" variable="$post">
            <type by_reference="false">\toodle\core\array</type>
          </tag>
        </docblock>
        <argument line="114">
          <name>$post</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="core/BasicController.php" hash="cb6a97c3af0e102eed56b91634697afe" package="Core">
    <docblock>
      <description>TOODLE</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;
</long-description>
      <tag line="2" name="category" description="Framework"/>
      <tag line="2" name="package" description="Core"/>
      <tag line="2" name="author" description="Alexander Maslov &lt;it@delta-z.ru&gt;"/>
      <tag line="2" name="copyright" description="2011 Alexader Maslov (http://www.delta-z.ru)"/>
      <tag line="2" name="license" description="http://www.gnu.org/licenses/gpl-3.0.html GPL v3"/>
      <tag line="2" name="link" description="https://github.com/drakmail/toodle" link="https://github.com/drakmail/toodle"/>
    </docblock>
    <parse_markers>
      <critical line="17">No short description for class BasicController</critical>
      <error line="22">No DocBlock was found for Property $module_name</error>
      <error line="24">No DocBlock was found for Method __construct</error>
    </parse_markers>
    <class final="false" abstract="true" line="20" namespace="toodle\core" package="Default">
      <name>BasicController</name>
      <extends/>
      <full_name>\toodle\core\BasicController</full_name>
      <docblock>
        <description/>
        <long-description>
</long-description>
      </docblock>
      <property final="false" static="false" visibility="protected" line="22" package="Default">
        <name>$module_name</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="24" package="Default">
        <name>__construct</name>
        <argument line="24">
          <name>$module_name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="34" package="Default">
        <name>loadModel</name>
        <docblock>
          <description>Load model by name</description>
          <long-description>
</long-description>
          <tag line="28" name="static" description=""/>
          <tag line="28" name="param" description="" type="string" variable="$name">
            <type by_reference="false">\toodle\core\string</type>
          </tag>
          <tag line="28" name="return" description="" type="\toodle\core\Model">
            <type by_reference="false">\toodle\core\Model</type>
          </tag>
        </docblock>
        <argument line="34">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="45" package="Default">
        <name>loadView</name>
        <docblock>
          <description>Load view by name</description>
          <long-description>
</long-description>
          <tag line="39" name="param" description="" type="string" variable="$name">
            <type by_reference="false">\toodle\core\string</type>
          </tag>
          <tag line="39" name="param" description="" type="array" variable="$params">
            <type by_reference="false">\toodle\core\array</type>
          </tag>
          <tag line="39" name="return" description="Page" type="string">
            <type by_reference="false">\toodle\core\string</type>
          </tag>
        </docblock>
        <argument line="45">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="45">
          <name>$params</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="core/h2o/loaders.php" hash="b300b582cb7af4756b57b21a8c1248dd" package="Default">
    <docblock>
      <description/>
      <long-description>
</long-description>
      <tag line="2" name="author" description="taylor.luk"/>
      <tag line="2" name="todo" description="FileLoader need more test coverage"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file core/h2o/loaders.php</error>
      <critical line="2">No short description for class H2o_Loader</critical>
      <error line="8">No DocBlock was found for Property $parser</error>
      <error line="9">No DocBlock was found for Property $runtime</error>
      <error line="10">No DocBlock was found for Property $cached</error>
      <error line="11">No DocBlock was found for Property $cache</error>
      <error line="12">No DocBlock was found for Property $searchpath</error>
      <error line="14">No DocBlock was found for Method read</error>
      <error line="15">No DocBlock was found for Method cache_read</error>
      <error line="18">No DocBlock was found for Class H2o_File_Loader</error>
      <error line="20">No DocBlock was found for Method __construct</error>
      <error line="36">No DocBlock was found for Method setOptions</error>
      <error line="42">No DocBlock was found for Method read</error>
      <error line="55">No DocBlock was found for Method get_template_path</error>
      <error line="77">No DocBlock was found for Method read_cache</error>
      <error line="111">No DocBlock was found for Method flush_cache</error>
      <error line="115">No DocBlock was found for Method expired</error>
      <error line="130">No DocBlock was found for Function file_loader</error>
      <error line="134">No DocBlock was found for Class H2o_Hash_Loader</error>
      <error line="136">No DocBlock was found for Method __construct</error>
      <error line="140">No DocBlock was found for Method setOptions</error>
      <error line="142">No DocBlock was found for Method read</error>
      <error line="148">No DocBlock was found for Method read_cache</error>
      <error line="153">No DocBlock was found for Function hash_loader</error>
      <notice line="161">Argument $options is missing from the function Docblock</notice>
      <error line="171">No DocBlock was found for Class H2o_File_Cache</error>
      <error line="172">No DocBlock was found for Property $ttl</error>
      <error line="173">No DocBlock was found for Property $prefix</error>
      <error line="175">No DocBlock was found for Method __construct</error>
      <error line="193">No DocBlock was found for Method read</error>
      <error line="205">No DocBlock was found for Method write</error>
      <error line="211">No DocBlock was found for Method flush</error>
      <error line="218">No DocBlock was found for Class H2o_Apc_Cache</error>
      <error line="219">No DocBlock was found for Property $ttl</error>
      <error line="220">No DocBlock was found for Property $prefix</error>
      <error line="222">No DocBlock was found for Method __construct</error>
      <error line="234">No DocBlock was found for Method read</error>
      <error line="238">No DocBlock was found for Method write</error>
      <error line="242">No DocBlock was found for Method flush</error>
      <error line="248">No DocBlock was found for Class H2o_Memcache_Cache</error>
      <error line="249">No DocBlock was found for Property $ttl</error>
      <error line="250">No DocBlock was found for Property $prefix</error>
      <critical line="251">No short description for property $host</critical>
      <error line="255">No DocBlock was found for Property $port</error>
      <error line="256">No DocBlock was found for Property $object</error>
      <error line="257">No DocBlock was found for Method __construct</error>
      <error line="279">No DocBlock was found for Method read</error>
      <error line="283">No DocBlock was found for Method write</error>
      <error line="287">No DocBlock was found for Method flush</error>
    </parse_markers>
    <function namespace="default" line="130" package="Default">
      <name>file_loader</name>
      <type>function</type>
      <argument line="130">
        <name>$file</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="default" line="153" package="Default">
      <name>hash_loader</name>
      <type>function</type>
      <argument line="153">
        <name>$hash</name>
        <default>array()</default>
        <type/>
      </argument>
    </function>
    <function namespace="default" line="161" package="Default">
      <name>h2o_cache</name>
      <type>function</type>
      <docblock>
        <description>Cache subsystem</description>
        <long-description>
</long-description>
      </docblock>
      <argument line="161">
        <name>$options</name>
        <default>array()</default>
        <type/>
      </argument>
    </function>
    <class final="false" abstract="false" line="7" namespace="default" package="Default">
      <name>H2o_Loader</name>
      <extends/>
      <full_name>\H2o_Loader</full_name>
      <docblock>
        <description/>
        <long-description>
</long-description>
        <tag line="2" name="author" description="taylor.luk"/>
        <tag line="2" name="todo" description="FileLoader need more test coverage"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="8" package="Default">
        <name>$parser</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="9" package="Default">
        <name>$runtime</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="10" package="Default">
        <name>$cached</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="protected" line="11" package="Default">
        <name>$cache</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="public" line="12" package="Default">
        <name>$searchpath</name>
        <default>false</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="14" package="Default">
        <name>read</name>
        <argument line="14">
          <name>$filename</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="15" package="Default">
        <name>cache_read</name>
        <argument line="15">
          <name>$file</name>
          <default/>
          <type/>
        </argument>
        <argument line="15">
          <name>$object</name>
          <default/>
          <type/>
        </argument>
        <argument line="15">
          <name>$ttl</name>
          <default>3600</default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="18" namespace="default" package="Default">
      <name>H2o_File_Loader</name>
      <extends>\H2o_Loader</extends>
      <full_name>\H2o_File_Loader</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="20" package="Default">
        <name>__construct</name>
        <argument line="20">
          <name>$searchpath</name>
          <default/>
          <type/>
        </argument>
        <argument line="20">
          <name>$options</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="36" package="Default">
        <name>setOptions</name>
        <argument line="36">
          <name>$options</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="42" package="Default">
        <name>read</name>
        <argument line="42">
          <name>$filename</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="55" package="Default">
        <name>get_template_path</name>
        <argument line="55">
          <name>$search_path</name>
          <default/>
          <type/>
        </argument>
        <argument line="55">
          <name>$filename</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="77" package="Default">
        <name>read_cache</name>
        <argument line="77">
          <name>$filename</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="111" package="Default">
        <name>flush_cache</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="115" package="Default">
        <name>expired</name>
        <argument line="115">
          <name>$object</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="134" namespace="default" package="Default">
      <name>H2o_Hash_Loader</name>
      <extends/>
      <full_name>\H2o_Hash_Loader</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="136" package="Default">
        <name>__construct</name>
        <argument line="136">
          <name>$scope</name>
          <default/>
          <type/>
        </argument>
        <argument line="136">
          <name>$options</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="140" package="Default">
        <name>setOptions</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="142" package="Default">
        <name>read</name>
        <argument line="142">
          <name>$file</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="148" package="Default">
        <name>read_cache</name>
        <argument line="148">
          <name>$file</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="171" namespace="default" package="Default">
      <name>H2o_File_Cache</name>
      <extends/>
      <full_name>\H2o_File_Cache</full_name>
      <property final="false" static="false" visibility="public" line="172" package="Default">
        <name>$ttl</name>
        <default>3600</default>
      </property>
      <property final="false" static="false" visibility="public" line="173" package="Default">
        <name>$prefix</name>
        <default>'h2o_'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="175" package="Default">
        <name>__construct</name>
        <argument line="175">
          <name>$options</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="193" package="Default">
        <name>read</name>
        <argument line="193">
          <name>$filename</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="205" package="Default">
        <name>write</name>
        <argument line="205">
          <name>$filename</name>
          <default/>
          <type/>
        </argument>
        <argument line="205">
          <name>$object</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="211" package="Default">
        <name>flush</name>
      </method>
    </class>
    <class final="false" abstract="false" line="218" namespace="default" package="Default">
      <name>H2o_Apc_Cache</name>
      <extends/>
      <full_name>\H2o_Apc_Cache</full_name>
      <property final="false" static="false" visibility="public" line="219" package="Default">
        <name>$ttl</name>
        <default>3600</default>
      </property>
      <property final="false" static="false" visibility="public" line="220" package="Default">
        <name>$prefix</name>
        <default>'h2o_'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="222" package="Default">
        <name>__construct</name>
        <argument line="222">
          <name>$options</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="234" package="Default">
        <name>read</name>
        <argument line="234">
          <name>$filename</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="238" package="Default">
        <name>write</name>
        <argument line="238">
          <name>$filename</name>
          <default/>
          <type/>
        </argument>
        <argument line="238">
          <name>$object</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="242" package="Default">
        <name>flush</name>
      </method>
    </class>
    <class final="false" abstract="false" line="248" namespace="default" package="Default">
      <name>H2o_Memcache_Cache</name>
      <extends/>
      <full_name>\H2o_Memcache_Cache</full_name>
      <property final="false" static="false" visibility="public" line="249" package="Default">
        <name>$ttl</name>
        <default>3600</default>
      </property>
      <property final="false" static="false" visibility="public" line="250" package="Default">
        <name>$prefix</name>
        <default>'h2o_'</default>
      </property>
      <property final="false" static="false" visibility="public" line="254" package="Default">
        <name>$host</name>
        <default>'unix:///tmp/memcached.sock'</default>
        <docblock>
          <description/>
          <long-description>
</long-description>
          <tag line="251" name="var" description="default is file socket" type="\host">
            <type by_reference="false">\host</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="255" package="Default">
        <name>$port</name>
        <default>0</default>
      </property>
      <property final="false" static="false" visibility="public" line="256" package="Default">
        <name>$object</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="257" package="Default">
        <name>__construct</name>
        <argument line="257">
          <name>$scope</name>
          <default/>
          <type/>
        </argument>
        <argument line="257">
          <name>$options</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="279" package="Default">
        <name>read</name>
        <argument line="279">
          <name>$filename</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="283" package="Default">
        <name>write</name>
        <argument line="283">
          <name>$filename</name>
          <default/>
          <type/>
        </argument>
        <argument line="283">
          <name>$content</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="287" package="Default">
        <name>flush</name>
      </method>
    </class>
  </file>
  <file path="core/h2o/nodes.php" hash="662727029b3bfa0a1d42960e0262de2c" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File core/h2o/nodes.php</error>
      <error line="6">No DocBlock was found for Class H2o_Node</error>
      <error line="7">No DocBlock was found for Property $position</error>
      <error line="8">No DocBlock was found for Method __construct</error>
      <error line="10">No DocBlock was found for Method render</error>
      <error line="13">No DocBlock was found for Class NodeList</error>
      <error line="14">No DocBlock was found for Property $parser</error>
      <error line="15">No DocBlock was found for Property $list</error>
      <error line="17">No DocBlock was found for Method __construct</error>
      <error line="25">No DocBlock was found for Method render</error>
      <error line="31">No DocBlock was found for Method append</error>
      <error line="35">No DocBlock was found for Method extend</error>
      <error line="39">No DocBlock was found for Method getLength</error>
      <error line="43">No DocBlock was found for Method getIterator</error>
      <error line="48">No DocBlock was found for Class VariableNode</error>
      <error line="49">No DocBlock was found for Property $filters</error>
      <error line="50">No DocBlock was found for Property $variable</error>
      <error line="52">No DocBlock was found for Method __construct</error>
      <error line="58">No DocBlock was found for Method render</error>
      <error line="65">No DocBlock was found for Class CommentNode</error>
      <error line="67">No DocBlock was found for Class TextNode</error>
      <error line="68">No DocBlock was found for Property $content</error>
      <error line="69">No DocBlock was found for Method __construct</error>
      <error line="74">No DocBlock was found for Method render</error>
      <error line="78">No DocBlock was found for Method is_blank</error>
    </parse_markers>
    <class final="false" abstract="false" line="6" namespace="default" package="Default">
      <name>H2o_Node</name>
      <extends/>
      <full_name>\H2o_Node</full_name>
      <property final="false" static="false" visibility="public" line="7" package="Default">
        <name>$position</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="8" package="Default">
        <name>__construct</name>
        <argument line="8">
          <name>$argstring</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="10" package="Default">
        <name>render</name>
        <argument line="10">
          <name>$context</name>
          <default/>
          <type/>
        </argument>
        <argument line="10">
          <name>$stream</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="13" namespace="default" package="Default">
      <name>NodeList</name>
      <extends>\H2o_Node</extends>
      <full_name>\NodeList</full_name>
      <implements>\IteratorAggregate</implements>
      <property final="false" static="false" visibility="public" line="14" package="Default">
        <name>$parser</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="15" package="Default">
        <name>$list</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="17" package="Default">
        <name>__construct</name>
        <argument line="17">
          <name>$parser</name>
          <default/>
          <type/>
        </argument>
        <argument line="17">
          <name>$initial</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="17">
          <name>$position</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="25" package="Default">
        <name>render</name>
        <argument line="25">
          <name>$context</name>
          <default/>
          <type/>
        </argument>
        <argument line="25">
          <name>$stream</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="31" package="Default">
        <name>append</name>
        <argument line="31">
          <name>$node</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="35" package="Default">
        <name>extend</name>
        <argument line="35">
          <name>$nodes</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="39" package="Default">
        <name>getLength</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="43" package="Default">
        <name>getIterator</name>
      </method>
    </class>
    <class final="false" abstract="false" line="48" namespace="default" package="Default">
      <name>VariableNode</name>
      <extends>\H2o_Node</extends>
      <full_name>\VariableNode</full_name>
      <property final="false" static="false" visibility="private" line="49" package="Default">
        <name>$filters</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="public" line="50" package="Default">
        <name>$variable</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="52" package="Default">
        <name>__construct</name>
        <argument line="52">
          <name>$variable</name>
          <default/>
          <type/>
        </argument>
        <argument line="52">
          <name>$filters</name>
          <default/>
          <type/>
        </argument>
        <argument line="52">
          <name>$position</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="58" package="Default">
        <name>render</name>
        <argument line="58">
          <name>$context</name>
          <default/>
          <type/>
        </argument>
        <argument line="58">
          <name>$stream</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="65" namespace="default" package="Default">
      <name>CommentNode</name>
      <extends>\H2o_Node</extends>
      <full_name>\CommentNode</full_name>
    </class>
    <class final="false" abstract="false" line="67" namespace="default" package="Default">
      <name>TextNode</name>
      <extends>\H2o_Node</extends>
      <full_name>\TextNode</full_name>
      <property final="false" static="false" visibility="public" line="68" package="Default">
        <name>$content</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="69" package="Default">
        <name>__construct</name>
        <argument line="69">
          <name>$content</name>
          <default/>
          <type/>
        </argument>
        <argument line="69">
          <name>$position</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="74" package="Default">
        <name>render</name>
        <argument line="74">
          <name>$context</name>
          <default/>
          <type/>
        </argument>
        <argument line="74">
          <name>$stream</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="78" package="Default">
        <name>is_blank</name>
      </method>
    </class>
  </file>
  <file path="core/h2o/context.php" hash="46856ef310898e9d080ef36b8e58bbd9" package="Default">
    <docblock>
      <description>Context object
 encapsulate context, resolve name</description>
      <long-description>
</long-description>
    </docblock>
    <parse_markers>
      <error line="3">No Page-level DocBlock was found in file core/h2o/context.php</error>
      <error line="8">No DocBlock was found for Property $safeClass</error>
      <error line="9">No DocBlock was found for Property $scopes</error>
      <error line="10">No DocBlock was found for Property $options</error>
      <error line="11">No DocBlock was found for Property $autoescape</error>
      <error line="13">No DocBlock was found for Property $arrayMethods</error>
      <error line="14">No DocBlock was found for Property $lookupTable</error>
      <error line="16">No DocBlock was found for Method __construct</error>
      <error line="30">No DocBlock was found for Method push</error>
      <error line="43">No DocBlock was found for Method offsetExists</error>
      <error line="50">No DocBlock was found for Method offsetGet</error>
      <error line="58">No DocBlock was found for Method offsetSet</error>
      <error line="64">No DocBlock was found for Method offsetUnset</error>
      <error line="70">No DocBlock was found for Method extend</error>
      <error line="74">No DocBlock was found for Method set</error>
      <error line="78">No DocBlock was found for Method get</error>
      <error line="82">No DocBlock was found for Method isDefined</error>
      <error line="135">No DocBlock was found for Method getVariable</error>
      <error line="178">No DocBlock was found for Method applyFilters</error>
      <error line="203">No DocBlock was found for Method escape</error>
      <error line="225">No DocBlock was found for Method externalLookup</error>
      <error line="237">No DocBlock was found for Class BlockContext</error>
      <error line="238">No DocBlock was found for Property $h2o_safe</error>
      <error line="239">No DocBlock was found for Property $block</error>
      <error line="239">No DocBlock was found for Property $index</error>
      <error line="240">No DocBlock was found for Property $context</error>
      <error line="242">No DocBlock was found for Method __construct</error>
      <error line="248">No DocBlock was found for Method name</error>
      <error line="252">No DocBlock was found for Method depth</error>
      <error line="256">No DocBlock was found for Method super</error>
      <error line="262">No DocBlock was found for Method __toString</error>
    </parse_markers>
    <class final="false" abstract="false" line="7" namespace="default" package="Default">
      <name>H2o_Context</name>
      <extends/>
      <full_name>\H2o_Context</full_name>
      <docblock>
        <description>Context object
 encapsulate context, resolve name</description>
        <long-description>
</long-description>
      </docblock>
      <implements>\ArrayAccess</implements>
      <property final="false" static="false" visibility="public" line="8" package="Default">
        <name>$safeClass</name>
        <default>array('stdClass'</default>
      </property>
      <property final="false" static="false" visibility="public" line="9" package="Default">
        <name>$scopes</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="10" package="Default">
        <name>$options</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="11" package="Default">
        <name>$autoescape</name>
        <default>true</default>
      </property>
      <property final="false" static="false" visibility="private" line="13" package="Default">
        <name>$arrayMethods</name>
        <default>array('first'=&gt; 0</default>
      </property>
      <property final="false" static="true" visibility="public" line="14" package="Default">
        <name>$lookupTable</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="16" package="Default">
        <name>__construct</name>
        <argument line="16">
          <name>$context</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="16">
          <name>$options</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="30" package="Default">
        <name>push</name>
        <argument line="30">
          <name>$layer</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="37" package="Default">
        <name>pop</name>
        <docblock>
          <description>pop the most recent layer</description>
          <long-description>
</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="43" package="Default">
        <name>offsetExists</name>
        <argument line="43">
          <name>$offset</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="50" package="Default">
        <name>offsetGet</name>
        <argument line="50">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="58" package="Default">
        <name>offsetSet</name>
        <argument line="58">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="58">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="64" package="Default">
        <name>offsetUnset</name>
        <argument line="64">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="70" package="Default">
        <name>extend</name>
        <argument line="70">
          <name>$context</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="74" package="Default">
        <name>set</name>
        <argument line="74">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="74">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="78" package="Default">
        <name>get</name>
        <argument line="78">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="82" package="Default">
        <name>isDefined</name>
        <argument line="82">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="94" package="Default">
        <name>resolve</name>
        <docblock>
          <description>Variable name</description>
          <long-description>
</long-description>
          <tag line="85" name="param" description="variable name or array(0 =&gt; variable name, 'filters' =&gt; filters array)" type="\$var" variable="$var">
            <type by_reference="false">\$var</type>
          </tag>
          <tag line="85" name="return" description="" type="\unknown_type">
            <type by_reference="false">\unknown_type</type>
          </tag>
        </docblock>
        <argument line="94">
          <name>$var</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="135" package="Default">
        <name>getVariable</name>
        <argument line="135">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="178" package="Default">
        <name>applyFilters</name>
        <argument line="178">
          <name>$object</name>
          <default/>
          <type/>
        </argument>
        <argument line="178">
          <name>$filters</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="203" package="Default">
        <name>escape</name>
        <argument line="203">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
        <argument line="203">
          <name>$var</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="225" package="Default">
        <name>externalLookup</name>
        <argument line="225">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="237" namespace="default" package="Default">
      <name>BlockContext</name>
      <extends/>
      <full_name>\BlockContext</full_name>
      <property final="false" static="false" visibility="public" line="238" package="Default">
        <name>$h2o_safe</name>
        <default>array('name'</default>
      </property>
      <property final="false" static="false" visibility="public" line="239" package="Default">
        <name>$block</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="239" package="Default">
        <name>$index</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="240" package="Default">
        <name>$context</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="242" package="Default">
        <name>__construct</name>
        <argument line="242">
          <name>$block</name>
          <default/>
          <type/>
        </argument>
        <argument line="242">
          <name>$context</name>
          <default/>
          <type/>
        </argument>
        <argument line="242">
          <name>$index</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="248" package="Default">
        <name>name</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="252" package="Default">
        <name>depth</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="256" package="Default">
        <name>super</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="262" package="Default">
        <name>__toString</name>
      </method>
    </class>
  </file>
  <file path="core/h2o/tags.php" hash="14723cf5929a30fe4fc15a0678a5c79e" package="Default">
    <docblock>
      <description/>
      <long-description>
</long-description>
      <tag line="2" name="author" description="taylor.luk"/>
      <tag line="2" name="todo" description="tags need more test coverage"/>
    </docblock>
    <parse_markers>
      <error line="2">No Page-level DocBlock was found in file core/h2o/tags.php</error>
      <error line="21">No DocBlock was found for Property $nodelist_true</error>
      <error line="22">No DocBlock was found for Property $nodelist_false</error>
      <error line="23">No DocBlock was found for Property $_varlist</error>
      <error line="24">No DocBlock was found for Property $_last_seen</error>
      <error line="26">No DocBlock was found for Method __construct</error>
      <error line="39">No DocBlock was found for Method render</error>
      <error line="61">No DocBlock was found for Class If_Tag</error>
      <error line="62">No DocBlock was found for Property $body</error>
      <error line="63">No DocBlock was found for Property $else</error>
      <error line="64">No DocBlock was found for Property $negate</error>
      <error line="66">No DocBlock was found for Method __construct</error>
      <error line="84">No DocBlock was found for Method render</error>
      <error line="91">No DocBlock was found for Method test</error>
      <error line="97">No DocBlock was found for Class For_Tag</error>
      <error line="98">No DocBlock was found for Property $position</error>
      <error line="99">No DocBlock was found for Property $iteratable</error>
      <error line="99">No DocBlock was found for Property $key</error>
      <error line="99">No DocBlock was found for Property $item</error>
      <error line="99">No DocBlock was found for Property $body</error>
      <error line="99">No DocBlock was found for Property $else</error>
      <error line="99">No DocBlock was found for Property $limit</error>
      <error line="99">No DocBlock was found for Property $reversed</error>
      <error line="100">No DocBlock was found for Property $syntax</error>
      <error line="108">No DocBlock was found for Method __construct</error>
      <error line="131">No DocBlock was found for Method render</error>
      <error line="181">No DocBlock was found for Class Block_Tag</error>
      <error line="182">No DocBlock was found for Property $name</error>
      <error line="183">No DocBlock was found for Property $position</error>
      <error line="184">No DocBlock was found for Property $stack</error>
      <error line="185">No DocBlock was found for Property $syntax</error>
      <error line="187">No DocBlock was found for Method __construct</error>
      <error line="203">No DocBlock was found for Method addLayer</error>
      <error line="208">No DocBlock was found for Method render</error>
      <error line="220">No DocBlock was found for Class Extends_Tag</error>
      <error line="221">No DocBlock was found for Property $filename</error>
      <error line="222">No DocBlock was found for Property $position</error>
      <error line="223">No DocBlock was found for Property $nodelist</error>
      <error line="224">No DocBlock was found for Property $syntax</error>
      <error line="226">No DocBlock was found for Method __construct</error>
      <error line="259">No DocBlock was found for Method render</error>
      <error line="282">No DocBlock was found for Property $nodelist</error>
      <error line="283">No DocBlock was found for Property $syntax</error>
      <error line="284">No DocBlock was found for Property $_additional_context</error>
      <error line="286">No DocBlock was found for Method __construct</error>
      <error line="310">No DocBlock was found for Method render</error>
      <error line="325">No DocBlock was found for Class With_Tag</error>
      <error line="326">No DocBlock was found for Property $position</error>
      <error line="327">No DocBlock was found for Property $variable</error>
      <error line="327">No DocBlock was found for Property $shortcut</error>
      <error line="328">No DocBlock was found for Property $nodelist</error>
      <error line="329">No DocBlock was found for Property $syntax</error>
      <error line="331">No DocBlock was found for Method __construct</error>
      <error line="340">No DocBlock was found for Method render</error>
      <error line="349">No DocBlock was found for Class Cycle_Tag</error>
      <error line="350">No DocBlock was found for Property $uid</error>
      <error line="351">No DocBlock was found for Property $sequence</error>
      <error line="353">No DocBlock was found for Method __construct</error>
      <error line="363">No DocBlock was found for Method render</error>
      <error line="374">No DocBlock was found for Class Load_Tag</error>
      <error line="375">No DocBlock was found for Property $position</error>
      <error line="376">No DocBlock was found for Property $searchpath</error>
      <error line="377">No DocBlock was found for Property $extension</error>
      <error line="379">No DocBlock was found for Method __construct</error>
      <error line="389">No DocBlock was found for Method render</error>
      <error line="393">No DocBlock was found for Method appendPath</error>
      <error line="397">No DocBlock was found for Method load</error>
      <error line="414">No DocBlock was found for Class Debug_Tag</error>
      <error line="415">No DocBlock was found for Property $argument</error>
      <error line="416">No DocBlock was found for Method __construct</error>
      <error line="420">No DocBlock was found for Method render</error>
      <error line="431">No DocBlock was found for Class Comment_Tag</error>
      <error line="432">No DocBlock was found for Method __construct</error>
      <error line="436">No DocBlock was found for Method render</error>
      <error line="440">No DocBlock was found for Class Now_Tag</error>
      <error line="441">No DocBlock was found for Method __construct</error>
      <error line="448">No DocBlock was found for Method render</error>
      <error line="454">No DocBlock was found for Class Autoescape_Tag</error>
      <error line="455">No DocBlock was found for Property $enable</error>
      <error line="457">No DocBlock was found for Method __construct</error>
      <error line="467">No DocBlock was found for Method render</error>
      <error line="472">No DocBlock was found for Class Csrf_token_Tag</error>
      <error line="473">No DocBlock was found for Method render</error>
    </parse_markers>
    <class final="false" abstract="false" line="20" namespace="default" package="Default">
      <name>IfChanged_Tag</name>
      <extends>\H2o_Node</extends>
      <full_name>\IfChanged_Tag</full_name>
      <docblock>
        <description>ifchanged tag</description>
        <long-description>&lt;p&gt;Usage:&lt;/p&gt;

&lt;p&gt;Variable mode
{% ifchanged data.date %}...{% endifchanged %}&lt;/p&gt;

&lt;p&gt;Lazy mode *not implemented in h2o yet
{% ifchanged %}...{{ data.date }}...{% endifchanged %}&lt;/p&gt;
</long-description>
      </docblock>
      <property final="false" static="false" visibility="private" line="21" package="Default">
        <name>$nodelist_true</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="22" package="Default">
        <name>$nodelist_false</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="23" package="Default">
        <name>$_varlist</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="private" line="24" package="Default">
        <name>$_last_seen</name>
        <default>null</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="26" package="Default">
        <name>__construct</name>
        <argument line="26">
          <name>$argstring</name>
          <default/>
          <type/>
        </argument>
        <argument line="26">
          <name>$parser</name>
          <default/>
          <type/>
        </argument>
        <argument line="26">
          <name>$position</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="39" package="Default">
        <name>render</name>
        <argument line="39">
          <name>$context</name>
          <default/>
          <type/>
        </argument>
        <argument line="39">
          <name>$stream</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="61" namespace="default" package="Default">
      <name>If_Tag</name>
      <extends>\H2o_Node</extends>
      <full_name>\If_Tag</full_name>
      <property final="false" static="false" visibility="private" line="62" package="Default">
        <name>$body</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="63" package="Default">
        <name>$else</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="64" package="Default">
        <name>$negate</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="66" package="Default">
        <name>__construct</name>
        <argument line="66">
          <name>$argstring</name>
          <default/>
          <type/>
        </argument>
        <argument line="66">
          <name>$parser</name>
          <default/>
          <type/>
        </argument>
        <argument line="66">
          <name>$position</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="84" package="Default">
        <name>render</name>
        <argument line="84">
          <name>$context</name>
          <default/>
          <type/>
        </argument>
        <argument line="84">
          <name>$stream</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="91" package="Default">
        <name>test</name>
        <argument line="91">
          <name>$context</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="97" namespace="default" package="Default">
      <name>For_Tag</name>
      <extends>\H2o_Node</extends>
      <full_name>\For_Tag</full_name>
      <property final="false" static="false" visibility="public" line="98" package="Default">
        <name>$position</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="99" package="Default">
        <name>$iteratable</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="99" package="Default">
        <name>$key</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="99" package="Default">
        <name>$item</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="99" package="Default">
        <name>$body</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="99" package="Default">
        <name>$else</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="99" package="Default">
        <name>$limit</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="99" package="Default">
        <name>$reversed</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="100" package="Default">
        <name>$syntax</name>
        <default>'{
        ([a-zA-Z][a-zA-Z0-9-_]*)(?:,\s?([a-zA-Z][a-zA-Z0-9-_]*))?
        \s+in\s+
        ([a-zA-Z][a-zA-Z0-9-_]*(?:\.[a-zA-Z_0-9][a-zA-Z0-9_-]*)*)\s*   # Iteratable name
        (?:limit\s*:\s*(\d+))?\s*
        (reversed)?                                                     # Reverse keyword
    }x'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="108" package="Default">
        <name>__construct</name>
        <argument line="108">
          <name>$argstring</name>
          <default/>
          <type/>
        </argument>
        <argument line="108">
          <name>$parser</name>
          <default/>
          <type/>
        </argument>
        <argument line="108">
          <name>$position</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="131" package="Default">
        <name>render</name>
        <argument line="131">
          <name>$context</name>
          <default/>
          <type/>
        </argument>
        <argument line="131">
          <name>$stream</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="181" namespace="default" package="Default">
      <name>Block_Tag</name>
      <extends>\H2o_Node</extends>
      <full_name>\Block_Tag</full_name>
      <property final="false" static="false" visibility="public" line="182" package="Default">
        <name>$name</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="183" package="Default">
        <name>$position</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="184" package="Default">
        <name>$stack</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="185" package="Default">
        <name>$syntax</name>
        <default>'/^[a-zA-Z_][a-zA-Z0-9_-]*$/'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="187" package="Default">
        <name>__construct</name>
        <argument line="187">
          <name>$argstring</name>
          <default/>
          <type/>
        </argument>
        <argument line="187">
          <name>$parser</name>
          <default/>
          <type/>
        </argument>
        <argument line="187">
          <name>$position</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="203" package="Default">
        <name>addLayer</name>
        <argument line="203">
          <name>$nodelist</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="208" package="Default">
        <name>render</name>
        <argument line="208">
          <name>$context</name>
          <default/>
          <type/>
        </argument>
        <argument line="208">
          <name>$stream</name>
          <default/>
          <type/>
        </argument>
        <argument line="208">
          <name>$index</name>
          <default>1</default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="220" namespace="default" package="Default">
      <name>Extends_Tag</name>
      <extends>\H2o_Node</extends>
      <full_name>\Extends_Tag</full_name>
      <property final="false" static="false" visibility="public" line="221" package="Default">
        <name>$filename</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="222" package="Default">
        <name>$position</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="223" package="Default">
        <name>$nodelist</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="224" package="Default">
        <name>$syntax</name>
        <default>'/^["\'](.*?)["\']$/'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="226" package="Default">
        <name>__construct</name>
        <argument line="226">
          <name>$argstring</name>
          <default/>
          <type/>
        </argument>
        <argument line="226">
          <name>$parser</name>
          <default/>
          <type/>
        </argument>
        <argument line="226">
          <name>$position</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="259" package="Default">
        <name>render</name>
        <argument line="259">
          <name>$context</name>
          <default/>
          <type/>
        </argument>
        <argument line="259">
          <name>$stream</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="281" namespace="default" package="Default">
      <name>Include_Tag</name>
      <extends>\H2o_Node</extends>
      <full_name>\Include_Tag</full_name>
      <docblock>
        <description>include tag</description>
        <long-description>&lt;p&gt;Usage:&lt;/p&gt;

&lt;p&gt;Simple inclusion
    {% include "./subtemplate.html" %}&lt;/p&gt;

&lt;p&gt;Inclusion with additional context variables passing:
    {% include "./subtemplate.html" with foo=bar spam="eggs" %}&lt;/p&gt;

&lt;p&gt;Note: Double quotes matter. In this example 'foo' template variable of subtemplate.html
would be initialized with 'bar' variable contents (from main template context),
while 'spam' template variable of subtemplate.html would be set to simple string ('eggs').&lt;/p&gt;
</long-description>
      </docblock>
      <property final="false" static="false" visibility="private" line="282" package="Default">
        <name>$nodelist</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="283" package="Default">
        <name>$syntax</name>
        <default>'/^["\'](.*?)["\'](\s+with\s+(.+))?$/'</default>
      </property>
      <property final="false" static="false" visibility="private" line="284" package="Default">
        <name>$_additional_context</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="286" package="Default">
        <name>__construct</name>
        <argument line="286">
          <name>$argstring</name>
          <default/>
          <type/>
        </argument>
        <argument line="286">
          <name>$parser</name>
          <default/>
          <type/>
        </argument>
        <argument line="286">
          <name>$position</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="310" package="Default">
        <name>render</name>
        <argument line="310">
          <name>$context</name>
          <default/>
          <type/>
        </argument>
        <argument line="310">
          <name>$stream</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="325" namespace="default" package="Default">
      <name>With_Tag</name>
      <extends>\H2o_Node</extends>
      <full_name>\With_Tag</full_name>
      <property final="false" static="false" visibility="public" line="326" package="Default">
        <name>$position</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="327" package="Default">
        <name>$variable</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="327" package="Default">
        <name>$shortcut</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="328" package="Default">
        <name>$nodelist</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="329" package="Default">
        <name>$syntax</name>
        <default>'/^([\w]+(:?\.[\w\d]+)*)\s+as\s+([\w]+(:?\.[\w\d]+)?)$/'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="331" package="Default">
        <name>__construct</name>
        <argument line="331">
          <name>$argstring</name>
          <default/>
          <type/>
        </argument>
        <argument line="331">
          <name>$parser</name>
          <default/>
          <type/>
        </argument>
        <argument line="331">
          <name>$position</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="340" package="Default">
        <name>render</name>
        <argument line="340">
          <name>$context</name>
          <default/>
          <type/>
        </argument>
        <argument line="340">
          <name>$stream</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="349" namespace="default" package="Default">
      <name>Cycle_Tag</name>
      <extends>\H2o_Node</extends>
      <full_name>\Cycle_Tag</full_name>
      <property final="false" static="false" visibility="private" line="350" package="Default">
        <name>$uid</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="351" package="Default">
        <name>$sequence</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="353" package="Default">
        <name>__construct</name>
        <argument line="353">
          <name>$argstring</name>
          <default/>
          <type/>
        </argument>
        <argument line="353">
          <name>$parser</name>
          <default/>
          <type/>
        </argument>
        <argument line="353">
          <name>$pos</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="363" package="Default">
        <name>render</name>
        <argument line="363">
          <name>$context</name>
          <default/>
          <type/>
        </argument>
        <argument line="363">
          <name>$stream</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="374" namespace="default" package="Default">
      <name>Load_Tag</name>
      <extends>\H2o_Node</extends>
      <full_name>\Load_Tag</full_name>
      <property final="false" static="false" visibility="public" line="375" package="Default">
        <name>$position</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="376" package="Default">
        <name>$searchpath</name>
        <default>array(H2O_ROOT)</default>
      </property>
      <property final="false" static="false" visibility="private" line="377" package="Default">
        <name>$extension</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="379" package="Default">
        <name>__construct</name>
        <argument line="379">
          <name>$argstring</name>
          <default/>
          <type/>
        </argument>
        <argument line="379">
          <name>$parser</name>
          <default/>
          <type/>
        </argument>
        <argument line="379">
          <name>$pos</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="389" package="Default">
        <name>render</name>
        <argument line="389">
          <name>$context</name>
          <default/>
          <type/>
        </argument>
        <argument line="389">
          <name>$stream</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="393" package="Default">
        <name>appendPath</name>
        <argument line="393">
          <name>$path</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" line="397" package="Default">
        <name>load</name>
      </method>
    </class>
    <class final="false" abstract="false" line="414" namespace="default" package="Default">
      <name>Debug_Tag</name>
      <extends>\H2o_Node</extends>
      <full_name>\Debug_Tag</full_name>
      <property final="false" static="false" visibility="private" line="415" package="Default">
        <name>$argument</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="416" package="Default">
        <name>__construct</name>
        <argument line="416">
          <name>$argstring</name>
          <default/>
          <type/>
        </argument>
        <argument line="416">
          <name>$parser</name>
          <default/>
          <type/>
        </argument>
        <argument line="416">
          <name>$pos</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="420" package="Default">
        <name>render</name>
        <argument line="420">
          <name>$context</name>
          <default/>
          <type/>
        </argument>
        <argument line="420">
          <name>$stream</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="431" namespace="default" package="Default">
      <name>Comment_Tag</name>
      <extends>\H2o_Node</extends>
      <full_name>\Comment_Tag</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="432" package="Default">
        <name>__construct</name>
        <argument line="432">
          <name>$argstring</name>
          <default/>
          <type/>
        </argument>
        <argument line="432">
          <name>$parser</name>
          <default/>
          <type/>
        </argument>
        <argument line="432">
          <name>$position</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="436" package="Default">
        <name>render</name>
        <argument line="436">
          <name>$context</name>
          <default/>
          <type/>
        </argument>
        <argument line="436">
          <name>$stream</name>
          <default/>
          <type/>
        </argument>
        <argument line="436">
          <name>$index</name>
          <default>1</default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="440" namespace="default" package="Default">
      <name>Now_Tag</name>
      <extends>\H2o_Node</extends>
      <full_name>\Now_Tag</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="441" package="Default">
        <name>__construct</name>
        <argument line="441">
          <name>$argstring</name>
          <default/>
          <type/>
        </argument>
        <argument line="441">
          <name>$parser</name>
          <default/>
          <type/>
        </argument>
        <argument line="441">
          <name>$pos</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="448" package="Default">
        <name>render</name>
        <argument line="448">
          <name>$contxt</name>
          <default/>
          <type/>
        </argument>
        <argument line="448">
          <name>$stream</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="454" namespace="default" package="Default">
      <name>Autoescape_Tag</name>
      <extends>\H2o_Node</extends>
      <full_name>\Autoescape_Tag</full_name>
      <property final="false" static="false" visibility="protected" line="455" package="Default">
        <name>$enable</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="457" package="Default">
        <name>__construct</name>
        <argument line="457">
          <name>$argstring</name>
          <default/>
          <type/>
        </argument>
        <argument line="457">
          <name>$parser</name>
          <default/>
          <type/>
        </argument>
        <argument line="457">
          <name>$pos</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="467" package="Default">
        <name>render</name>
        <argument line="467">
          <name>$context</name>
          <default/>
          <type/>
        </argument>
        <argument line="467">
          <name>$stream</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="472" namespace="default" package="Default">
      <name>Csrf_token_Tag</name>
      <extends>\H2o_Node</extends>
      <full_name>\Csrf_token_Tag</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="473" package="Default">
        <name>render</name>
        <argument line="473">
          <name>$context</name>
          <default/>
          <type/>
        </argument>
        <argument line="473">
          <name>$stream</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="core/h2o/filters.php" hash="b6dbff2a899f1f955926383d640fdd4a" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File core/h2o/filters.php</error>
      <error line="3">No DocBlock was found for Class FilterCollection</error>
      <error line="6">No DocBlock was found for Class CoreFilters</error>
      <error line="7">No DocBlock was found for Method first</error>
      <error line="11">No DocBlock was found for Method last</error>
      <error line="15">No DocBlock was found for Method join</error>
      <error line="19">No DocBlock was found for Method length</error>
      <error line="23">No DocBlock was found for Method urlencode</error>
      <error line="36">No DocBlock was found for Method hyphenize</error>
      <error line="42">No DocBlock was found for Method urlize</error>
      <error line="48">No DocBlock was found for Method set_default</error>
      <error line="53">No DocBlock was found for Class StringFilters</error>
      <error line="55">No DocBlock was found for Method humanize</error>
      <error line="60">No DocBlock was found for Method capitalize</error>
      <error line="64">No DocBlock was found for Method titlize</error>
      <error line="68">No DocBlock was found for Method capfirst</error>
      <error line="73">No DocBlock was found for Method tighten_space</error>
      <error line="77">No DocBlock was found for Method escape</error>
      <error line="81">No DocBlock was found for Method escapejson</error>
      <error line="87">No DocBlock was found for Method force_escape</error>
      <error line="91">No DocBlock was found for Method e</error>
      <error line="95">No DocBlock was found for Method safe</error>
      <error line="99">No DocBlock was found for Method truncate</error>
      <error line="103">No DocBlock was found for Method limitwords</error>
      <error line="116">No DocBlock was found for Class NumberFilters</error>
      <error line="117">No DocBlock was found for Method filesize</error>
      <error line="141">No DocBlock was found for Method currency</error>
      <error line="184">No DocBlock was found for Class HtmlFilters</error>
      <error line="185">No DocBlock was found for Method base_url</error>
      <error line="189">No DocBlock was found for Method asset_url</error>
      <error line="193">No DocBlock was found for Method image_tag</error>
      <error line="198">No DocBlock was found for Method css_tag</error>
      <error line="203">No DocBlock was found for Method script_tag</error>
      <error line="207">No DocBlock was found for Method links_to</error>
      <error line="213">No DocBlock was found for Method links_with</error>
      <error line="217">No DocBlock was found for Method strip_tags</error>
      <error line="222">No DocBlock was found for Method linebreaks</error>
      <error line="228">No DocBlock was found for Method nl2br</error>
      <error line="232">No DocBlock was found for Method nl2pbr</error>
      <error line="241">No DocBlock was found for Method htmlAttribute</error>
      <error line="251">No DocBlock was found for Method extract</error>
      <error line="261">No DocBlock was found for Class DatetimeFilters</error>
      <error line="262">No DocBlock was found for Method date</error>
      <error line="271">No DocBlock was found for Method relative_time</error>
      <error line="303">No DocBlock was found for Method relative_date</error>
      <error line="333">No DocBlock was found for Method relative_datetime</error>
    </parse_markers>
    <class final="false" abstract="false" line="3" namespace="default" package="Default">
      <name>FilterCollection</name>
      <extends/>
      <full_name>\FilterCollection</full_name>
    </class>
    <class final="false" abstract="false" line="6" namespace="default" package="Default">
      <name>CoreFilters</name>
      <extends>\FilterCollection</extends>
      <full_name>\CoreFilters</full_name>
      <method final="false" abstract="false" static="true" visibility="public" line="7" package="Default">
        <name>first</name>
        <argument line="7">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="11" package="Default">
        <name>last</name>
        <argument line="11">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="15" package="Default">
        <name>join</name>
        <argument line="15">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
        <argument line="15">
          <name>$delimiter</name>
          <default>', '</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="19" package="Default">
        <name>length</name>
        <argument line="19">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="23" package="Default">
        <name>urlencode</name>
        <argument line="23">
          <name>$data</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="36" package="Default">
        <name>hyphenize</name>
        <argument line="36">
          <name>$string</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="42" package="Default">
        <name>urlize</name>
        <argument line="42">
          <name>$url</name>
          <default/>
          <type/>
        </argument>
        <argument line="42">
          <name>$truncate</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="48" package="Default">
        <name>set_default</name>
        <argument line="48">
          <name>$object</name>
          <default/>
          <type/>
        </argument>
        <argument line="48">
          <name>$default</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="53" namespace="default" package="Default">
      <name>StringFilters</name>
      <extends>\FilterCollection</extends>
      <full_name>\StringFilters</full_name>
      <method final="false" abstract="false" static="true" visibility="public" line="55" package="Default">
        <name>humanize</name>
        <argument line="55">
          <name>$string</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="60" package="Default">
        <name>capitalize</name>
        <argument line="60">
          <name>$string</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="64" package="Default">
        <name>titlize</name>
        <argument line="64">
          <name>$string</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="68" package="Default">
        <name>capfirst</name>
        <argument line="68">
          <name>$string</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="73" package="Default">
        <name>tighten_space</name>
        <argument line="73">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="77" package="Default">
        <name>escape</name>
        <argument line="77">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
        <argument line="77">
          <name>$attribute</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="81" package="Default">
        <name>escapejson</name>
        <argument line="81">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="87" package="Default">
        <name>force_escape</name>
        <argument line="87">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
        <argument line="87">
          <name>$attribute</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="91" package="Default">
        <name>e</name>
        <argument line="91">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
        <argument line="91">
          <name>$attribute</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="95" package="Default">
        <name>safe</name>
        <argument line="95">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="99" package="Default">
        <name>truncate</name>
        <argument line="99">
          <name>$string</name>
          <default/>
          <type/>
        </argument>
        <argument line="99">
          <name>$max</name>
          <default>50</default>
          <type/>
        </argument>
        <argument line="99">
          <name>$ends</name>
          <default>'...'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="103" package="Default">
        <name>limitwords</name>
        <argument line="103">
          <name>$text</name>
          <default/>
          <type/>
        </argument>
        <argument line="103">
          <name>$limit</name>
          <default>50</default>
          <type/>
        </argument>
        <argument line="103">
          <name>$ends</name>
          <default>'...'</default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="116" namespace="default" package="Default">
      <name>NumberFilters</name>
      <extends>\FilterCollection</extends>
      <full_name>\NumberFilters</full_name>
      <method final="false" abstract="false" static="true" visibility="public" line="117" package="Default">
        <name>filesize</name>
        <argument line="117">
          <name>$bytes</name>
          <default/>
          <type/>
        </argument>
        <argument line="117">
          <name>$round</name>
          <default>1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="141" package="Default">
        <name>currency</name>
        <argument line="141">
          <name>$amount</name>
          <default/>
          <type/>
        </argument>
        <argument line="141">
          <name>$currency</name>
          <default>'USD'</default>
          <type/>
        </argument>
        <argument line="141">
          <name>$precision</name>
          <default>2</default>
          <type/>
        </argument>
        <argument line="141">
          <name>$negateWithParentheses</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="184" namespace="default" package="Default">
      <name>HtmlFilters</name>
      <extends>\FilterCollection</extends>
      <full_name>\HtmlFilters</full_name>
      <method final="false" abstract="false" static="true" visibility="public" line="185" package="Default">
        <name>base_url</name>
        <argument line="185">
          <name>$url</name>
          <default/>
          <type/>
        </argument>
        <argument line="185">
          <name>$options</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="189" package="Default">
        <name>asset_url</name>
        <argument line="189">
          <name>$url</name>
          <default/>
          <type/>
        </argument>
        <argument line="189">
          <name>$options</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="193" package="Default">
        <name>image_tag</name>
        <argument line="193">
          <name>$url</name>
          <default/>
          <type/>
        </argument>
        <argument line="193">
          <name>$options</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="198" package="Default">
        <name>css_tag</name>
        <argument line="198">
          <name>$url</name>
          <default/>
          <type/>
        </argument>
        <argument line="198">
          <name>$options</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="203" package="Default">
        <name>script_tag</name>
        <argument line="203">
          <name>$url</name>
          <default/>
          <type/>
        </argument>
        <argument line="203">
          <name>$options</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="207" package="Default">
        <name>links_to</name>
        <argument line="207">
          <name>$text</name>
          <default/>
          <type/>
        </argument>
        <argument line="207">
          <name>$url</name>
          <default/>
          <type/>
        </argument>
        <argument line="207">
          <name>$options</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="213" package="Default">
        <name>links_with</name>
        <argument line="213">
          <name>$url</name>
          <default/>
          <type/>
        </argument>
        <argument line="213">
          <name>$text</name>
          <default/>
          <type/>
        </argument>
        <argument line="213">
          <name>$options</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="217" package="Default">
        <name>strip_tags</name>
        <argument line="217">
          <name>$text</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="222" package="Default">
        <name>linebreaks</name>
        <argument line="222">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
        <argument line="222">
          <name>$format</name>
          <default>'p'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="228" package="Default">
        <name>nl2br</name>
        <argument line="228">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="232" package="Default">
        <name>nl2pbr</name>
        <argument line="232">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" line="241" package="Default">
        <name>htmlAttribute</name>
        <argument line="241">
          <name>$attrs</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="241">
          <name>$data</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" line="251" package="Default">
        <name>extract</name>
        <argument line="251">
          <name>$attrs</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="251">
          <name>$data</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="261" namespace="default" package="Default">
      <name>DatetimeFilters</name>
      <extends>\FilterCollection</extends>
      <full_name>\DatetimeFilters</full_name>
      <method final="false" abstract="false" static="true" visibility="public" line="262" package="Default">
        <name>date</name>
        <argument line="262">
          <name>$time</name>
          <default/>
          <type/>
        </argument>
        <argument line="262">
          <name>$format</name>
          <default>'jS F Y H:i'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="271" package="Default">
        <name>relative_time</name>
        <argument line="271">
          <name>$timestamp</name>
          <default/>
          <type/>
        </argument>
        <argument line="271">
          <name>$format</name>
          <default>'g:iA'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="303" package="Default">
        <name>relative_date</name>
        <argument line="303">
          <name>$time</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="333" package="Default">
        <name>relative_datetime</name>
        <argument line="333">
          <name>$time</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="core/h2o/datatype.php" hash="ce3b14fbe8cc1009757b987a8cdd4f86" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File core/h2o/datatype.php</error>
      <error line="2">No DocBlock was found for Class StreamWriter</error>
      <error line="3">No DocBlock was found for Property $buffer</error>
      <error line="4">No DocBlock was found for Property $close</error>
      <error line="6">No DocBlock was found for Method __construct</error>
      <error line="10">No DocBlock was found for Method write</error>
      <error line="16">No DocBlock was found for Method close</error>
      <error line="22">No DocBlock was found for Class Evaluator</error>
      <error line="23">No DocBlock was found for Method gt</error>
      <error line="24">No DocBlock was found for Method ge</error>
      <error line="26">No DocBlock was found for Method lt</error>
      <error line="27">No DocBlock was found for Method le</error>
      <error line="29">No DocBlock was found for Method eq</error>
      <error line="30">No DocBlock was found for Method ne</error>
      <error line="32">No DocBlock was found for Method not_</error>
      <error line="33">No DocBlock was found for Method and_</error>
      <error line="34">No DocBlock was found for Method or_</error>
      <error line="41">No DocBlock was found for Method exec</error>
      <error line="68">No DocBlock was found for Method __construct</error>
      <error line="75">No DocBlock was found for Method write</error>
      <error line="84">No DocBlock was found for Property $pushed</error>
      <error line="85">No DocBlock was found for Property $stream</error>
      <error line="86">No DocBlock was found for Property $closed</error>
      <error line="87">No DocBlock was found for Property $c</error>
      <error line="89">No DocBlock was found for Method __construct</error>
      <error line="95">No DocBlock was found for Method pop</error>
      <error line="101">No DocBlock was found for Method feed</error>
      <error line="107">No DocBlock was found for Method push</error>
      <error line="116">No DocBlock was found for Method close</error>
      <error line="123">No DocBlock was found for Method isClosed</error>
      <error line="127">No DocBlock was found for Method current</error>
      <error line="131">No DocBlock was found for Method next</error>
      <error line="136">No DocBlock was found for Class H2o_Info</error>
      <error line="137">No DocBlock was found for Property $h2o_safe</error>
      <error line="138">No DocBlock was found for Property $name</error>
      <error line="139">No DocBlock was found for Property $description</error>
      <error line="140">No DocBlock was found for Property $version</error>
      <error line="142">No DocBlock was found for Method filters</error>
      <error line="146">No DocBlock was found for Method tags</error>
      <error line="150">No DocBlock was found for Method extensions</error>
      <notice line="158">Argument $string is missing from the function Docblock</notice>
      <error line="162">No DocBlock was found for Function is_sym</error>
      <error line="166">No DocBlock was found for Function symbol</error>
      <error line="170">No DocBlock was found for Function strip_regex</error>
    </parse_markers>
    <function namespace="default" line="158" package="Default">
      <name>sym_to_str</name>
      <type>function</type>
      <docblock>
        <description>Functions</description>
        <long-description>
</long-description>
      </docblock>
      <argument line="158">
        <name>$string</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="default" line="162" package="Default">
      <name>is_sym</name>
      <type>function</type>
      <argument line="162">
        <name>$string</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="default" line="166" package="Default">
      <name>symbol</name>
      <type>function</type>
      <argument line="166">
        <name>$string</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="default" line="170" package="Default">
      <name>strip_regex</name>
      <type>function</type>
      <argument line="170">
        <name>$regex</name>
        <default/>
        <type/>
      </argument>
      <argument line="170">
        <name>$delimiter</name>
        <default>'/'</default>
        <type/>
      </argument>
    </function>
    <class final="false" abstract="false" line="2" namespace="default" package="Default">
      <name>StreamWriter</name>
      <extends/>
      <full_name>\StreamWriter</full_name>
      <property final="false" static="false" visibility="public" line="3" package="Default">
        <name>$buffer</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="public" line="4" package="Default">
        <name>$close</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="6" package="Default">
        <name>__construct</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="10" package="Default">
        <name>write</name>
        <argument line="10">
          <name>$data</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="16" package="Default">
        <name>close</name>
      </method>
    </class>
    <class final="false" abstract="false" line="22" namespace="default" package="Default">
      <name>Evaluator</name>
      <extends/>
      <full_name>\Evaluator</full_name>
      <method final="false" abstract="false" static="true" visibility="public" line="23" package="Default">
        <name>gt</name>
        <argument line="23">
          <name>$l</name>
          <default/>
          <type/>
        </argument>
        <argument line="23">
          <name>$r</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="24" package="Default">
        <name>ge</name>
        <argument line="24">
          <name>$l</name>
          <default/>
          <type/>
        </argument>
        <argument line="24">
          <name>$r</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="26" package="Default">
        <name>lt</name>
        <argument line="26">
          <name>$l</name>
          <default/>
          <type/>
        </argument>
        <argument line="26">
          <name>$r</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="27" package="Default">
        <name>le</name>
        <argument line="27">
          <name>$l</name>
          <default/>
          <type/>
        </argument>
        <argument line="27">
          <name>$r</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="29" package="Default">
        <name>eq</name>
        <argument line="29">
          <name>$l</name>
          <default/>
          <type/>
        </argument>
        <argument line="29">
          <name>$r</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="30" package="Default">
        <name>ne</name>
        <argument line="30">
          <name>$l</name>
          <default/>
          <type/>
        </argument>
        <argument line="30">
          <name>$r</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="32" package="Default">
        <name>not_</name>
        <argument line="32">
          <name>$bool</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="33" package="Default">
        <name>and_</name>
        <argument line="33">
          <name>$l</name>
          <default/>
          <type/>
        </argument>
        <argument line="33">
          <name>$r</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="34" package="Default">
        <name>or_</name>
        <argument line="34">
          <name>$l</name>
          <default/>
          <type/>
        </argument>
        <argument line="34">
          <name>$r</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="41" package="Default">
        <name>exec</name>
        <argument line="41">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
        <argument line="41">
          <name>$context</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="67" namespace="default" package="Default">
      <name>H2o_Token</name>
      <extends/>
      <full_name>\H2o_Token</full_name>
      <docblock>
        <description>$type of token, Block | Variable</description>
        <long-description>
</long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" line="68" package="Default">
        <name>__construct</name>
        <argument line="68">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="68">
          <name>$content</name>
          <default/>
          <type/>
        </argument>
        <argument line="68">
          <name>$position</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="75" package="Default">
        <name>write</name>
        <argument line="75">
          <name>$content</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="83" namespace="default" package="Default">
      <name>TokenStream</name>
      <extends/>
      <full_name>\TokenStream</full_name>
      <docblock>
        <description>a token stream</description>
        <long-description>
</long-description>
      </docblock>
      <property final="false" static="false" visibility="public" line="84" package="Default">
        <name>$pushed</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="85" package="Default">
        <name>$stream</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="86" package="Default">
        <name>$closed</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="87" package="Default">
        <name>$c</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="89" package="Default">
        <name>__construct</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="95" package="Default">
        <name>pop</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="101" package="Default">
        <name>feed</name>
        <argument line="101">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="101">
          <name>$contents</name>
          <default/>
          <type/>
        </argument>
        <argument line="101">
          <name>$position</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="107" package="Default">
        <name>push</name>
        <argument line="107">
          <name>$token</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="116" package="Default">
        <name>close</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="123" package="Default">
        <name>isClosed</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="127" package="Default">
        <name>current</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="131" package="Default">
        <name>next</name>
      </method>
    </class>
    <class final="false" abstract="false" line="136" namespace="default" package="Default">
      <name>H2o_Info</name>
      <extends/>
      <full_name>\H2o_Info</full_name>
      <property final="false" static="false" visibility="public" line="137" package="Default">
        <name>$h2o_safe</name>
        <default>array('filters'</default>
      </property>
      <property final="false" static="false" visibility="public" line="138" package="Default">
        <name>$name</name>
        <default>'H2o Template engine'</default>
      </property>
      <property final="false" static="false" visibility="public" line="139" package="Default">
        <name>$description</name>
        <default>"Django inspired template system"</default>
      </property>
      <property final="false" static="false" visibility="public" line="140" package="Default">
        <name>$version</name>
        <default>H2O_VERSION</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="142" package="Default">
        <name>filters</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="146" package="Default">
        <name>tags</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="150" package="Default">
        <name>extensions</name>
      </method>
    </class>
  </file>
  <file path="core/h2o/parser.php" hash="73a443d7c12a6a9d6426cbe57451b57a" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File core/h2o/parser.php</error>
      <error line="2">No DocBlock was found for Class H2o_Lexer</error>
      <error line="3">No DocBlock was found for Method __construct</error>
      <error line="17">No DocBlock was found for Method tokenize</error>
      <error line="43">No DocBlock was found for Class H2o_Parser</error>
      <error line="44">No DocBlock was found for Property $first</error>
      <error line="45">No DocBlock was found for Property $storage</error>
      <error line="46">No DocBlock was found for Property $filename</error>
      <error line="47">No DocBlock was found for Property $runtime</error>
      <error line="49">No DocBlock was found for Method __construct</error>
      <error line="65">No DocBlock was found for Method parse</error>
      <error line="103">No DocBlock was found for Method skipTo</error>
      <error line="109">No DocBlock was found for Method parseArguments</error>
      <error line="159">No DocBlock was found for Class H2O_RE</error>
      <error line="160">No DocBlock was found for Property $whitespace</error>
      <error line="160">No DocBlock was found for Property $seperator</error>
      <error line="160">No DocBlock was found for Property $parentheses</error>
      <error line="160">No DocBlock was found for Property $pipe</error>
      <error line="160">No DocBlock was found for Property $filter_end</error>
      <error line="160">No DocBlock was found for Property $operator</error>
      <error line="160">No DocBlock was found for Property $boolean</error>
      <error line="160">No DocBlock was found for Property $number</error>
      <error line="160">No DocBlock was found for Property $string</error>
      <error line="160">No DocBlock was found for Property $i18n_string</error>
      <error line="160">No DocBlock was found for Property $name</error>
      <error line="160">No DocBlock was found for Property $named_args</error>
      <error line="162">No DocBlock was found for Method init</error>
      <error line="190">No DocBlock was found for Class ArgumentLexer</error>
      <error line="191">No DocBlock was found for Property $source</error>
      <error line="192">No DocBlock was found for Property $match</error>
      <error line="193">No DocBlock was found for Property $pos</error>
      <error line="193">No DocBlock was found for Property $fpos</error>
      <error line="193">No DocBlock was found for Property $eos</error>
      <error line="194">No DocBlock was found for Property $operator_map</error>
      <error line="198">No DocBlock was found for Method __construct</error>
      <error line="204">No DocBlock was found for Method parse</error>
      <error line="268">No DocBlock was found for Method scan</error>
      <error line="277">No DocBlock was found for Method eos</error>
    </parse_markers>
    <class final="false" abstract="false" line="2" namespace="default" package="Default">
      <name>H2o_Lexer</name>
      <extends/>
      <full_name>\H2o_Lexer</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="3" package="Default">
        <name>__construct</name>
        <argument line="3">
          <name>$options</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="17" package="Default">
        <name>tokenize</name>
        <argument line="17">
          <name>$source</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="43" namespace="default" package="Default">
      <name>H2o_Parser</name>
      <extends/>
      <full_name>\H2o_Parser</full_name>
      <property final="false" static="false" visibility="public" line="44" package="Default">
        <name>$first</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="45" package="Default">
        <name>$storage</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="public" line="46" package="Default">
        <name>$filename</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="47" package="Default">
        <name>$runtime</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="49" package="Default">
        <name>__construct</name>
        <argument line="49">
          <name>$source</name>
          <default/>
          <type/>
        </argument>
        <argument line="49">
          <name>$filename</name>
          <default/>
          <type/>
        </argument>
        <argument line="49">
          <name>$runtime</name>
          <default/>
          <type/>
        </argument>
        <argument line="49">
          <name>$options</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="65" package="Default">
        <name>parse</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="103" package="Default">
        <name>skipTo</name>
        <argument line="103">
          <name>$until</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="109" package="Default">
        <name>parseArguments</name>
        <argument line="109">
          <name>$source</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="109">
          <name>$fpos</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="159" namespace="default" package="Default">
      <name>H2O_RE</name>
      <extends/>
      <full_name>\H2O_RE</full_name>
      <property final="false" static="true" visibility="public" line="160" package="Default">
        <name>$whitespace</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="160" package="Default">
        <name>$seperator</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="160" package="Default">
        <name>$parentheses</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="160" package="Default">
        <name>$pipe</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="160" package="Default">
        <name>$filter_end</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="160" package="Default">
        <name>$operator</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="160" package="Default">
        <name>$boolean</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="160" package="Default">
        <name>$number</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="160" package="Default">
        <name>$string</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="160" package="Default">
        <name>$i18n_string</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="160" package="Default">
        <name>$name</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="160" package="Default">
        <name>$named_args</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" line="162" package="Default">
        <name>init</name>
      </method>
    </class>
    <class final="false" abstract="false" line="190" namespace="default" package="Default">
      <name>ArgumentLexer</name>
      <extends/>
      <full_name>\ArgumentLexer</full_name>
      <property final="false" static="false" visibility="private" line="191" package="Default">
        <name>$source</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="192" package="Default">
        <name>$match</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="193" package="Default">
        <name>$pos</name>
        <default>0</default>
      </property>
      <property final="false" static="false" visibility="public" line="193" package="Default">
        <name>$fpos</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="193" package="Default">
        <name>$eos</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="194" package="Default">
        <name>$operator_map</name>
        <default>array(
        '!' =&gt; 'not'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="198" package="Default">
        <name>__construct</name>
        <argument line="198">
          <name>$source</name>
          <default/>
          <type/>
        </argument>
        <argument line="198">
          <name>$fpos</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="204" package="Default">
        <name>parse</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="268" package="Default">
        <name>scan</name>
        <argument line="268">
          <name>$regexp</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="277" package="Default">
        <name>eos</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="284" package="Default">
        <name>getPosition</name>
        <docblock>
          <description>return the position in the template</description>
          <long-description>
</long-description>
        </docblock>
      </method>
    </class>
  </file>
  <file path="core/h2o/errors.php" hash="aec5375c8e6fbc1516f6591e70123640" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File core/h2o/errors.php</error>
      <error line="5">No DocBlock was found for Class H2o_Error</error>
      <error line="6">No DocBlock was found for Class ParseError</error>
      <error line="7">No DocBlock was found for Class TemplateNotFound</error>
      <error line="8">No DocBlock was found for Class TemplateSyntaxError</error>
    </parse_markers>
    <class final="false" abstract="false" line="5" namespace="default" package="Default">
      <name>H2o_Error</name>
      <extends>\Exception</extends>
      <full_name>\H2o_Error</full_name>
    </class>
    <class final="false" abstract="false" line="6" namespace="default" package="Default">
      <name>ParseError</name>
      <extends>\H2o_Error</extends>
      <full_name>\ParseError</full_name>
    </class>
    <class final="false" abstract="false" line="7" namespace="default" package="Default">
      <name>TemplateNotFound</name>
      <extends>\H2o_Error</extends>
      <full_name>\TemplateNotFound</full_name>
    </class>
    <class final="false" abstract="false" line="8" namespace="default" package="Default">
      <name>TemplateSyntaxError</name>
      <extends>\H2o_Error</extends>
      <full_name>\TemplateSyntaxError</full_name>
    </class>
  </file>
  <file path="core/Database.php" hash="b51c739295d622b1a603c73d103a7fc5" package="Core">
    <docblock>
      <description>TOODLE</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;
</long-description>
      <tag line="2" name="category" description="Framework"/>
      <tag line="2" name="package" description="Core"/>
      <tag line="2" name="author" description="Alexander Maslov &lt;it@delta-z.ru&gt;"/>
      <tag line="2" name="copyright" description="2011 Alexader Maslov (http://www.delta-z.ru)"/>
      <tag line="2" name="license" description="http://www.gnu.org/licenses/gpl-3.0.html GPL v3"/>
      <tag line="2" name="link" description="https://github.com/drakmail/toodle" link="https://github.com/drakmail/toodle"/>
    </docblock>
  </file>
  <file path="core/ext/cache.php" hash="323f9af43d884b72173c205c3ec870dd" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File core/ext/cache.php</error>
      <error line="3">No DocBlock was found for Class Cache_Tag</error>
      <error line="4">No DocBlock was found for Property $cache</error>
      <error line="4">No DocBlock was found for Property $ttl</error>
      <error line="4">No DocBlock was found for Property $uid</error>
      <error line="5">No DocBlock was found for Property $syntax</error>
      <error line="7">No DocBlock was found for Method __construct</error>
      <error line="28">No DocBlock was found for Method render</error>
    </parse_markers>
    <class final="false" abstract="false" line="3" namespace="default" package="Default">
      <name>Cache_Tag</name>
      <extends>\H2o_Node</extends>
      <full_name>\Cache_Tag</full_name>
      <property final="false" static="false" visibility="private" line="4" package="Default">
        <name>$cache</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="4" package="Default">
        <name>$ttl</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="4" package="Default">
        <name>$uid</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="5" package="Default">
        <name>$syntax</name>
        <default>'/\d+/'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="7" package="Default">
        <name>__construct</name>
        <argument line="7">
          <name>$argstring</name>
          <default/>
          <type/>
        </argument>
        <argument line="7">
          <name>$parser</name>
          <default/>
          <type/>
        </argument>
        <argument line="7">
          <name>$pos</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="28" package="Default">
        <name>render</name>
        <argument line="28">
          <name>$context</name>
          <default/>
          <type/>
        </argument>
        <argument line="28">
          <name>$stream</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="core/ext/i18n.php" hash="d908afb0ad255a14fb3ae20bdfb807ba" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File core/ext/i18n.php</error>
      <error line="6">No DocBlock was found for Class Trans_Tag</error>
      <error line="7">No DocBlock was found for Property $text</error>
      <error line="8">No DocBlock was found for Method __construct</error>
      <error line="12">No DocBlock was found for Method render</error>
      <error line="20">No DocBlock was found for Class Blocktrans_Tag</error>
      <error line="21">No DocBlock was found for Property $singular</error>
      <error line="21">No DocBlock was found for Property $plural</error>
      <error line="22">No DocBlock was found for Property $vars</error>
      <error line="23">No DocBlock was found for Property $aliases</error>
      <error line="24">No DocBlock was found for Property $count</error>
      <error line="26">No DocBlock was found for Method __construct</error>
      <error line="55">No DocBlock was found for Method render</error>
      <error line="97">No DocBlock was found for Method compile_nodes</error>
      <error line="115">No DocBlock was found for Class H2o_I18n</error>
      <error line="116">No DocBlock was found for Property $locale</error>
      <error line="117">No DocBlock was found for Property $charset</error>
      <error line="118">No DocBlock was found for Property $locale_dir</error>
      <error line="119">No DocBlock was found for Property $tmp_dir</error>
      <error line="120">No DocBlock was found for Property $extensions</error>
      <error line="121">No DocBlock was found for Property $gettext_path</error>
      <error line="122">No DocBlock was found for Property $gettext_setup</error>
      <error line="123">No DocBlock was found for Property $gettext</error>
      <error line="124">No DocBlock was found for Property $ngettext</error>
      <error line="126">No DocBlock was found for Method __construct</error>
      <error line="158">No DocBlock was found for Method gettext</error>
      <error line="168">No DocBlock was found for Method setupGettext</error>
      <error line="187">No DocBlock was found for Method extract</error>
      <error line="272">No DocBlock was found for Method compile</error>
      <error line="291">No DocBlock was found for Method setLocale</error>
      <error line="305">No DocBlock was found for Method getPluralForm</error>
      <error line="325">No DocBlock was found for Method getTemplates</error>
      <error line="346">No DocBlock was found for Function templize</error>
    </parse_markers>
    <function namespace="default" line="346" package="Default">
      <name>templize</name>
      <type>function</type>
      <argument line="346">
        <name>$source</name>
        <default/>
        <type/>
      </argument>
    </function>
    <class final="false" abstract="false" line="6" namespace="default" package="Default">
      <name>Trans_Tag</name>
      <extends>\H2o_Node</extends>
      <full_name>\Trans_Tag</full_name>
      <property final="false" static="false" visibility="public" line="7" package="Default">
        <name>$text</name>
        <default>null</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="8" package="Default">
        <name>__construct</name>
        <argument line="8">
          <name>$argstring</name>
          <default/>
          <type/>
        </argument>
        <argument line="8">
          <name>$parser</name>
          <default/>
          <type/>
        </argument>
        <argument line="8">
          <name>$position</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="12" package="Default">
        <name>render</name>
        <argument line="12">
          <name>$context</name>
          <default/>
          <type/>
        </argument>
        <argument line="12">
          <name>$stream</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="20" namespace="default" package="Default">
      <name>Blocktrans_Tag</name>
      <extends>\H2o_Node</extends>
      <full_name>\Blocktrans_Tag</full_name>
      <property final="false" static="false" visibility="private" line="21" package="Default">
        <name>$singular</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="21" package="Default">
        <name>$plural</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="22" package="Default">
        <name>$vars</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="private" line="23" package="Default">
        <name>$aliases</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="private" line="24" package="Default">
        <name>$count</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="26" package="Default">
        <name>__construct</name>
        <argument line="26">
          <name>$argstring</name>
          <default/>
          <type/>
        </argument>
        <argument line="26">
          <name>$parser</name>
          <default/>
          <type/>
        </argument>
        <argument line="26">
          <name>$position</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="55" package="Default">
        <name>render</name>
        <argument line="55">
          <name>$context</name>
          <default/>
          <type/>
        </argument>
        <argument line="55">
          <name>$stream</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="97" package="Default">
        <name>compile_nodes</name>
        <argument line="97">
          <name>$nodes</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="115" namespace="default" package="Default">
      <name>H2o_I18n</name>
      <extends/>
      <full_name>\H2o_I18n</full_name>
      <property final="false" static="false" visibility="public" line="116" package="Default">
        <name>$locale</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="117" package="Default">
        <name>$charset</name>
        <default>'UTF-8'</default>
      </property>
      <property final="false" static="false" visibility="public" line="118" package="Default">
        <name>$locale_dir</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="119" package="Default">
        <name>$tmp_dir</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="120" package="Default">
        <name>$extensions</name>
        <default>array('html'</default>
      </property>
      <property final="false" static="false" visibility="public" line="121" package="Default">
        <name>$gettext_path</name>
        <default>''</default>
      </property>
      <property final="false" static="false" visibility="public" line="122" package="Default">
        <name>$gettext_setup</name>
        <default>false</default>
      </property>
      <property final="false" static="true" visibility="public" line="123" package="Default">
        <name>$gettext</name>
        <default>'gettext'</default>
      </property>
      <property final="false" static="true" visibility="public" line="124" package="Default">
        <name>$ngettext</name>
        <default>'ngettext'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="126" package="Default">
        <name>__construct</name>
        <argument line="126">
          <name>$path</name>
          <default/>
          <type/>
        </argument>
        <argument line="126">
          <name>$options</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="158" package="Default">
        <name>gettext</name>
        <argument line="158">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="158">
          <name>$context</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="168" package="Default">
        <name>setupGettext</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="187" package="Default">
        <name>extract</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="272" package="Default">
        <name>compile</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="291" package="Default">
        <name>setLocale</name>
        <argument line="291">
          <name>$locale</name>
          <default/>
          <type/>
        </argument>
        <argument line="291">
          <name>$charset</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="305" package="Default">
        <name>getPluralForm</name>
        <argument line="305">
          <name>$locale</name>
          <default>'en'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="325" package="Default">
        <name>getTemplates</name>
        <argument line="325">
          <name>$path</name>
          <default/>
          <type/>
        </argument>
        <argument line="325">
          <name>$exts</name>
          <default/>
          <type/>
        </argument>
        <argument line="325">
          <name>$exclude</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="core/ext/design.php" hash="106f7b06c5a2588affd0f560e84d688d" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File core/ext/design.php</error>
      <error line="5">No DocBlock was found for Class Lorem_Tag</error>
      <error line="6">No DocBlock was found for Property $common</error>
      <error line="7">No DocBlock was found for Property $syntax</error>
      <error line="8">No DocBlock was found for Property $hint</error>
      <error line="10">No DocBlock was found for Method __construct</error>
      <error line="19">No DocBlock was found for Method render</error>
      <error line="32">No DocBlock was found for Function lorem_words</error>
      <error line="42">No DocBlock was found for Function lorem_sentences</error>
      <error line="54">No DocBlock was found for Function lorem_paragraphs</error>
      <error line="65">No DocBlock was found for Function lorem_dictionary</error>
    </parse_markers>
    <function namespace="default" line="32" package="Default">
      <name>lorem_words</name>
      <type>function</type>
      <argument line="32">
        <name>$count</name>
        <default/>
        <type/>
      </argument>
      <argument line="32">
        <name>$common</name>
        <default>false</default>
        <type/>
      </argument>
    </function>
    <function namespace="default" line="42" package="Default">
      <name>lorem_sentences</name>
      <type>function</type>
      <argument line="42">
        <name>$count</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="default" line="54" package="Default">
      <name>lorem_paragraphs</name>
      <type>function</type>
      <argument line="54">
        <name>$count</name>
        <default/>
        <type/>
      </argument>
      <argument line="54">
        <name>$common</name>
        <default>false</default>
        <type/>
      </argument>
    </function>
    <function namespace="default" line="65" package="Default">
      <name>lorem_dictionary</name>
      <type>function</type>
      <argument line="65">
        <name>$type</name>
        <default/>
        <type/>
      </argument>
    </function>
    <class final="false" abstract="false" line="5" namespace="default" package="Default">
      <name>Lorem_Tag</name>
      <extends>\H2o_Node</extends>
      <full_name>\Lorem_Tag</full_name>
      <property final="false" static="false" visibility="private" line="6" package="Default">
        <name>$common</name>
        <default>true</default>
      </property>
      <property final="false" static="false" visibility="private" line="7" package="Default">
        <name>$syntax</name>
        <default>'/^(\d+)?(?:\s+(p|w))?(?:\s?(random))?$/i'</default>
      </property>
      <property final="false" static="false" visibility="public" line="8" package="Default">
        <name>$hint</name>
        <default>"{% lorem [count] [format] [random]%}"</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="10" package="Default">
        <name>__construct</name>
        <argument line="10">
          <name>$argstring</name>
          <default/>
          <type/>
        </argument>
        <argument line="10">
          <name>$parser</name>
          <default/>
          <type/>
        </argument>
        <argument line="10">
          <name>$position</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="19" package="Default">
        <name>render</name>
        <argument line="19">
          <name>$context</name>
          <default/>
          <type/>
        </argument>
        <argument line="19">
          <name>$stream</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="core/ext/adminmedia.php" hash="ea978c19e2e5a828bb71cc95b143dbbb" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File core/ext/adminmedia.php</error>
      <error line="3">No DocBlock was found for Class Admin_media_prefix_Tag</error>
      <error line="4">No DocBlock was found for Method render</error>
    </parse_markers>
    <class final="false" abstract="false" line="3" namespace="default" package="Default">
      <name>Admin_media_prefix_Tag</name>
      <extends>\H2o_Node</extends>
      <full_name>\Admin_media_prefix_Tag</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="4" package="Default">
        <name>render</name>
        <argument line="4">
          <name>$context</name>
          <default/>
          <type/>
        </argument>
        <argument line="4">
          <name>$stream</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="core/h2o.php" hash="1939c88caa96d8399dc2ddfbf894afd0" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File core/h2o.php</error>
      <error line="2">No DocBlock was found for Constant H2O_VERSION</error>
      <error line="3">No DocBlock was found for Constant DS</error>
      <error line="4">No DocBlock was found for Constant H2O_ROOT</error>
      <error line="22">No DocBlock was found for Property $searchpath</error>
      <error line="23">No DocBlock was found for Property $context</error>
      <error line="24">No DocBlock was found for Property $loader</error>
      <error line="26">No DocBlock was found for Property $tags</error>
      <error line="27">No DocBlock was found for Property $filters</error>
      <error line="28">No DocBlock was found for Property $extensions</error>
      <error line="30">No DocBlock was found for Method getOptions</error>
      <error line="50">No DocBlock was found for Method __construct</error>
      <error line="89">No DocBlock was found for Method loadTemplate</error>
      <error line="93">No DocBlock was found for Method loadSubTemplate</error>
      <error line="98">No DocBlock was found for Method parse</error>
      <error line="110">No DocBlock was found for Method set</error>
      <error line="132">No DocBlock was found for Method render</error>
      <error line="140">No DocBlock was found for Method parseString</error>
      <error line="146">No DocBlock was found for Method createTag</error>
      <error line="228">No DocBlock was found for Method addLookup</error>
      <error line="234">No DocBlock was found for Method load</error>
      <error line="244">No DocBlock was found for Method defaultContext</error>
    </parse_markers>
    <include type="Require" line="6">
      <name>h2o/datatype.php</name>
    </include>
    <include type="Require" line="7">
      <name>h2o/loaders.php</name>
    </include>
    <include type="Require" line="8">
      <name>h2o/nodes.php</name>
    </include>
    <include type="Require" line="9">
      <name>h2o/tags.php</name>
    </include>
    <include type="Require" line="10">
      <name>h2o/errors.php</name>
    </include>
    <include type="Require" line="11">
      <name>h2o/filters.php</name>
    </include>
    <include type="Require" line="12">
      <name>h2o/context.php</name>
    </include>
    <constant namespace="default" line="2" package="Default">
      <name>H2O_VERSION</name>
      <value>'0.3'</value>
    </constant>
    <constant namespace="default" line="3" package="Default">
      <name>DS</name>
      <value>DIRECTORY_SEPARATOR</value>
    </constant>
    <constant namespace="default" line="4" package="Default">
      <name>H2O_ROOT</name>
      <value>dirname(__FILE__) . DS</value>
    </constant>
    <function namespace="default" line="255" package="Default">
      <name>h2o</name>
      <type>function</type>
      <docblock>
        <description>Convenient wrapper for loading template file or string</description>
        <long-description>
</long-description>
        <tag line="249" name="param" description="" type="" variable="$name"/>
        <tag line="249" name="param" description="- H2o options" type="\$options" variable="$options">
          <type by_reference="false">\$options</type>
        </tag>
        <tag line="249" name="return" description="of H2o Template" type="\Instance">
          <type by_reference="false">\Instance</type>
        </tag>
      </docblock>
      <argument line="255">
        <name>$name</name>
        <default/>
        <type/>
      </argument>
      <argument line="255">
        <name>$options</name>
        <default>array()</default>
        <type/>
      </argument>
    </function>
    <class final="false" abstract="false" line="21" namespace="default" package="Default">
      <name>H2o</name>
      <extends/>
      <full_name>\H2o</full_name>
      <docblock>
        <description>Example:
 $h2o = new H2O('./template.html', array("loader"=&gt;'file'));</description>
        <long-description>&lt;p&gt;$h2o = new H2O('template.html', array("loader"=&gt;'hash'));&lt;/p&gt;
</long-description>
      </docblock>
      <property final="false" static="false" visibility="public" line="22" package="Default">
        <name>$searchpath</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="23" package="Default">
        <name>$context</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="24" package="Default">
        <name>$loader</name>
        <default>false</default>
      </property>
      <property final="false" static="true" visibility="public" line="26" package="Default">
        <name>$tags</name>
        <default>array()</default>
      </property>
      <property final="false" static="true" visibility="public" line="27" package="Default">
        <name>$filters</name>
        <default>array()</default>
      </property>
      <property final="false" static="true" visibility="public" line="28" package="Default">
        <name>$extensions</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="30" package="Default">
        <name>getOptions</name>
        <argument line="30">
          <name>$options</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="50" package="Default">
        <name>__construct</name>
        <argument line="50">
          <name>$file</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="50">
          <name>$options</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="89" package="Default">
        <name>loadTemplate</name>
        <argument line="89">
          <name>$file</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="93" package="Default">
        <name>loadSubTemplate</name>
        <argument line="93">
          <name>$file</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="98" package="Default">
        <name>parse</name>
        <argument line="98">
          <name>$source</name>
          <default/>
          <type/>
        </argument>
        <argument line="98">
          <name>$filename</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="98">
          <name>$env</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="110" package="Default">
        <name>set</name>
        <argument line="110">
          <name>$context</name>
          <default/>
          <type/>
        </argument>
        <argument line="110">
          <name>$value</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="132" package="Default">
        <name>render</name>
        <argument line="132">
          <name>$context</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="140" package="Default">
        <name>parseString</name>
        <argument line="140">
          <name>$source</name>
          <default/>
          <type/>
        </argument>
        <argument line="140">
          <name>$options</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="146" package="Default">
        <name>createTag</name>
        <argument line="146">
          <name>$tag</name>
          <default/>
          <type/>
        </argument>
        <argument line="146">
          <name>$args</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="146">
          <name>$parser</name>
          <default/>
          <type/>
        </argument>
        <argument line="146">
          <name>$position</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="172" package="Default">
        <name>addTag</name>
        <docblock>
          <description>Register a new tag</description>
          <long-description>&lt;p&gt;h2o::addTag('tag_name', 'ClassName');&lt;/p&gt;

&lt;p&gt;h2o::addTag(array(
     'tag_name' =&gt; 'MagClass',
     'tag_name2' =&gt; 'TagClass2'
));&lt;/p&gt;

&lt;p&gt;h2o::addTag('tag_name');      // Tag_name_Tag&lt;/p&gt;

&lt;p&gt;h2o::addTag(array('tag_name',&lt;/p&gt;
</long-description>
          <tag line="155" name="param" description="" type="\unknown_type" variable="$tag">
            <type by_reference="false">\unknown_type</type>
          </tag>
          <tag line="155" name="param" description="" type="\unknown_type" variable="$class">
            <type by_reference="false">\unknown_type</type>
          </tag>
        </docblock>
        <argument line="172">
          <name>$tag</name>
          <default/>
          <type/>
        </argument>
        <argument line="172">
          <name>$class</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="203" package="Default">
        <name>addFilter</name>
        <docblock>
          <description>Register a new filter to h2o runtime</description>
          <long-description>
</long-description>
          <tag line="196" name="param" description="" type="\unknown_type" variable="$filter">
            <type by_reference="false">\unknown_type</type>
          </tag>
          <tag line="196" name="param" description="" type="\unknown_type" variable="$callback">
            <type by_reference="false">\unknown_type</type>
          </tag>
          <tag line="196" name="return" description="" type="\unknown">
            <type by_reference="false">\unknown</type>
          </tag>
        </docblock>
        <argument line="203">
          <name>$filter</name>
          <default/>
          <type/>
        </argument>
        <argument line="203">
          <name>$callback</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="228" package="Default">
        <name>addLookup</name>
        <argument line="228">
          <name>$callback</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="234" package="Default">
        <name>load</name>
        <argument line="234">
          <name>$extension</name>
          <default/>
          <type/>
        </argument>
        <argument line="234">
          <name>$file</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="244" package="Default">
        <name>defaultContext</name>
      </method>
    </class>
  </file>
  <file path="core/Security.php" hash="b23462b2a14231ba5a28c86492759b39" package="Core">
    <docblock>
      <description>TOODLE</description>
      <long-description>&lt;p&gt;PHP Version 5.3&lt;/p&gt;
</long-description>
      <tag line="2" name="category" description="Framework"/>
      <tag line="2" name="package" description="Core"/>
      <tag line="2" name="author" description="Alexander Maslov &lt;it@delta-z.ru&gt;"/>
      <tag line="2" name="copyright" description="2011 Alexader Maslov (http://www.delta-z.ru)"/>
      <tag line="2" name="license" description="http://www.gnu.org/licenses/gpl-3.0.html GPL v3"/>
      <tag line="2" name="link" description="https://github.com/drakmail/toodle" link="https://github.com/drakmail/toodle"/>
    </docblock>
    <markers>
      <todo line="30">check autoescape</todo>
    </markers>
    <class final="false" abstract="false" line="20" namespace="toodle\core" package="Default">
      <name>Security</name>
      <extends/>
      <full_name>\toodle\core\Security</full_name>
      <docblock>
        <description>Security utils</description>
        <long-description>
</long-description>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" line="28" package="Default">
        <name>safeStr</name>
        <docblock>
          <description>Returns escaped string for user-content insertion</description>
          <long-description>
</long-description>
          <tag line="22" name="static" description=""/>
          <tag line="22" name="param" description="" type="string" variable="$string">
            <type by_reference="false">\toodle\core\string</type>
          </tag>
          <tag line="22" name="return" description="" type="string">
            <type by_reference="false">\toodle\core\string</type>
          </tag>
        </docblock>
        <argument line="28">
          <name>$string</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="40" package="Default">
        <name>safeFloat</name>
        <docblock>
          <description>Returns unified float for DB insertion or other things. Doesn't depend on locale</description>
          <long-description>
</long-description>
          <tag line="34" name="static" description=""/>
          <tag line="34" name="param" description="" type="float" variable="$float">
            <type by_reference="false">\toodle\core\float</type>
          </tag>
          <tag line="34" name="return" description="" type="string">
            <type by_reference="false">\toodle\core\string</type>
          </tag>
        </docblock>
        <argument line="40">
          <name>$float</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="core/RedBeanORM.php" hash="de6252988d11372a20f6a9505b1cb6fc" package="Default">
    <parse_markers>
      <error line="1">No DocBlock was found for File core/RedBeanORM.php</error>
      <error line="5">No DocBlock was found for Interface RedBean_Driver</error>
      <error line="6">No DocBlock was found for Method getInstance</error>
      <error line="7">No DocBlock was found for Method GetAll</error>
      <error line="8">No DocBlock was found for Method GetCol</error>
      <error line="9">No DocBlock was found for Method GetCell</error>
      <error line="10">No DocBlock was found for Method GetRow</error>
      <error line="11">No DocBlock was found for Method ErrorNo</error>
      <error line="12">No DocBlock was found for Method Errormsg</error>
      <error line="13">No DocBlock was found for Method Execute</error>
      <error line="14">No DocBlock was found for Method Escape</error>
      <error line="15">No DocBlock was found for Method GetInsertID</error>
      <error line="16">No DocBlock was found for Method Affected_Rows</error>
      <error line="17">No DocBlock was found for Method setDebugMode</error>
      <error line="18">No DocBlock was found for Method GetRaw</error>
      <error line="19">No DocBlock was found for Method CommitTrans</error>
      <error line="20">No DocBlock was found for Method StartTrans</error>
      <error line="21">No DocBlock was found for Method FailTrans</error>
      <error line="23">No DocBlock was found for Class RedBean_Driver_PDO</error>
      <error line="24">No DocBlock was found for Property $dsn</error>
      <error line="25">No DocBlock was found for Property $instance</error>
      <error line="26">No DocBlock was found for Property $debug</error>
      <error line="27">No DocBlock was found for Property $pdo</error>
      <error line="28">No DocBlock was found for Property $affected_rows</error>
      <error line="29">No DocBlock was found for Property $rs</error>
      <error line="30">No DocBlock was found for Property $exc</error>
      <error line="31">No DocBlock was found for Property $connectInfo</error>
      <error line="32">No DocBlock was found for Property $flagUseStringOnlyBinding</error>
      <error line="33">No DocBlock was found for Property $isConnected</error>
      <error line="34">No DocBlock was found for Method getInstance</error>
      <error line="40">No DocBlock was found for Method __construct</error>
      <error line="53">No DocBlock was found for Method connect</error>
      <error line="69">No DocBlock was found for Method bindParams</error>
      <error line="94">No DocBlock was found for Method GetAll</error>
      <error line="137">No DocBlock was found for Method GetCol</error>
      <error line="149">No DocBlock was found for Method GetCell</error>
      <error line="157">No DocBlock was found for Method GetRow</error>
      <error line="163">No DocBlock was found for Method ErrorNo</error>
      <error line="169">No DocBlock was found for Method Errormsg</error>
      <error line="175">No DocBlock was found for Method Execute</error>
      <error line="204">No DocBlock was found for Method Escape</error>
      <error line="208">No DocBlock was found for Method GetInsertID</error>
      <error line="212">No DocBlock was found for Method Affected_Rows</error>
      <error line="216">No DocBlock was found for Method setDebugMode</error>
      <error line="220">No DocBlock was found for Method GetRaw</error>
      <error line="224">No DocBlock was found for Method StartTrans</error>
      <error line="228">No DocBlock was found for Method CommitTrans</error>
      <error line="232">No DocBlock was found for Method FailTrans</error>
      <error line="236">No DocBlock was found for Method getDatabaseType</error>
      <error line="240">No DocBlock was found for Method getDatabaseVersion</error>
      <error line="244">No DocBlock was found for Method getPDO</error>
      <error line="249">No DocBlock was found for Class RedBean_OODBBean</error>
      <error line="250">No DocBlock was found for Property $null</error>
      <error line="251">No DocBlock was found for Property $properties</error>
      <error line="252">No DocBlock was found for Property $__info</error>
      <error line="253">No DocBlock was found for Property $beanHelper</error>
      <error line="254">No DocBlock was found for Property $fetchType</error>
      <error line="255">No DocBlock was found for Method setBeanHelper</error>
      <error line="258">No DocBlock was found for Method getIterator</error>
      <error line="261">No DocBlock was found for Method import</error>
      <error line="273">No DocBlock was found for Method export</error>
      <error line="281">No DocBlock was found for Method exportToObj</error>
      <error line="287">No DocBlock was found for Method __isset</error>
      <error line="290">No DocBlock was found for Method getID</error>
      <error line="294">No DocBlock was found for Method __unset</error>
      <error line="304">No DocBlock was found for Method removeProperty</error>
      <error line="307">No DocBlock was found for Method __get</error>
      <error line="349">No DocBlock was found for Method __set</error>
      <error line="360">No DocBlock was found for Method getMeta</error>
      <error line="363">No DocBlock was found for Method setMeta</error>
      <error line="366">No DocBlock was found for Method copyMetaFrom</error>
      <error line="370">No DocBlock was found for Method __sleep</error>
      <error line="374">No DocBlock was found for Method __call</error>
      <error line="385">No DocBlock was found for Method __toString</error>
      <error line="394">No DocBlock was found for Method offsetSet</error>
      <error line="397">No DocBlock was found for Method offsetExists</error>
      <error line="400">No DocBlock was found for Method offsetUnset</error>
      <error line="403">No DocBlock was found for Method offsetGet</error>
      <error line="406">No DocBlock was found for Method fetchAs</error>
      <error line="411">No DocBlock was found for Class RedBean_Observable</error>
      <error line="412">No DocBlock was found for Property $observers</error>
      <error line="413">No DocBlock was found for Method addEventListener</error>
      <error line="420">No DocBlock was found for Method signal</error>
      <error line="429">No DocBlock was found for Interface RedBean_Observer</error>
      <error line="430">No DocBlock was found for Method onEvent</error>
      <error line="432">No DocBlock was found for Interface RedBean_Adapter</error>
      <error line="433">No DocBlock was found for Method getSQL</error>
      <error line="434">No DocBlock was found for Method escape</error>
      <error line="435">No DocBlock was found for Method exec</error>
      <error line="436">No DocBlock was found for Method get</error>
      <error line="437">No DocBlock was found for Method getRow</error>
      <error line="438">No DocBlock was found for Method getCol</error>
      <error line="439">No DocBlock was found for Method getCell</error>
      <error line="440">No DocBlock was found for Method getAssoc</error>
      <error line="441">No DocBlock was found for Method getInsertID</error>
      <error line="442">No DocBlock was found for Method getAffectedRows</error>
      <error line="443">No DocBlock was found for Method getDatabase</error>
      <error line="444">No DocBlock was found for Method getErrorMsg</error>
      <error line="445">No DocBlock was found for Method startTransaction</error>
      <error line="446">No DocBlock was found for Method commit</error>
      <error line="447">No DocBlock was found for Method rollback</error>
      <error line="449">No DocBlock was found for Class RedBean_Adapter_DBAdapter</error>
      <error line="450">No DocBlock was found for Property $db</error>
      <error line="451">No DocBlock was found for Property $sql</error>
      <error line="452">No DocBlock was found for Method __construct</error>
      <error line="455">No DocBlock was found for Method getSQL</error>
      <error line="458">No DocBlock was found for Method escape</error>
      <error line="461">No DocBlock was found for Method exec</error>
      <error line="468">No DocBlock was found for Method get</error>
      <error line="473">No DocBlock was found for Method getRow</error>
      <error line="478">No DocBlock was found for Method getCol</error>
      <error line="483">No DocBlock was found for Method getAssoc</error>
      <error line="504">No DocBlock was found for Method getCell</error>
      <error line="510">No DocBlock was found for Method getInsertID</error>
      <error line="513">No DocBlock was found for Method getAffectedRows</error>
      <error line="516">No DocBlock was found for Method getDatabase</error>
      <error line="519">No DocBlock was found for Method getErrorMsg</error>
      <error line="522">No DocBlock was found for Method startTransaction</error>
      <error line="525">No DocBlock was found for Method commit</error>
      <error line="528">No DocBlock was found for Method rollback</error>
      <error line="532">No DocBlock was found for Interface RedBean_QueryWriter</error>
      <error line="533">No DocBlock was found for Constant C_SQLSTATE_NO_SUCH_TABLE</error>
      <error line="534">No DocBlock was found for Constant C_SQLSTATE_NO_SUCH_COLUMN</error>
      <error line="535">No DocBlock was found for Constant C_SQLSTATE_INTEGRITY_CONSTRAINT_VIOLATION</error>
      <error line="536">No DocBlock was found for Method getFormattedTableName</error>
      <error line="537">No DocBlock was found for Method getTables</error>
      <error line="538">No DocBlock was found for Method createTable</error>
      <error line="539">No DocBlock was found for Method getColumns</error>
      <error line="540">No DocBlock was found for Method scanType</error>
      <error line="541">No DocBlock was found for Method addColumn</error>
      <error line="542">No DocBlock was found for Method code</error>
      <error line="543">No DocBlock was found for Method widenColumn</error>
      <error line="544">No DocBlock was found for Method updateRecord</error>
      <error line="545">No DocBlock was found for Method selectRecord</error>
      <error line="546">No DocBlock was found for Method addUniqueIndex</error>
      <error line="547">No DocBlock was found for Method getIDField</error>
      <error line="548">No DocBlock was found for Method sqlStateIn</error>
      <error line="549">No DocBlock was found for Method wipe</error>
      <error line="550">No DocBlock was found for Method count</error>
      <error line="551">No DocBlock was found for Method setBeanFormatter</error>
      <error line="552">No DocBlock was found for Method createView</error>
      <error line="553">No DocBlock was found for Method getFieldType</error>
      <error line="554">No DocBlock was found for Method safeColumn</error>
      <error line="555">No DocBlock was found for Method safeTable</error>
      <error line="556">No DocBlock was found for Method addConstraint</error>
      <error line="557">No DocBlock was found for Method getAssocTableFormat</error>
      <error line="558">No DocBlock was found for Method addFK</error>
      <error line="559">No DocBlock was found for Method addIndex</error>
      <error line="560">No DocBlock was found for Method getAlias</error>
      <error line="561">No DocBlock was found for Method getTypeForID</error>
      <error line="563">No DocBlock was found for Class RedBean_QueryWriter_AQueryWriter</error>
      <error line="564">No DocBlock was found for Property $fcache</error>
      <error line="565">No DocBlock was found for Property $tableFormatter</error>
      <error line="566">No DocBlock was found for Property $typeno_sqltype</error>
      <error line="567">No DocBlock was found for Property $adapter</error>
      <error line="568">No DocBlock was found for Property $idfield</error>
      <error line="569">No DocBlock was found for Property $defaultValue</error>
      <error line="570">No DocBlock was found for Property $quoteCharacter</error>
      <error line="571">No DocBlock was found for Method __construct</error>
      <error line="574">No DocBlock was found for Method safeTable</error>
      <error line="580">No DocBlock was found for Method safeColumn</error>
      <error line="585">No DocBlock was found for Method getInsertSuffix</error>
      <error line="588">No DocBlock was found for Method getFormattedTableName</error>
      <error line="591">No DocBlock was found for Method getAlias</error>
      <error line="594">No DocBlock was found for Method setBeanFormatter</error>
      <error line="597">No DocBlock was found for Method getFieldType</error>
      <error line="600">No DocBlock was found for Method getIDField</error>
      <error line="605">No DocBlock was found for Method check</error>
      <error line="611">No DocBlock was found for Method noKW</error>
      <error line="615">No DocBlock was found for Method addColumn</error>
      <error line="624">No DocBlock was found for Method updateRecord</error>
      <error line="647">No DocBlock was found for Method insertRecord</error>
      <error line="670">No DocBlock was found for Method selectRecord</error>
      <error line="708">No DocBlock was found for Method createView</error>
      <error line="738">No DocBlock was found for Method wipe</error>
      <error line="744">No DocBlock was found for Method count</error>
      <error line="749">No DocBlock was found for Method addIndex</error>
      <error line="756">No DocBlock was found for Method canBeTreatedAsInt</error>
      <error line="759">No DocBlock was found for Method addFK</error>
      <error line="783">No DocBlock was found for Method getAssocTableFormat</error>
      <error line="787">No DocBlock was found for Method addConstraint</error>
      <error line="817">No DocBlock was found for Method constrain</error>
      <error line="818">No DocBlock was found for Method startsWithZeros</error>
      <error line="828">No DocBlock was found for Class RedBean_QueryWriter_MySQL</error>
      <error line="829">No DocBlock was found for Constant C_DATATYPE_BOOL</error>
      <error line="830">No DocBlock was found for Constant C_DATATYPE_UINT8</error>
      <error line="831">No DocBlock was found for Constant C_DATATYPE_UINT32</error>
      <error line="832">No DocBlock was found for Constant C_DATATYPE_DOUBLE</error>
      <error line="833">No DocBlock was found for Constant C_DATATYPE_TEXT8</error>
      <error line="834">No DocBlock was found for Constant C_DATATYPE_TEXT16</error>
      <error line="835">No DocBlock was found for Constant C_DATATYPE_TEXT32</error>
      <error line="836">No DocBlock was found for Constant C_DATATYPE_SPECIFIED</error>
      <error line="837">No DocBlock was found for Property $typeno_sqltype</error>
      <error line="846">No DocBlock was found for Property $sqltype_typeno</error>
      <error line="855">No DocBlock was found for Property $adapter</error>
      <error line="856">No DocBlock was found for Property $quoteCharacter</error>
      <error line="857">No DocBlock was found for Method __construct</error>
      <error line="861">No DocBlock was found for Method getTypeForID</error>
      <error line="864">No DocBlock was found for Method getTables</error>
      <error line="867">No DocBlock was found for Method createTable</error>
      <error line="878">No DocBlock was found for Method getColumns</error>
      <error line="886">No DocBlock was found for Method scanType</error>
      <error line="913">No DocBlock was found for Method code</error>
      <error line="916">No DocBlock was found for Method widenColumn</error>
      <error line="925">No DocBlock was found for Method addUniqueIndex</error>
      <error line="944">No DocBlock was found for Method sqlStateIn</error>
      <error line="951">No DocBlock was found for Method constrain</error>
      <error line="993">No DocBlock was found for Method wipeAll</error>
      <error line="1008">No DocBlock was found for Class RedBean_QueryWriter_SQLiteT</error>
      <error line="1009">No DocBlock was found for Property $adapter</error>
      <error line="1010">No DocBlock was found for Property $quoteCharacter</error>
      <error line="1011">No DocBlock was found for Constant C_DATATYPE_INTEGER</error>
      <error line="1012">No DocBlock was found for Constant C_DATATYPE_NUMERIC</error>
      <error line="1013">No DocBlock was found for Constant C_DATATYPE_TEXT</error>
      <error line="1014">No DocBlock was found for Constant C_DATATYPE_SPECIFIED</error>
      <error line="1015">No DocBlock was found for Property $typeno_sqltype</error>
      <error line="1020">No DocBlock was found for Property $sqltype_typeno</error>
      <error line="1025">No DocBlock was found for Method __construct</error>
      <error line="1029">No DocBlock was found for Method getTypeForID</error>
      <error line="1032">No DocBlock was found for Method scanType</error>
      <error line="1044">No DocBlock was found for Method addColumn</error>
      <error line="1052">No DocBlock was found for Method code</error>
      <error line="1055">No DocBlock was found for Method quote</error>
      <error line="1061">No DocBlock was found for Method widenColumn</error>
      <error line="1091">No DocBlock was found for Method getTables</error>
      <error line="1095">No DocBlock was found for Method createTable</error>
      <error line="1103">No DocBlock was found for Method getColumns</error>
      <error line="1112">No DocBlock was found for Method addUniqueIndex</error>
      <error line="1118">No DocBlock was found for Method sqlStateIn</error>
      <error line="1124">No DocBlock was found for Method wipe</error>
      <error line="1128">No DocBlock was found for Method addFK</error>
      <error line="1131">No DocBlock was found for Method buildFK</error>
      <error line="1183">No DocBlock was found for Method constrain</error>
      <error line="1197">No DocBlock was found for Method wipeAll</error>
      <error line="1212">No DocBlock was found for Class RedBean_QueryWriter_PostgreSQL</error>
      <error line="1213">No DocBlock was found for Constant C_DATATYPE_INTEGER</error>
      <error line="1214">No DocBlock was found for Constant C_DATATYPE_DOUBLE</error>
      <error line="1215">No DocBlock was found for Constant C_DATATYPE_TEXT</error>
      <error line="1216">No DocBlock was found for Property $typeno_sqltype</error>
      <error line="1221">No DocBlock was found for Property $sqltype_typeno</error>
      <error line="1226">No DocBlock was found for Property $adapter</error>
      <error line="1227">No DocBlock was found for Property $quoteCharacter</error>
      <error line="1228">No DocBlock was found for Property $defaultValue</error>
      <error line="1229">No DocBlock was found for Method getTypeForID</error>
      <error line="1232">No DocBlock was found for Method getInsertSuffix</error>
      <error line="1235">No DocBlock was found for Method __construct</error>
      <error line="1239">No DocBlock was found for Method getTables</error>
      <error line="1243">No DocBlock was found for Method createTable</error>
      <error line="1249">No DocBlock was found for Method getColumns</error>
      <error line="1257">No DocBlock was found for Method scanType</error>
      <error line="1273">No DocBlock was found for Method code</error>
      <error line="1276">No DocBlock was found for Method widenColumn</error>
      <error line="1289">No DocBlock was found for Method addUniqueIndex</error>
      <error line="1322">No DocBlock was found for Method sqlStateIn</error>
      <error line="1329">No DocBlock was found for Method addFK</error>
      <error line="1373">No DocBlock was found for Method constrain</error>
      <error line="1418">No DocBlock was found for Method wipeAll</error>
      <error line="1434">No DocBlock was found for Class RedBean_Exception</error>
      <error line="1436">No DocBlock was found for Class RedBean_Exception_SQL</error>
      <error line="1437">No DocBlock was found for Property $sqlState</error>
      <error line="1438">No DocBlock was found for Method getSQLState</error>
      <error line="1441">No DocBlock was found for Method setSQLState</error>
      <error line="1444">No DocBlock was found for Method __toString</error>
      <error line="1448">No DocBlock was found for Class RedBean_Exception_Security</error>
      <error line="1449">No DocBlock was found for Class RedBean_OODB</error>
      <error line="1450">No DocBlock was found for Property $stash</error>
      <error line="1451">No DocBlock was found for Property $writer</error>
      <error line="1452">No DocBlock was found for Property $isFrozen</error>
      <error line="1453">No DocBlock was found for Property $beanhelper</error>
      <error line="1454">No DocBlock was found for Method __construct</error>
      <error line="1467">No DocBlock was found for Method freeze</error>
      <error line="1470">No DocBlock was found for Method isFrozen</error>
      <error line="1473">No DocBlock was found for Method dispense</error>
      <error line="1486">No DocBlock was found for Method setBeanHelper</error>
      <error line="1489">No DocBlock was found for Method check</error>
      <error line="1512">No DocBlock was found for Method find</error>
      <error line="1525">No DocBlock was found for Method tableExists</error>
      <error line="1529">No DocBlock was found for Method processBuildCommands</error>
      <error line="1534">No DocBlock was found for Method processGroups</error>
      <error line="1541">No DocBlock was found for Method store</error>
      <error line="1719">No DocBlock was found for Method load</error>
      <error line="1752">No DocBlock was found for Method trash</error>
      <error line="1782">No DocBlock was found for Method batch</error>
      <error line="1807">No DocBlock was found for Method convertToBeans</error>
      <error line="1818">No DocBlock was found for Method count</error>
      <error line="1828">No DocBlock was found for Method wipe</error>
      <error line="1839">No DocBlock was found for Method getAssociationManager</error>
      <error line="1843">No DocBlock was found for Method setAssociationManager</error>
      <error line="1847">No DocBlock was found for Class RedBean_ToolBox</error>
      <error line="1848">No DocBlock was found for Property $oodb</error>
      <error line="1849">No DocBlock was found for Property $writer</error>
      <error line="1850">No DocBlock was found for Property $adapter</error>
      <error line="1851">No DocBlock was found for Method __construct</error>
      <error line="1857">No DocBlock was found for Method getWriter</error>
      <error line="1860">No DocBlock was found for Method getRedBean</error>
      <error line="1863">No DocBlock was found for Method getDatabaseAdapter</error>
      <error line="1867">No DocBlock was found for Class RedBean_AssociationManager</error>
      <error line="1868">No DocBlock was found for Property $oodb</error>
      <error line="1869">No DocBlock was found for Property $adapter</error>
      <error line="1870">No DocBlock was found for Property $writer</error>
      <error line="1871">No DocBlock was found for Property $flagUseConstraints</error>
      <error line="1872">No DocBlock was found for Method __construct</error>
      <error line="1878">No DocBlock was found for Method getTable</error>
      <error line="1881">No DocBlock was found for Method associate</error>
      <error line="1886">No DocBlock was found for Method setUseConstraints</error>
      <error line="1889">No DocBlock was found for Method associateBeans</error>
      <error line="1925">No DocBlock was found for Method related</error>
      <error line="1967">No DocBlock was found for Method unassociate</error>
      <error line="2010">No DocBlock was found for Method clearRelations</error>
      <error line="2033">No DocBlock was found for Method areRelated</error>
      <error line="2069">No DocBlock was found for Class RedBean_ExtAssociationManager</error>
      <error line="2070">No DocBlock was found for Method extAssociate</error>
      <error line="2076">No DocBlock was found for Class RedBean_ViewManager</error>
      <error line="2077">No DocBlock was found for Property $oodb</error>
      <error line="2078">No DocBlock was found for Property $adapter</error>
      <error line="2079">No DocBlock was found for Property $writer</error>
      <error line="2080">No DocBlock was found for Method __construct</error>
      <error line="2085">No DocBlock was found for Method createView</error>
      <error line="2124">No DocBlock was found for Class RedBean_Setup</error>
      <error line="2125">No DocBlock was found for Property $observers</error>
      <error line="2126">No DocBlock was found for Property $toolbox</error>
      <error line="2127">No DocBlock was found for Method checkDSN</error>
      <error line="2144">No DocBlock was found for Method kickstart</error>
      <error line="2169">No DocBlock was found for Method getAttachedObservers</error>
      <error line="2173">No DocBlock was found for Interface RedBean_IBeanFormatter</error>
      <error line="2174">No DocBlock was found for Method formatBeanTable</error>
      <error line="2175">No DocBlock was found for Method formatBeanID</error>
      <error line="2176">No DocBlock was found for Method getAlias</error>
      <error line="2178">No DocBlock was found for Class RedBean_DefaultBeanFormatter</error>
      <error line="2179">No DocBlock was found for Property $tablePrefixStr</error>
      <error line="2180">No DocBlock was found for Method setPrefix</error>
      <error line="2183">No DocBlock was found for Method formatBeanTable</error>
      <error line="2186">No DocBlock was found for Method formatBeanID</error>
      <error line="2189">No DocBlock was found for Method getAlias</error>
      <error line="2197">No DocBlock was found for Interface RedBean_IModelFormatter</error>
      <error line="2198">No DocBlock was found for Method formatModel</error>
      <error line="2200">No DocBlock was found for Interface RedBean_IBeanHelper</error>
      <error line="2201">No DocBlock was found for Method getToolbox</error>
      <error line="2203">No DocBlock was found for Class RedBean_BeanHelperFacade</error>
      <error line="2204">No DocBlock was found for Method getToolbox</error>
      <error line="2208">No DocBlock was found for Class RedBean_Plugin_Optimizer</error>
      <error line="2209">No DocBlock was found for Property $adapter</error>
      <error line="2210">No DocBlock was found for Property $oodb</error>
      <error line="2211">No DocBlock was found for Property $writer</error>
      <error line="2212">No DocBlock was found for Property $optimizers</error>
      <error line="2213">No DocBlock was found for Method __construct</error>
      <error line="2218">No DocBlock was found for Method optimize</error>
      <error line="2226">No DocBlock was found for Method onEvent</error>
      <error line="2240">No DocBlock was found for Method addOptimizer</error>
      <error line="2244">No DocBlock was found for Interface RedBean_Plugin_IOptimizer</error>
      <error line="2245">No DocBlock was found for Method setTable</error>
      <error line="2246">No DocBlock was found for Method setColumn</error>
      <error line="2247">No DocBlock was found for Method setValue</error>
      <error line="2248">No DocBlock was found for Method optimize</error>
      <error line="2250">No DocBlock was found for Class RedBean_Plugin_Optimizer_Shrink</error>
      <error line="2251">No DocBlock was found for Property $table</error>
      <error line="2252">No DocBlock was found for Property $column</error>
      <error line="2253">No DocBlock was found for Property $value</error>
      <error line="2254">No DocBlock was found for Property $toolbox</error>
      <error line="2255">No DocBlock was found for Property $writer</error>
      <error line="2256">No DocBlock was found for Property $adapter</error>
      <error line="2257">No DocBlock was found for Method __construct</error>
      <error line="2261">No DocBlock was found for Method setTable</error>
      <error line="2264">No DocBlock was found for Method setColumn</error>
      <error line="2267">No DocBlock was found for Method setValue</error>
      <error line="2270">No DocBlock was found for Method optimize</error>
      <error line="2295">No DocBlock was found for Class RedBean_Plugin_Optimizer_Datetime</error>
      <error line="2296">No DocBlock was found for Property $table</error>
      <error line="2297">No DocBlock was found for Property $column</error>
      <error line="2298">No DocBlock was found for Property $value</error>
      <error line="2299">No DocBlock was found for Property $toolbox</error>
      <error line="2300">No DocBlock was found for Property $writer</error>
      <error line="2301">No DocBlock was found for Property $adapter</error>
      <error line="2302">No DocBlock was found for Method __construct</error>
      <error line="2306">No DocBlock was found for Method setTable</error>
      <error line="2309">No DocBlock was found for Method setColumn</error>
      <error line="2312">No DocBlock was found for Method setValue</error>
      <error line="2315">No DocBlock was found for Method optimize</error>
      <error line="2338">No DocBlock was found for Method matchesDateTime</error>
      <error line="2343">No DocBlock was found for Class RedBean_Plugin_QueryLogger</error>
      <error line="2344">No DocBlock was found for Property $logs</error>
      <error line="2345">No DocBlock was found for Method getInstanceAndAttach</error>
      <error line="2350">No DocBlock was found for Method __construct</error>
      <error line="2351">No DocBlock was found for Method onEvent</error>
      <error line="2357">No DocBlock was found for Method grep</error>
      <error line="2366">No DocBlock was found for Method getLogs</error>
      <error line="2369">No DocBlock was found for Method clear</error>
      <error line="2373">No DocBlock was found for Class RedBean_Plugin_BeanExport</error>
      <error line="2374">No DocBlock was found for Property $toolbox</error>
      <error line="2375">No DocBlock was found for Property $recurCheck</error>
      <error line="2376">No DocBlock was found for Method __construct</error>
      <error line="2379">No DocBlock was found for Method loadSchema</error>
      <error line="2391">No DocBlock was found for Method getSchema</error>
      <error line="2394">No DocBlock was found for Method loadSchemaFromString</error>
      <error line="2397">No DocBlock was found for Method export</error>
      <error line="2410">No DocBlock was found for Method exportBean</error>
      <error line="2448">No DocBlock was found for Class RedBean_SimpleModel</error>
      <error line="2449">No DocBlock was found for Property $bean</error>
      <error line="2450">No DocBlock was found for Method loadBean</error>
      <error line="2453">No DocBlock was found for Method __get</error>
      <error line="2456">No DocBlock was found for Method __set</error>
      <error line="2459">No DocBlock was found for Method __isset</error>
      <error line="2462">No DocBlock was found for Method getConnected</error>
      <error line="2466">No DocBlock was found for Class RedBean_ModelHelper</error>
      <error line="2467">No DocBlock was found for Property $modelFormatter</error>
      <error line="2468">No DocBlock was found for Method onEvent</error>
      <error line="2471">No DocBlock was found for Method getModelName</error>
      <error line="2479">No DocBlock was found for Method setModelFormatter</error>
      <error line="2483">No DocBlock was found for Class RedBean_Facade</error>
      <error line="2484">No DocBlock was found for Property $toolboxes</error>
      <error line="2485">No DocBlock was found for Property $toolbox</error>
      <error line="2486">No DocBlock was found for Property $redbean</error>
      <error line="2487">No DocBlock was found for Property $writer</error>
      <error line="2488">No DocBlock was found for Property $adapter</error>
      <error line="2489">No DocBlock was found for Property $associationManager</error>
      <error line="2490">No DocBlock was found for Property $extAssocManager</error>
      <error line="2491">No DocBlock was found for Property $exporter</error>
      <error line="2492">No DocBlock was found for Property $currentDB</error>
      <error line="2493">No DocBlock was found for Method getVersion</error>
      <error line="2496">No DocBlock was found for Method setup</error>
      <error line="2502">No DocBlock was found for Method setupMultiple</error>
      <error line="2510">No DocBlock was found for Method addDatabase</error>
      <error line="2513">No DocBlock was found for Method selectDatabase</error>
      <error line="2519">No DocBlock was found for Method debug</error>
      <error line="2522">No DocBlock was found for Method store</error>
      <error line="2525">No DocBlock was found for Method freeze</error>
      <error line="2528">No DocBlock was found for Method load</error>
      <error line="2531">No DocBlock was found for Method trash</error>
      <error line="2534">No DocBlock was found for Method dispense</error>
      <error line="2544">No DocBlock was found for Method loadOrDispense</error>
      <error line="2547">No DocBlock was found for Method findOrDispense</error>
      <error line="2551">No DocBlock was found for Method associate</error>
      <error line="2568">No DocBlock was found for Method unassociate</error>
      <error line="2571">No DocBlock was found for Method related</error>
      <error line="2579">No DocBlock was found for Method areRelated</error>
      <error line="2582">No DocBlock was found for Method unrelated</error>
      <error line="2588">No DocBlock was found for Method relatedOne</error>
      <error line="2593">No DocBlock was found for Method clearRelations</error>
      <error line="2600">No DocBlock was found for Method find</error>
      <error line="2603">No DocBlock was found for Method findAndExport</error>
      <error line="2611">No DocBlock was found for Method findOne</error>
      <error line="2615">No DocBlock was found for Method findLast</error>
      <error line="2619">No DocBlock was found for Method batch</error>
      <error line="2622">No DocBlock was found for Method exec</error>
      <error line="2644">No DocBlock was found for Method getAll</error>
      <error line="2666">No DocBlock was found for Method getCell</error>
      <error line="2688">No DocBlock was found for Method getRow</error>
      <error line="2710">No DocBlock was found for Method getCol</error>
      <error line="2732">No DocBlock was found for Method copy</error>
      <error line="2749">No DocBlock was found for Method swap</error>
      <error line="2758">No DocBlock was found for Method convertToBeans</error>
      <error line="2761">No DocBlock was found for Property $flagUseLegacyTaggingAPI</error>
      <error line="2762">No DocBlock was found for Method hasTag</error>
      <error line="2771">No DocBlock was found for Method untag</error>
      <error line="2780">No DocBlock was found for Method tag</error>
      <error line="2793">No DocBlock was found for Method addTags</error>
      <error line="2806">No DocBlock was found for Method tagged</error>
      <error line="2817">No DocBlock was found for Method wipe</error>
      <error line="2820">No DocBlock was found for Method count</error>
      <error line="2823">No DocBlock was found for Method configureFacadeWithToolbox</error>
      <error line="2842">No DocBlock was found for Method cooker</error>
      <error line="2845">No DocBlock was found for Method view</error>
      <error line="2853">No DocBlock was found for Method exportAll</error>
      <error line="2871">No DocBlock was found for Method exportAllToObj</error>
      <error line="2882">No DocBlock was found for Method begin</error>
      <error line="2885">No DocBlock was found for Method commit</error>
      <error line="2888">No DocBlock was found for Method rollback</error>
      <error line="2891">No DocBlock was found for Method getColumns</error>
      <error line="2894">No DocBlock was found for Method now</error>
      <error line="2897">No DocBlock was found for Method genSlots</error>
      <error line="2906">No DocBlock was found for Method prefix</error>
      <error line="2911">No DocBlock was found for Method nuke</error>
      <error line="2918">No DocBlock was found for Function lcfirst</error>
      <error line="2922">No DocBlock was found for Class RedBean_FacadeHelper</error>
      <error line="2923">No DocBlock was found for Property $key</error>
      <error line="2924">No DocBlock was found for Method __construct</error>
      <error line="2927">No DocBlock was found for Method __call</error>
      <error line="2933">No DocBlock was found for Class RedBean_BeanCan</error>
      <error line="2934">No DocBlock was found for Property $modelHelper</error>
      <error line="2935">No DocBlock was found for Method __construct</error>
      <error line="2938">No DocBlock was found for Method resp</error>
      <error line="2956">No DocBlock was found for Method handleJSONRequest</error>
      <error line="3013">No DocBlock was found for Class RedBean_Cooker</error>
      <error line="3014">No DocBlock was found for Property $dontSetEmptyValues</error>
      <error line="3015">No DocBlock was found for Method load</error>
      <error line="3067">No DocBlock was found for Method setToolbox</error>
      <error line="3071">No DocBlock was found for Method graph</error>
      <error line="3105">No DocBlock was found for Class R</error>
    </parse_markers>
    <function namespace="default" line="2918" package="Default">
      <name>lcfirst</name>
      <type>function</type>
      <argument line="2918">
        <name>$str</name>
        <default/>
        <type/>
      </argument>
    </function>
    <interface namespace="default" line="5" package="Default">
      <name>RedBean_Driver</name>
      <extends/>
      <full_name>\RedBean_Driver</full_name>
      <method final="false" abstract="false" static="true" visibility="public" line="6" package="Default">
        <name>getInstance</name>
        <argument line="6">
          <name>$host</name>
          <default/>
          <type/>
        </argument>
        <argument line="6">
          <name>$user</name>
          <default/>
          <type/>
        </argument>
        <argument line="6">
          <name>$pass</name>
          <default/>
          <type/>
        </argument>
        <argument line="6">
          <name>$dbname</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="7" package="Default">
        <name>GetAll</name>
        <argument line="7">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="7">
          <name>$aValues</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="8" package="Default">
        <name>GetCol</name>
        <argument line="8">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="8">
          <name>$aValues</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="9" package="Default">
        <name>GetCell</name>
        <argument line="9">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="9">
          <name>$aValues</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="10" package="Default">
        <name>GetRow</name>
        <argument line="10">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="10">
          <name>$aValues</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="11" package="Default">
        <name>ErrorNo</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="12" package="Default">
        <name>Errormsg</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="13" package="Default">
        <name>Execute</name>
        <argument line="13">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="13">
          <name>$aValues</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="14" package="Default">
        <name>Escape</name>
        <argument line="14">
          <name>$str</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="15" package="Default">
        <name>GetInsertID</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="16" package="Default">
        <name>Affected_Rows</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="17" package="Default">
        <name>setDebugMode</name>
        <argument line="17">
          <name>$tf</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="18" package="Default">
        <name>GetRaw</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="19" package="Default">
        <name>CommitTrans</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="20" package="Default">
        <name>StartTrans</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="21" package="Default">
        <name>FailTrans</name>
      </method>
    </interface>
    <interface namespace="default" line="429" package="Default">
      <name>RedBean_Observer</name>
      <extends/>
      <full_name>\RedBean_Observer</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="430" package="Default">
        <name>onEvent</name>
        <argument line="430">
          <name>$eventname</name>
          <default/>
          <type/>
        </argument>
        <argument line="430">
          <name>$bean</name>
          <default/>
          <type/>
        </argument>
      </method>
    </interface>
    <interface namespace="default" line="432" package="Default">
      <name>RedBean_Adapter</name>
      <extends/>
      <full_name>\RedBean_Adapter</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="433" package="Default">
        <name>getSQL</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="434" package="Default">
        <name>escape</name>
        <argument line="434">
          <name>$sqlvalue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="435" package="Default">
        <name>exec</name>
        <argument line="435">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="435">
          <name>$aValues</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="435">
          <name>$noevent</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="436" package="Default">
        <name>get</name>
        <argument line="436">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="436">
          <name>$aValues</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="437" package="Default">
        <name>getRow</name>
        <argument line="437">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="437">
          <name>$aValues</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="438" package="Default">
        <name>getCol</name>
        <argument line="438">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="438">
          <name>$aValues</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="439" package="Default">
        <name>getCell</name>
        <argument line="439">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="439">
          <name>$aValues</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="440" package="Default">
        <name>getAssoc</name>
        <argument line="440">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="440">
          <name>$values</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="441" package="Default">
        <name>getInsertID</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="442" package="Default">
        <name>getAffectedRows</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="443" package="Default">
        <name>getDatabase</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="444" package="Default">
        <name>getErrorMsg</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="445" package="Default">
        <name>startTransaction</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="446" package="Default">
        <name>commit</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="447" package="Default">
        <name>rollback</name>
      </method>
    </interface>
    <interface namespace="default" line="532" package="Default">
      <name>RedBean_QueryWriter</name>
      <extends/>
      <full_name>\RedBean_QueryWriter</full_name>
      <constant namespace="default" line="533" package="Default">
        <name>C_SQLSTATE_NO_SUCH_TABLE</name>
        <value>1</value>
      </constant>
      <constant namespace="default" line="534" package="Default">
        <name>C_SQLSTATE_NO_SUCH_COLUMN</name>
        <value>2</value>
      </constant>
      <constant namespace="default" line="535" package="Default">
        <name>C_SQLSTATE_INTEGRITY_CONSTRAINT_VIOLATION</name>
        <value>3</value>
      </constant>
      <method final="false" abstract="false" static="false" visibility="public" line="536" package="Default">
        <name>getFormattedTableName</name>
        <argument line="536">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="537" package="Default">
        <name>getTables</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="538" package="Default">
        <name>createTable</name>
        <argument line="538">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="539" package="Default">
        <name>getColumns</name>
        <argument line="539">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="540" package="Default">
        <name>scanType</name>
        <argument line="540">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="541" package="Default">
        <name>addColumn</name>
        <argument line="541">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="541">
          <name>$column</name>
          <default/>
          <type/>
        </argument>
        <argument line="541">
          <name>$field</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="542" package="Default">
        <name>code</name>
        <argument line="542">
          <name>$typedescription</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="543" package="Default">
        <name>widenColumn</name>
        <argument line="543">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="543">
          <name>$column</name>
          <default/>
          <type/>
        </argument>
        <argument line="543">
          <name>$datatype</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="544" package="Default">
        <name>updateRecord</name>
        <argument line="544">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="544">
          <name>$updatevalues</name>
          <default/>
          <type/>
        </argument>
        <argument line="544">
          <name>$id</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="545" package="Default">
        <name>selectRecord</name>
        <argument line="545">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="545">
          <name>$conditions</name>
          <default/>
          <type/>
        </argument>
        <argument line="545">
          <name>$addSql</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="545">
          <name>$delete</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="545">
          <name>$inverse</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="546" package="Default">
        <name>addUniqueIndex</name>
        <argument line="546">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="546">
          <name>$columns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="547" package="Default">
        <name>getIDField</name>
        <argument line="547">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="548" package="Default">
        <name>sqlStateIn</name>
        <argument line="548">
          <name>$state</name>
          <default/>
          <type/>
        </argument>
        <argument line="548">
          <name>$list</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="549" package="Default">
        <name>wipe</name>
        <argument line="549">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="550" package="Default">
        <name>count</name>
        <argument line="550">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="551" package="Default">
        <name>setBeanFormatter</name>
        <argument line="551">
          <name>$beanFormatter</name>
          <default/>
          <type>RedBean_IBeanFormatter</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="552" package="Default">
        <name>createView</name>
        <argument line="552">
          <name>$referenceType</name>
          <default/>
          <type/>
        </argument>
        <argument line="552">
          <name>$types</name>
          <default/>
          <type/>
        </argument>
        <argument line="552">
          <name>$viewID</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="553" package="Default">
        <name>getFieldType</name>
        <argument line="553">
          <name>$type</name>
          <default>""</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="554" package="Default">
        <name>safeColumn</name>
        <argument line="554">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="554">
          <name>$noQuotes</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="555" package="Default">
        <name>safeTable</name>
        <argument line="555">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="555">
          <name>$noQuotes</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="556" package="Default">
        <name>addConstraint</name>
        <argument line="556">
          <name>$bean1</name>
          <default/>
          <type>RedBean_OODBBean</type>
        </argument>
        <argument line="556">
          <name>$bean2</name>
          <default/>
          <type>RedBean_OODBBean</type>
        </argument>
        <argument line="556">
          <name>$dontCache</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="557" package="Default">
        <name>getAssocTableFormat</name>
        <argument line="557">
          <name>$types</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="558" package="Default">
        <name>addFK</name>
        <argument line="558">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="558">
          <name>$targetType</name>
          <default/>
          <type/>
        </argument>
        <argument line="558">
          <name>$field</name>
          <default/>
          <type/>
        </argument>
        <argument line="558">
          <name>$targetField</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="559" package="Default">
        <name>addIndex</name>
        <argument line="559">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="559">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="559">
          <name>$column</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="560" package="Default">
        <name>getAlias</name>
        <argument line="560">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="561" package="Default">
        <name>getTypeForID</name>
      </method>
    </interface>
    <interface namespace="default" line="2173" package="Default">
      <name>RedBean_IBeanFormatter</name>
      <extends/>
      <full_name>\RedBean_IBeanFormatter</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="2174" package="Default">
        <name>formatBeanTable</name>
        <argument line="2174">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2175" package="Default">
        <name>formatBeanID</name>
        <argument line="2175">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2176" package="Default">
        <name>getAlias</name>
        <argument line="2176">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
    </interface>
    <interface namespace="default" line="2197" package="Default">
      <name>RedBean_IModelFormatter</name>
      <extends/>
      <full_name>\RedBean_IModelFormatter</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="2198" package="Default">
        <name>formatModel</name>
        <argument line="2198">
          <name>$model</name>
          <default/>
          <type/>
        </argument>
      </method>
    </interface>
    <interface namespace="default" line="2200" package="Default">
      <name>RedBean_IBeanHelper</name>
      <extends/>
      <full_name>\RedBean_IBeanHelper</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="2201" package="Default">
        <name>getToolbox</name>
      </method>
    </interface>
    <interface namespace="default" line="2244" package="Default">
      <name>RedBean_Plugin_IOptimizer</name>
      <extends/>
      <full_name>\RedBean_Plugin_IOptimizer</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="2245" package="Default">
        <name>setTable</name>
        <argument line="2245">
          <name>$table</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2246" package="Default">
        <name>setColumn</name>
        <argument line="2246">
          <name>$column</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2247" package="Default">
        <name>setValue</name>
        <argument line="2247">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2248" package="Default">
        <name>optimize</name>
      </method>
    </interface>
    <class final="false" abstract="false" line="23" namespace="default" package="Default">
      <name>RedBean_Driver_PDO</name>
      <extends/>
      <full_name>\RedBean_Driver_PDO</full_name>
      <implements>\RedBean_Driver</implements>
      <property final="false" static="false" visibility="private" line="24" package="Default">
        <name>$dsn</name>
        <default/>
      </property>
      <property final="false" static="true" visibility="private" line="25" package="Default">
        <name>$instance</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="26" package="Default">
        <name>$debug</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="private" line="27" package="Default">
        <name>$pdo</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="28" package="Default">
        <name>$affected_rows</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="29" package="Default">
        <name>$rs</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="30" package="Default">
        <name>$exc</name>
        <default>0</default>
      </property>
      <property final="false" static="false" visibility="private" line="31" package="Default">
        <name>$connectInfo</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="public" line="32" package="Default">
        <name>$flagUseStringOnlyBinding</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="private" line="33" package="Default">
        <name>$isConnected</name>
        <default>false</default>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" line="34" package="Default">
        <name>getInstance</name>
        <argument line="34">
          <name>$dsn</name>
          <default/>
          <type/>
        </argument>
        <argument line="34">
          <name>$user</name>
          <default/>
          <type/>
        </argument>
        <argument line="34">
          <name>$pass</name>
          <default/>
          <type/>
        </argument>
        <argument line="34">
          <name>$dbname</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="40" package="Default">
        <name>__construct</name>
        <argument line="40">
          <name>$dsn</name>
          <default/>
          <type/>
        </argument>
        <argument line="40">
          <name>$user</name>
          <default>NULL</default>
          <type/>
        </argument>
        <argument line="40">
          <name>$pass</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="53" package="Default">
        <name>connect</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="69" package="Default">
        <name>bindParams</name>
        <argument line="69">
          <name>$s</name>
          <default/>
          <type/>
        </argument>
        <argument line="69">
          <name>$aValues</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="94" package="Default">
        <name>GetAll</name>
        <argument line="94">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="94">
          <name>$aValues</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="137" package="Default">
        <name>GetCol</name>
        <argument line="137">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="137">
          <name>$aValues</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="149" package="Default">
        <name>GetCell</name>
        <argument line="149">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="149">
          <name>$aValues</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="157" package="Default">
        <name>GetRow</name>
        <argument line="157">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="157">
          <name>$aValues</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="163" package="Default">
        <name>ErrorNo</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="169" package="Default">
        <name>Errormsg</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="175" package="Default">
        <name>Execute</name>
        <argument line="175">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="175">
          <name>$aValues</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="204" package="Default">
        <name>Escape</name>
        <argument line="204">
          <name>$str</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="208" package="Default">
        <name>GetInsertID</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="212" package="Default">
        <name>Affected_Rows</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="216" package="Default">
        <name>setDebugMode</name>
        <argument line="216">
          <name>$tf</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="220" package="Default">
        <name>GetRaw</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="224" package="Default">
        <name>StartTrans</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="228" package="Default">
        <name>CommitTrans</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="232" package="Default">
        <name>FailTrans</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="236" package="Default">
        <name>getDatabaseType</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="240" package="Default">
        <name>getDatabaseVersion</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="244" package="Default">
        <name>getPDO</name>
      </method>
    </class>
    <class final="false" abstract="false" line="249" namespace="default" package="Default">
      <name>RedBean_OODBBean</name>
      <extends/>
      <full_name>\RedBean_OODBBean</full_name>
      <implements>\IteratorAggregate</implements>
      <implements>\ArrayAccess</implements>
      <property final="false" static="false" visibility="private" line="250" package="Default">
        <name>$null</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="private" line="251" package="Default">
        <name>$properties</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="private" line="252" package="Default">
        <name>$__info</name>
        <default>NULL</default>
      </property>
      <property final="false" static="false" visibility="private" line="253" package="Default">
        <name>$beanHelper</name>
        <default>NULL</default>
      </property>
      <property final="false" static="true" visibility="public" line="254" package="Default">
        <name>$fetchType</name>
        <default>NULL</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="255" package="Default">
        <name>setBeanHelper</name>
        <argument line="255">
          <name>$helper</name>
          <default/>
          <type>RedBean_IBeanHelper</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="258" package="Default">
        <name>getIterator</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="261" package="Default">
        <name>import</name>
        <argument line="261">
          <name>$arr</name>
          <default/>
          <type/>
        </argument>
        <argument line="261">
          <name>$selection</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="261">
          <name>$notrim</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="273" package="Default">
        <name>export</name>
        <argument line="273">
          <name>$meta</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="281" package="Default">
        <name>exportToObj</name>
        <argument line="281">
          <name>$obj</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="287" package="Default">
        <name>__isset</name>
        <argument line="287">
          <name>$property</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="290" package="Default">
        <name>getID</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="294" package="Default">
        <name>__unset</name>
        <argument line="294">
          <name>$property</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="304" package="Default">
        <name>removeProperty</name>
        <argument line="304">
          <name>$property</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="307" package="Default">
        <name>__get</name>
        <argument line="307">
          <name>$property</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="349" package="Default">
        <name>__set</name>
        <argument line="349">
          <name>$property</name>
          <default/>
          <type/>
        </argument>
        <argument line="349">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="360" package="Default">
        <name>getMeta</name>
        <argument line="360">
          <name>$path</name>
          <default/>
          <type/>
        </argument>
        <argument line="360">
          <name>$default</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="363" package="Default">
        <name>setMeta</name>
        <argument line="363">
          <name>$path</name>
          <default/>
          <type/>
        </argument>
        <argument line="363">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="366" package="Default">
        <name>copyMetaFrom</name>
        <argument line="366">
          <name>$bean</name>
          <default/>
          <type>RedBean_OODBBean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="370" package="Default">
        <name>__sleep</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="374" package="Default">
        <name>__call</name>
        <argument line="374">
          <name>$method</name>
          <default/>
          <type/>
        </argument>
        <argument line="374">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="385" package="Default">
        <name>__toString</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="394" package="Default">
        <name>offsetSet</name>
        <argument line="394">
          <name>$offset</name>
          <default/>
          <type/>
        </argument>
        <argument line="394">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="397" package="Default">
        <name>offsetExists</name>
        <argument line="397">
          <name>$offset</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="400" package="Default">
        <name>offsetUnset</name>
        <argument line="400">
          <name>$offset</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="403" package="Default">
        <name>offsetGet</name>
        <argument line="403">
          <name>$offset</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="406" package="Default">
        <name>fetchAs</name>
        <argument line="406">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="true" line="411" namespace="default" package="Default">
      <name>RedBean_Observable</name>
      <extends/>
      <full_name>\RedBean_Observable</full_name>
      <property final="false" static="false" visibility="private" line="412" package="Default">
        <name>$observers</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="413" package="Default">
        <name>addEventListener</name>
        <argument line="413">
          <name>$eventname</name>
          <default/>
          <type/>
        </argument>
        <argument line="413">
          <name>$observer</name>
          <default/>
          <type>RedBean_Observer</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="420" package="Default">
        <name>signal</name>
        <argument line="420">
          <name>$eventname</name>
          <default/>
          <type/>
        </argument>
        <argument line="420">
          <name>$info</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="449" namespace="default" package="Default">
      <name>RedBean_Adapter_DBAdapter</name>
      <extends>\RedBean_Observable</extends>
      <full_name>\RedBean_Adapter_DBAdapter</full_name>
      <implements>\RedBean_Adapter</implements>
      <property final="false" static="false" visibility="private" line="450" package="Default">
        <name>$db</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="private" line="451" package="Default">
        <name>$sql</name>
        <default>""</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="452" package="Default">
        <name>__construct</name>
        <argument line="452">
          <name>$database</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="455" package="Default">
        <name>getSQL</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="458" package="Default">
        <name>escape</name>
        <argument line="458">
          <name>$sqlvalue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="461" package="Default">
        <name>exec</name>
        <argument line="461">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="461">
          <name>$aValues</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="461">
          <name>$noevent</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="468" package="Default">
        <name>get</name>
        <argument line="468">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="468">
          <name>$aValues</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="473" package="Default">
        <name>getRow</name>
        <argument line="473">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="473">
          <name>$aValues</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="478" package="Default">
        <name>getCol</name>
        <argument line="478">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="478">
          <name>$aValues</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="483" package="Default">
        <name>getAssoc</name>
        <argument line="483">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="483">
          <name>$aValues</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="504" package="Default">
        <name>getCell</name>
        <argument line="504">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="504">
          <name>$aValues</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="504">
          <name>$noSignal</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="510" package="Default">
        <name>getInsertID</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="513" package="Default">
        <name>getAffectedRows</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="516" package="Default">
        <name>getDatabase</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="519" package="Default">
        <name>getErrorMsg</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="522" package="Default">
        <name>startTransaction</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="525" package="Default">
        <name>commit</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="528" package="Default">
        <name>rollback</name>
      </method>
    </class>
    <class final="false" abstract="true" line="563" namespace="default" package="Default">
      <name>RedBean_QueryWriter_AQueryWriter</name>
      <extends/>
      <full_name>\RedBean_QueryWriter_AQueryWriter</full_name>
      <property final="false" static="false" visibility="protected" line="564" package="Default">
        <name>$fcache</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="public" line="565" package="Default">
        <name>$tableFormatter</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="566" package="Default">
        <name>$typeno_sqltype</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="567" package="Default">
        <name>$adapter</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="568" package="Default">
        <name>$idfield</name>
        <default>"id"</default>
      </property>
      <property final="false" static="false" visibility="protected" line="569" package="Default">
        <name>$defaultValue</name>
        <default>'NULL'</default>
      </property>
      <property final="false" static="false" visibility="protected" line="570" package="Default">
        <name>$quoteCharacter</name>
        <default>''</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="571" package="Default">
        <name>__construct</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="574" package="Default">
        <name>safeTable</name>
        <argument line="574">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="574">
          <name>$noQuotes</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="580" package="Default">
        <name>safeColumn</name>
        <argument line="580">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="580">
          <name>$noQuotes</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="585" package="Default">
        <name>getInsertSuffix</name>
        <argument line="585">
          <name>$table</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="588" package="Default">
        <name>getFormattedTableName</name>
        <argument line="588">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="591" package="Default">
        <name>getAlias</name>
        <argument line="591">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="594" package="Default">
        <name>setBeanFormatter</name>
        <argument line="594">
          <name>$beanFormatter</name>
          <default/>
          <type>RedBean_IBeanFormatter</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="597" package="Default">
        <name>getFieldType</name>
        <argument line="597">
          <name>$type</name>
          <default>""</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="600" package="Default">
        <name>getIDField</name>
        <argument line="600">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="605" package="Default">
        <name>check</name>
        <argument line="605">
          <name>$table</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="611" package="Default">
        <name>noKW</name>
        <argument line="611">
          <name>$str</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="615" package="Default">
        <name>addColumn</name>
        <argument line="615">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="615">
          <name>$column</name>
          <default/>
          <type/>
        </argument>
        <argument line="615">
          <name>$field</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="624" package="Default">
        <name>updateRecord</name>
        <argument line="624">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="624">
          <name>$updatevalues</name>
          <default/>
          <type/>
        </argument>
        <argument line="624">
          <name>$id</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="647" package="Default">
        <name>insertRecord</name>
        <argument line="647">
          <name>$table</name>
          <default/>
          <type/>
        </argument>
        <argument line="647">
          <name>$insertcolumns</name>
          <default/>
          <type/>
        </argument>
        <argument line="647">
          <name>$insertvalues</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="670" package="Default">
        <name>selectRecord</name>
        <argument line="670">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="670">
          <name>$conditions</name>
          <default/>
          <type/>
        </argument>
        <argument line="670">
          <name>$addSql</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="670">
          <name>$delete</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="670">
          <name>$inverse</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="708" package="Default">
        <name>createView</name>
        <argument line="708">
          <name>$referenceType</name>
          <default/>
          <type/>
        </argument>
        <argument line="708">
          <name>$constraints</name>
          <default/>
          <type/>
        </argument>
        <argument line="708">
          <name>$viewID</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="738" package="Default">
        <name>wipe</name>
        <argument line="738">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="744" package="Default">
        <name>count</name>
        <argument line="744">
          <name>$beanType</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="749" package="Default">
        <name>addIndex</name>
        <argument line="749">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="749">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="749">
          <name>$column</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="756" package="Default">
        <name>canBeTreatedAsInt</name>
        <argument line="756">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="759" package="Default">
        <name>addFK</name>
        <argument line="759">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="759">
          <name>$targetType</name>
          <default/>
          <type/>
        </argument>
        <argument line="759">
          <name>$field</name>
          <default/>
          <type/>
        </argument>
        <argument line="759">
          <name>$targetField</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="783" package="Default">
        <name>getAssocTableFormat</name>
        <argument line="783">
          <name>$types</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="787" package="Default">
        <name>addConstraint</name>
        <argument line="787">
          <name>$bean1</name>
          <default/>
          <type>RedBean_OODBBean</type>
        </argument>
        <argument line="787">
          <name>$bean2</name>
          <default/>
          <type>RedBean_OODBBean</type>
        </argument>
        <argument line="787">
          <name>$dontCache</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" line="817" package="Default">
        <name>constrain</name>
        <argument line="817">
          <name>$table</name>
          <default/>
          <type/>
        </argument>
        <argument line="817">
          <name>$table1</name>
          <default/>
          <type/>
        </argument>
        <argument line="817">
          <name>$table2</name>
          <default/>
          <type/>
        </argument>
        <argument line="817">
          <name>$p1</name>
          <default/>
          <type/>
        </argument>
        <argument line="817">
          <name>$p2</name>
          <default/>
          <type/>
        </argument>
        <argument line="817">
          <name>$cache</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="818" package="Default">
        <name>startsWithZeros</name>
        <argument line="818">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="828" namespace="default" package="Default">
      <name>RedBean_QueryWriter_MySQL</name>
      <extends>\RedBean_QueryWriter_AQueryWriter</extends>
      <full_name>\RedBean_QueryWriter_MySQL</full_name>
      <implements>\RedBean_QueryWriter</implements>
      <constant namespace="default" line="829" package="Default">
        <name>C_DATATYPE_BOOL</name>
        <value>0</value>
      </constant>
      <constant namespace="default" line="830" package="Default">
        <name>C_DATATYPE_UINT8</name>
        <value>1</value>
      </constant>
      <constant namespace="default" line="831" package="Default">
        <name>C_DATATYPE_UINT32</name>
        <value>2</value>
      </constant>
      <constant namespace="default" line="832" package="Default">
        <name>C_DATATYPE_DOUBLE</name>
        <value>3</value>
      </constant>
      <constant namespace="default" line="833" package="Default">
        <name>C_DATATYPE_TEXT8</name>
        <value>4</value>
      </constant>
      <constant namespace="default" line="834" package="Default">
        <name>C_DATATYPE_TEXT16</name>
        <value>5</value>
      </constant>
      <constant namespace="default" line="835" package="Default">
        <name>C_DATATYPE_TEXT32</name>
        <value>6</value>
      </constant>
      <constant namespace="default" line="836" package="Default">
        <name>C_DATATYPE_SPECIFIED</name>
        <value>99</value>
      </constant>
      <property final="false" static="false" visibility="public" line="837" package="Default">
        <name>$typeno_sqltype</name>
        <default>array(
			  RedBean_QueryWriter_MySQL::C_DATATYPE_BOOL=&gt;"  SET('1')  "</default>
      </property>
      <property final="false" static="false" visibility="public" line="846" package="Default">
        <name>$sqltype_typeno</name>
        <default>array(
			  "set('1')"=&gt;RedBean_QueryWriter_MySQL::C_DATATYPE_BOOL</default>
      </property>
      <property final="false" static="false" visibility="protected" line="855" package="Default">
        <name>$adapter</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="856" package="Default">
        <name>$quoteCharacter</name>
        <default>'`'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="857" package="Default">
        <name>__construct</name>
        <argument line="857">
          <name>$adapter</name>
          <default/>
          <type>RedBean_Adapter</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="861" package="Default">
        <name>getTypeForID</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="864" package="Default">
        <name>getTables</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="867" package="Default">
        <name>createTable</name>
        <argument line="867">
          <name>$table</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="878" package="Default">
        <name>getColumns</name>
        <argument line="878">
          <name>$table</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="886" package="Default">
        <name>scanType</name>
        <argument line="886">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="913" package="Default">
        <name>code</name>
        <argument line="913">
          <name>$typedescription</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="916" package="Default">
        <name>widenColumn</name>
        <argument line="916">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="916">
          <name>$column</name>
          <default/>
          <type/>
        </argument>
        <argument line="916">
          <name>$datatype</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="925" package="Default">
        <name>addUniqueIndex</name>
        <argument line="925">
          <name>$table</name>
          <default/>
          <type/>
        </argument>
        <argument line="925">
          <name>$columns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="944" package="Default">
        <name>sqlStateIn</name>
        <argument line="944">
          <name>$state</name>
          <default/>
          <type/>
        </argument>
        <argument line="944">
          <name>$list</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="951" package="Default">
        <name>constrain</name>
        <argument line="951">
          <name>$table</name>
          <default/>
          <type/>
        </argument>
        <argument line="951">
          <name>$table1</name>
          <default/>
          <type/>
        </argument>
        <argument line="951">
          <name>$table2</name>
          <default/>
          <type/>
        </argument>
        <argument line="951">
          <name>$property1</name>
          <default/>
          <type/>
        </argument>
        <argument line="951">
          <name>$property2</name>
          <default/>
          <type/>
        </argument>
        <argument line="951">
          <name>$dontCache</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="993" package="Default">
        <name>wipeAll</name>
      </method>
    </class>
    <class final="false" abstract="false" line="1008" namespace="default" package="Default">
      <name>RedBean_QueryWriter_SQLiteT</name>
      <extends>\RedBean_QueryWriter_AQueryWriter</extends>
      <full_name>\RedBean_QueryWriter_SQLiteT</full_name>
      <implements>\RedBean_QueryWriter</implements>
      <constant namespace="default" line="1011" package="Default">
        <name>C_DATATYPE_INTEGER</name>
        <value>0</value>
      </constant>
      <constant namespace="default" line="1012" package="Default">
        <name>C_DATATYPE_NUMERIC</name>
        <value>1</value>
      </constant>
      <constant namespace="default" line="1013" package="Default">
        <name>C_DATATYPE_TEXT</name>
        <value>2</value>
      </constant>
      <constant namespace="default" line="1014" package="Default">
        <name>C_DATATYPE_SPECIFIED</name>
        <value>99</value>
      </constant>
      <property final="false" static="false" visibility="protected" line="1009" package="Default">
        <name>$adapter</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="1010" package="Default">
        <name>$quoteCharacter</name>
        <default>'`'</default>
      </property>
      <property final="false" static="false" visibility="public" line="1015" package="Default">
        <name>$typeno_sqltype</name>
        <default>array(
			  RedBean_QueryWriter_SQLiteT::C_DATATYPE_INTEGER=&gt;"INTEGER"</default>
      </property>
      <property final="false" static="false" visibility="public" line="1020" package="Default">
        <name>$sqltype_typeno</name>
        <default>array(
			  "INTEGER"=&gt;RedBean_QueryWriter_SQLiteT::C_DATATYPE_INTEGER</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="1025" package="Default">
        <name>__construct</name>
        <argument line="1025">
          <name>$adapter</name>
          <default/>
          <type>RedBean_Adapter</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1029" package="Default">
        <name>getTypeForID</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1032" package="Default">
        <name>scanType</name>
        <argument line="1032">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1044" package="Default">
        <name>addColumn</name>
        <argument line="1044">
          <name>$table</name>
          <default/>
          <type/>
        </argument>
        <argument line="1044">
          <name>$column</name>
          <default/>
          <type/>
        </argument>
        <argument line="1044">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1052" package="Default">
        <name>code</name>
        <argument line="1052">
          <name>$typedescription</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" line="1055" package="Default">
        <name>quote</name>
        <argument line="1055">
          <name>$items</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1061" package="Default">
        <name>widenColumn</name>
        <argument line="1061">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="1061">
          <name>$column</name>
          <default/>
          <type/>
        </argument>
        <argument line="1061">
          <name>$datatype</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1091" package="Default">
        <name>getTables</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1095" package="Default">
        <name>createTable</name>
        <argument line="1095">
          <name>$table</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1103" package="Default">
        <name>getColumns</name>
        <argument line="1103">
          <name>$table</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1112" package="Default">
        <name>addUniqueIndex</name>
        <argument line="1112">
          <name>$table</name>
          <default/>
          <type/>
        </argument>
        <argument line="1112">
          <name>$columns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1118" package="Default">
        <name>sqlStateIn</name>
        <argument line="1118">
          <name>$state</name>
          <default/>
          <type/>
        </argument>
        <argument line="1118">
          <name>$list</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1124" package="Default">
        <name>wipe</name>
        <argument line="1124">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1128" package="Default">
        <name>addFK</name>
        <argument line="1128">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="1128">
          <name>$targetType</name>
          <default/>
          <type/>
        </argument>
        <argument line="1128">
          <name>$field</name>
          <default/>
          <type/>
        </argument>
        <argument line="1128">
          <name>$targetField</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="1131" package="Default">
        <name>buildFK</name>
        <argument line="1131">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="1131">
          <name>$targetType</name>
          <default/>
          <type/>
        </argument>
        <argument line="1131">
          <name>$field</name>
          <default/>
          <type/>
        </argument>
        <argument line="1131">
          <name>$targetField</name>
          <default/>
          <type/>
        </argument>
        <argument line="1131">
          <name>$constraint</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="1183" package="Default">
        <name>constrain</name>
        <argument line="1183">
          <name>$table</name>
          <default/>
          <type/>
        </argument>
        <argument line="1183">
          <name>$table1</name>
          <default/>
          <type/>
        </argument>
        <argument line="1183">
          <name>$table2</name>
          <default/>
          <type/>
        </argument>
        <argument line="1183">
          <name>$property1</name>
          <default/>
          <type/>
        </argument>
        <argument line="1183">
          <name>$property2</name>
          <default/>
          <type/>
        </argument>
        <argument line="1183">
          <name>$dontCache</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1197" package="Default">
        <name>wipeAll</name>
      </method>
    </class>
    <class final="false" abstract="false" line="1212" namespace="default" package="Default">
      <name>RedBean_QueryWriter_PostgreSQL</name>
      <extends>\RedBean_QueryWriter_AQueryWriter</extends>
      <full_name>\RedBean_QueryWriter_PostgreSQL</full_name>
      <implements>\RedBean_QueryWriter</implements>
      <constant namespace="default" line="1213" package="Default">
        <name>C_DATATYPE_INTEGER</name>
        <value>0</value>
      </constant>
      <constant namespace="default" line="1214" package="Default">
        <name>C_DATATYPE_DOUBLE</name>
        <value>1</value>
      </constant>
      <constant namespace="default" line="1215" package="Default">
        <name>C_DATATYPE_TEXT</name>
        <value>3</value>
      </constant>
      <property final="false" static="false" visibility="public" line="1216" package="Default">
        <name>$typeno_sqltype</name>
        <default>array(
			  self::C_DATATYPE_INTEGER=&gt;" integer "</default>
      </property>
      <property final="false" static="false" visibility="public" line="1221" package="Default">
        <name>$sqltype_typeno</name>
        <default>array(
			  "integer"=&gt;self::C_DATATYPE_INTEGER</default>
      </property>
      <property final="false" static="false" visibility="protected" line="1226" package="Default">
        <name>$adapter</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="1227" package="Default">
        <name>$quoteCharacter</name>
        <default>'"'</default>
      </property>
      <property final="false" static="false" visibility="protected" line="1228" package="Default">
        <name>$defaultValue</name>
        <default>'DEFAULT'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="1229" package="Default">
        <name>getTypeForID</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="1232" package="Default">
        <name>getInsertSuffix</name>
        <argument line="1232">
          <name>$table</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1235" package="Default">
        <name>__construct</name>
        <argument line="1235">
          <name>$adapter</name>
          <default/>
          <type>RedBean_Adapter_DBAdapter</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1239" package="Default">
        <name>getTables</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1243" package="Default">
        <name>createTable</name>
        <argument line="1243">
          <name>$table</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1249" package="Default">
        <name>getColumns</name>
        <argument line="1249">
          <name>$table</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1257" package="Default">
        <name>scanType</name>
        <argument line="1257">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1273" package="Default">
        <name>code</name>
        <argument line="1273">
          <name>$typedescription</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1276" package="Default">
        <name>widenColumn</name>
        <argument line="1276">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="1276">
          <name>$column</name>
          <default/>
          <type/>
        </argument>
        <argument line="1276">
          <name>$datatype</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1289" package="Default">
        <name>addUniqueIndex</name>
        <argument line="1289">
          <name>$table</name>
          <default/>
          <type/>
        </argument>
        <argument line="1289">
          <name>$columns</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1322" package="Default">
        <name>sqlStateIn</name>
        <argument line="1322">
          <name>$state</name>
          <default/>
          <type/>
        </argument>
        <argument line="1322">
          <name>$list</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1329" package="Default">
        <name>addFK</name>
        <argument line="1329">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="1329">
          <name>$targetType</name>
          <default/>
          <type/>
        </argument>
        <argument line="1329">
          <name>$field</name>
          <default/>
          <type/>
        </argument>
        <argument line="1329">
          <name>$targetField</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="1373" package="Default">
        <name>constrain</name>
        <argument line="1373">
          <name>$table</name>
          <default/>
          <type/>
        </argument>
        <argument line="1373">
          <name>$table1</name>
          <default/>
          <type/>
        </argument>
        <argument line="1373">
          <name>$table2</name>
          <default/>
          <type/>
        </argument>
        <argument line="1373">
          <name>$property1</name>
          <default/>
          <type/>
        </argument>
        <argument line="1373">
          <name>$property2</name>
          <default/>
          <type/>
        </argument>
        <argument line="1373">
          <name>$dontCache</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1418" package="Default">
        <name>wipeAll</name>
      </method>
    </class>
    <class final="false" abstract="false" line="1434" namespace="default" package="Default">
      <name>RedBean_Exception</name>
      <extends>\Exception</extends>
      <full_name>\RedBean_Exception</full_name>
    </class>
    <class final="false" abstract="false" line="1436" namespace="default" package="Default">
      <name>RedBean_Exception_SQL</name>
      <extends>\Exception</extends>
      <full_name>\RedBean_Exception_SQL</full_name>
      <property final="false" static="false" visibility="private" line="1437" package="Default">
        <name>$sqlState</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="1438" package="Default">
        <name>getSQLState</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1441" package="Default">
        <name>setSQLState</name>
        <argument line="1441">
          <name>$sqlState</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1444" package="Default">
        <name>__toString</name>
      </method>
    </class>
    <class final="false" abstract="false" line="1448" namespace="default" package="Default">
      <name>RedBean_Exception_Security</name>
      <extends>\RedBean_Exception</extends>
      <full_name>\RedBean_Exception_Security</full_name>
    </class>
    <class final="false" abstract="false" line="1449" namespace="default" package="Default">
      <name>RedBean_OODB</name>
      <extends>\RedBean_Observable</extends>
      <full_name>\RedBean_OODB</full_name>
      <property final="false" static="false" visibility="private" line="1450" package="Default">
        <name>$stash</name>
        <default>NULL</default>
      </property>
      <property final="false" static="false" visibility="private" line="1451" package="Default">
        <name>$writer</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="1452" package="Default">
        <name>$isFrozen</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="private" line="1453" package="Default">
        <name>$beanhelper</name>
        <default>null</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="1454" package="Default">
        <name>__construct</name>
        <argument line="1454">
          <name>$writer</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1467" package="Default">
        <name>freeze</name>
        <argument line="1467">
          <name>$tf</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1470" package="Default">
        <name>isFrozen</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1473" package="Default">
        <name>dispense</name>
        <argument line="1473">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1486" package="Default">
        <name>setBeanHelper</name>
        <argument line="1486">
          <name>$beanhelper</name>
          <default/>
          <type>RedBean_IBeanHelper</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1489" package="Default">
        <name>check</name>
        <argument line="1489">
          <name>$bean</name>
          <default/>
          <type>RedBean_OODBBean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1512" package="Default">
        <name>find</name>
        <argument line="1512">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="1512">
          <name>$conditions</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="1512">
          <name>$addSQL</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1525" package="Default">
        <name>tableExists</name>
        <argument line="1525">
          <name>$table</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="1529" package="Default">
        <name>processBuildCommands</name>
        <argument line="1529">
          <name>$table</name>
          <default/>
          <type/>
        </argument>
        <argument line="1529">
          <name>$property</name>
          <default/>
          <type/>
        </argument>
        <argument line="1529">
          <name>$bean</name>
          <default/>
          <type>RedBean_OODBBean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="1534" package="Default">
        <name>processGroups</name>
        <argument line="1534">
          <name>$originals</name>
          <default/>
          <type/>
        </argument>
        <argument line="1534">
          <name>$current</name>
          <default/>
          <type/>
        </argument>
        <argument line="1534">
          <name>$additions</name>
          <default/>
          <type/>
        </argument>
        <argument line="1534">
          <name>$trashcan</name>
          <default/>
          <type/>
        </argument>
        <argument line="1534">
          <name>$residue</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1541" package="Default">
        <name>store</name>
        <argument line="1541">
          <name>$bean</name>
          <default/>
          <type>RedBean_OODBBean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1719" package="Default">
        <name>load</name>
        <argument line="1719">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="1719">
          <name>$id</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1752" package="Default">
        <name>trash</name>
        <argument line="1752">
          <name>$bean</name>
          <default/>
          <type>RedBean_OODBBean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1782" package="Default">
        <name>batch</name>
        <argument line="1782">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="1782">
          <name>$ids</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1807" package="Default">
        <name>convertToBeans</name>
        <argument line="1807">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="1807">
          <name>$rows</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1818" package="Default">
        <name>count</name>
        <argument line="1818">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1828" package="Default">
        <name>wipe</name>
        <argument line="1828">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1839" package="Default">
        <name>getAssociationManager</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1843" package="Default">
        <name>setAssociationManager</name>
        <argument line="1843">
          <name>$assoc</name>
          <default/>
          <type>RedBean_AssociationManager</type>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="1847" namespace="default" package="Default">
      <name>RedBean_ToolBox</name>
      <extends/>
      <full_name>\RedBean_ToolBox</full_name>
      <property final="false" static="false" visibility="protected" line="1848" package="Default">
        <name>$oodb</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="1849" package="Default">
        <name>$writer</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="1850" package="Default">
        <name>$adapter</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="1851" package="Default">
        <name>__construct</name>
        <argument line="1851">
          <name>$oodb</name>
          <default/>
          <type>RedBean_OODB</type>
        </argument>
        <argument line="1851">
          <name>$adapter</name>
          <default/>
          <type>RedBean_Adapter</type>
        </argument>
        <argument line="1851">
          <name>$writer</name>
          <default/>
          <type>RedBean_QueryWriter</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1857" package="Default">
        <name>getWriter</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1860" package="Default">
        <name>getRedBean</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1863" package="Default">
        <name>getDatabaseAdapter</name>
      </method>
    </class>
    <class final="false" abstract="false" line="1867" namespace="default" package="Default">
      <name>RedBean_AssociationManager</name>
      <extends>\RedBean_Observable</extends>
      <full_name>\RedBean_AssociationManager</full_name>
      <property final="false" static="false" visibility="protected" line="1868" package="Default">
        <name>$oodb</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="1869" package="Default">
        <name>$adapter</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="1870" package="Default">
        <name>$writer</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="1871" package="Default">
        <name>$flagUseConstraints</name>
        <default>true</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="1872" package="Default">
        <name>__construct</name>
        <argument line="1872">
          <name>$tools</name>
          <default/>
          <type>RedBean_ToolBox</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1878" package="Default">
        <name>getTable</name>
        <argument line="1878">
          <name>$types</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1881" package="Default">
        <name>associate</name>
        <argument line="1881">
          <name>$bean1</name>
          <default/>
          <type>RedBean_OODBBean</type>
        </argument>
        <argument line="1881">
          <name>$bean2</name>
          <default/>
          <type>RedBean_OODBBean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1886" package="Default">
        <name>setUseConstraints</name>
        <argument line="1886">
          <name>$trueFalse</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="1889" package="Default">
        <name>associateBeans</name>
        <argument line="1889">
          <name>$bean1</name>
          <default/>
          <type>RedBean_OODBBean</type>
        </argument>
        <argument line="1889">
          <name>$bean2</name>
          <default/>
          <type>RedBean_OODBBean</type>
        </argument>
        <argument line="1889">
          <name>$bean</name>
          <default/>
          <type>RedBean_OODBBean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1925" package="Default">
        <name>related</name>
        <argument line="1925">
          <name>$bean</name>
          <default/>
          <type>RedBean_OODBBean</type>
        </argument>
        <argument line="1925">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="1925">
          <name>$getLinks</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="1925">
          <name>$sql</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="1967" package="Default">
        <name>unassociate</name>
        <argument line="1967">
          <name>$bean1</name>
          <default/>
          <type>RedBean_OODBBean</type>
        </argument>
        <argument line="1967">
          <name>$bean2</name>
          <default/>
          <type>RedBean_OODBBean</type>
        </argument>
        <argument line="1967">
          <name>$fast</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2010" package="Default">
        <name>clearRelations</name>
        <argument line="2010">
          <name>$bean</name>
          <default/>
          <type>RedBean_OODBBean</type>
        </argument>
        <argument line="2010">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2033" package="Default">
        <name>areRelated</name>
        <argument line="2033">
          <name>$bean1</name>
          <default/>
          <type>RedBean_OODBBean</type>
        </argument>
        <argument line="2033">
          <name>$bean2</name>
          <default/>
          <type>RedBean_OODBBean</type>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="2069" namespace="default" package="Default">
      <name>RedBean_ExtAssociationManager</name>
      <extends>\RedBean_AssociationManager</extends>
      <full_name>\RedBean_ExtAssociationManager</full_name>
      <method final="false" abstract="false" static="false" visibility="public" line="2070" package="Default">
        <name>extAssociate</name>
        <argument line="2070">
          <name>$bean1</name>
          <default/>
          <type>RedBean_OODBBean</type>
        </argument>
        <argument line="2070">
          <name>$bean2</name>
          <default/>
          <type>RedBean_OODBBean</type>
        </argument>
        <argument line="2070">
          <name>$baseBean</name>
          <default/>
          <type>RedBean_OODBBean</type>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="2076" namespace="default" package="Default">
      <name>RedBean_ViewManager</name>
      <extends/>
      <full_name>\RedBean_ViewManager</full_name>
      <property final="false" static="false" visibility="protected" line="2077" package="Default">
        <name>$oodb</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="2078" package="Default">
        <name>$adapter</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="2079" package="Default">
        <name>$writer</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="2080" package="Default">
        <name>__construct</name>
        <argument line="2080">
          <name>$tools</name>
          <default/>
          <type>RedBean_ToolBox</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2085" package="Default">
        <name>createView</name>
        <argument line="2085">
          <name>$viewID</name>
          <default/>
          <type/>
        </argument>
        <argument line="2085">
          <name>$refType</name>
          <default/>
          <type/>
        </argument>
        <argument line="2085">
          <name>$types</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="2124" namespace="default" package="Default">
      <name>RedBean_Setup</name>
      <extends/>
      <full_name>\RedBean_Setup</full_name>
      <property final="false" static="true" visibility="private" line="2125" package="Default">
        <name>$observers</name>
        <default>array()</default>
      </property>
      <property final="false" static="true" visibility="private" line="2126" package="Default">
        <name>$toolbox</name>
        <default>NULL</default>
      </property>
      <method final="false" abstract="false" static="true" visibility="private" line="2127" package="Default">
        <name>checkDSN</name>
        <argument line="2127">
          <name>$dsn</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2144" package="Default">
        <name>kickstart</name>
        <argument line="2144">
          <name>$dsn</name>
          <default/>
          <type/>
        </argument>
        <argument line="2144">
          <name>$username</name>
          <default>NULL</default>
          <type/>
        </argument>
        <argument line="2144">
          <name>$password</name>
          <default>NULL</default>
          <type/>
        </argument>
        <argument line="2144">
          <name>$frozen</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2169" package="Default">
        <name>getAttachedObservers</name>
      </method>
    </class>
    <class final="false" abstract="false" line="2178" namespace="default" package="Default">
      <name>RedBean_DefaultBeanFormatter</name>
      <extends/>
      <full_name>\RedBean_DefaultBeanFormatter</full_name>
      <implements>\RedBean_IBeanFormatter</implements>
      <property final="false" static="false" visibility="protected" line="2179" package="Default">
        <name>$tablePrefixStr</name>
        <default>''</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="2180" package="Default">
        <name>setPrefix</name>
        <argument line="2180">
          <name>$prefix</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2183" package="Default">
        <name>formatBeanTable</name>
        <argument line="2183">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2186" package="Default">
        <name>formatBeanID</name>
        <argument line="2186">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2189" package="Default">
        <name>getAlias</name>
        <argument line="2189">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="2203" namespace="default" package="Default">
      <name>RedBean_BeanHelperFacade</name>
      <extends/>
      <full_name>\RedBean_BeanHelperFacade</full_name>
      <implements>\RedBean_IBeanHelper</implements>
      <method final="false" abstract="false" static="false" visibility="public" line="2204" package="Default">
        <name>getToolbox</name>
      </method>
    </class>
    <class final="false" abstract="false" line="2208" namespace="default" package="Default">
      <name>RedBean_Plugin_Optimizer</name>
      <extends/>
      <full_name>\RedBean_Plugin_Optimizer</full_name>
      <implements>\RedBean_Observer</implements>
      <property final="false" static="false" visibility="private" line="2209" package="Default">
        <name>$adapter</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="2210" package="Default">
        <name>$oodb</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="2211" package="Default">
        <name>$writer</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="2212" package="Default">
        <name>$optimizers</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="2213" package="Default">
        <name>__construct</name>
        <argument line="2213">
          <name>$toolbox</name>
          <default/>
          <type>RedBean_ToolBox</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="2218" package="Default">
        <name>optimize</name>
        <argument line="2218">
          <name>$table</name>
          <default/>
          <type/>
        </argument>
        <argument line="2218">
          <name>$column</name>
          <default/>
          <type/>
        </argument>
        <argument line="2218">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2226" package="Default">
        <name>onEvent</name>
        <argument line="2226">
          <name>$event</name>
          <default/>
          <type/>
        </argument>
        <argument line="2226">
          <name>$bean</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2240" package="Default">
        <name>addOptimizer</name>
        <argument line="2240">
          <name>$optimizer</name>
          <default/>
          <type>RedBean_Plugin_IOptimizer</type>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="2250" namespace="default" package="Default">
      <name>RedBean_Plugin_Optimizer_Shrink</name>
      <extends/>
      <full_name>\RedBean_Plugin_Optimizer_Shrink</full_name>
      <implements>\RedBean_Plugin_IOptimizer</implements>
      <property final="false" static="false" visibility="protected" line="2251" package="Default">
        <name>$table</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="2252" package="Default">
        <name>$column</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="2253" package="Default">
        <name>$value</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="2254" package="Default">
        <name>$toolbox</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="2255" package="Default">
        <name>$writer</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="2256" package="Default">
        <name>$adapter</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="2257" package="Default">
        <name>__construct</name>
        <argument line="2257">
          <name>$toolbox</name>
          <default/>
          <type>RedBean_ToolBox</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2261" package="Default">
        <name>setTable</name>
        <argument line="2261">
          <name>$table</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2264" package="Default">
        <name>setColumn</name>
        <argument line="2264">
          <name>$column</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2267" package="Default">
        <name>setValue</name>
        <argument line="2267">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2270" package="Default">
        <name>optimize</name>
      </method>
    </class>
    <class final="false" abstract="false" line="2295" namespace="default" package="Default">
      <name>RedBean_Plugin_Optimizer_Datetime</name>
      <extends/>
      <full_name>\RedBean_Plugin_Optimizer_Datetime</full_name>
      <implements>\RedBean_Plugin_IOptimizer</implements>
      <property final="false" static="false" visibility="protected" line="2296" package="Default">
        <name>$table</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="2297" package="Default">
        <name>$column</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="2298" package="Default">
        <name>$value</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="2299" package="Default">
        <name>$toolbox</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="2300" package="Default">
        <name>$writer</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="2301" package="Default">
        <name>$adapter</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="2302" package="Default">
        <name>__construct</name>
        <argument line="2302">
          <name>$toolbox</name>
          <default/>
          <type>RedBean_ToolBox</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2306" package="Default">
        <name>setTable</name>
        <argument line="2306">
          <name>$table</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2309" package="Default">
        <name>setColumn</name>
        <argument line="2309">
          <name>$column</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2312" package="Default">
        <name>setValue</name>
        <argument line="2312">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2315" package="Default">
        <name>optimize</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2338" package="Default">
        <name>matchesDateTime</name>
        <argument line="2338">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="2343" namespace="default" package="Default">
      <name>RedBean_Plugin_QueryLogger</name>
      <extends/>
      <full_name>\RedBean_Plugin_QueryLogger</full_name>
      <implements>\RedBean_Observer</implements>
      <property final="false" static="false" visibility="protected" line="2344" package="Default">
        <name>$logs</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" line="2345" package="Default">
        <name>getInstanceAndAttach</name>
        <argument line="2345">
          <name>$adapter</name>
          <default/>
          <type>RedBean_Observable</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" line="2350" package="Default">
        <name>__construct</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2351" package="Default">
        <name>onEvent</name>
        <argument line="2351">
          <name>$eventName</name>
          <default/>
          <type/>
        </argument>
        <argument line="2351">
          <name>$adapter</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2357" package="Default">
        <name>grep</name>
        <argument line="2357">
          <name>$word</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2366" package="Default">
        <name>getLogs</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2369" package="Default">
        <name>clear</name>
      </method>
    </class>
    <class final="false" abstract="false" line="2373" namespace="default" package="Default">
      <name>RedBean_Plugin_BeanExport</name>
      <extends/>
      <full_name>\RedBean_Plugin_BeanExport</full_name>
      <property final="false" static="false" visibility="protected" line="2374" package="Default">
        <name>$toolbox</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="protected" line="2375" package="Default">
        <name>$recurCheck</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="2376" package="Default">
        <name>__construct</name>
        <argument line="2376">
          <name>$toolbox</name>
          <default/>
          <type>RedBean_Toolbox</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2379" package="Default">
        <name>loadSchema</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2391" package="Default">
        <name>getSchema</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2394" package="Default">
        <name>loadSchemaFromString</name>
        <argument line="2394">
          <name>$schema</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2397" package="Default">
        <name>export</name>
        <argument line="2397">
          <name>$beans</name>
          <default/>
          <type/>
        </argument>
        <argument line="2397">
          <name>$resetRecur</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2410" package="Default">
        <name>exportBean</name>
        <argument line="2410">
          <name>$bean</name>
          <default/>
          <type>RedBean_OODBBean</type>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="2448" namespace="default" package="Default">
      <name>RedBean_SimpleModel</name>
      <extends/>
      <full_name>\RedBean_SimpleModel</full_name>
      <property final="false" static="false" visibility="protected" line="2449" package="Default">
        <name>$bean</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="2450" package="Default">
        <name>loadBean</name>
        <argument line="2450">
          <name>$bean</name>
          <default/>
          <type>RedBean_OODBBean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2453" package="Default">
        <name>__get</name>
        <argument line="2453">
          <name>$prop</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2456" package="Default">
        <name>__set</name>
        <argument line="2456">
          <name>$prop</name>
          <default/>
          <type/>
        </argument>
        <argument line="2456">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2459" package="Default">
        <name>__isset</name>
        <argument line="2459">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" line="2462" package="Default">
        <name>getConnected</name>
        <argument line="2462">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="2466" namespace="default" package="Default">
      <name>RedBean_ModelHelper</name>
      <extends/>
      <full_name>\RedBean_ModelHelper</full_name>
      <implements>\RedBean_Observer</implements>
      <property final="false" static="true" visibility="private" line="2467" package="Default">
        <name>$modelFormatter</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="2468" package="Default">
        <name>onEvent</name>
        <argument line="2468">
          <name>$eventName</name>
          <default/>
          <type/>
        </argument>
        <argument line="2468">
          <name>$bean</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2471" package="Default">
        <name>getModelName</name>
        <argument line="2471">
          <name>$model</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2479" package="Default">
        <name>setModelFormatter</name>
        <argument line="2479">
          <name>$modelFormatter</name>
          <default/>
          <type>RedBean_IModelFormatter</type>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="2483" namespace="default" package="Default">
      <name>RedBean_Facade</name>
      <extends/>
      <full_name>\RedBean_Facade</full_name>
      <property final="false" static="true" visibility="public" line="2484" package="Default">
        <name>$toolboxes</name>
        <default>array()</default>
      </property>
      <property final="false" static="true" visibility="public" line="2485" package="Default">
        <name>$toolbox</name>
        <default/>
      </property>
      <property final="false" static="true" visibility="public" line="2486" package="Default">
        <name>$redbean</name>
        <default/>
      </property>
      <property final="false" static="true" visibility="public" line="2487" package="Default">
        <name>$writer</name>
        <default/>
      </property>
      <property final="false" static="true" visibility="public" line="2488" package="Default">
        <name>$adapter</name>
        <default/>
      </property>
      <property final="false" static="true" visibility="public" line="2489" package="Default">
        <name>$associationManager</name>
        <default/>
      </property>
      <property final="false" static="true" visibility="public" line="2490" package="Default">
        <name>$extAssocManager</name>
        <default/>
      </property>
      <property final="false" static="true" visibility="public" line="2491" package="Default">
        <name>$exporter</name>
        <default/>
      </property>
      <property final="false" static="true" visibility="public" line="2492" package="Default">
        <name>$currentDB</name>
        <default>""</default>
      </property>
      <property final="false" static="true" visibility="public" line="2761" package="Default">
        <name>$flagUseLegacyTaggingAPI</name>
        <default>false</default>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" line="2493" package="Default">
        <name>getVersion</name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2496" package="Default">
        <name>setup</name>
        <argument line="2496">
          <name>$dsn</name>
          <default>"sqlite:/tmp/red.db"</default>
          <type/>
        </argument>
        <argument line="2496">
          <name>$username</name>
          <default>NULL</default>
          <type/>
        </argument>
        <argument line="2496">
          <name>$password</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2502" package="Default">
        <name>setupMultiple</name>
        <argument line="2502">
          <name>$databases</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2510" package="Default">
        <name>addDatabase</name>
        <argument line="2510">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="2510">
          <name>$dsn</name>
          <default/>
          <type/>
        </argument>
        <argument line="2510">
          <name>$user</name>
          <default/>
          <type/>
        </argument>
        <argument line="2510">
          <name>$pass</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="2510">
          <name>$frozen</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2513" package="Default">
        <name>selectDatabase</name>
        <argument line="2513">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2519" package="Default">
        <name>debug</name>
        <argument line="2519">
          <name>$tf</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2522" package="Default">
        <name>store</name>
        <argument line="2522">
          <name>$bean</name>
          <default/>
          <type>RedBean_OODBBean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2525" package="Default">
        <name>freeze</name>
        <argument line="2525">
          <name>$tf</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2528" package="Default">
        <name>load</name>
        <argument line="2528">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="2528">
          <name>$id</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2531" package="Default">
        <name>trash</name>
        <argument line="2531">
          <name>$bean</name>
          <default/>
          <type>RedBean_OODBBean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2534" package="Default">
        <name>dispense</name>
        <argument line="2534">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="2534">
          <name>$num</name>
          <default>1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2544" package="Default">
        <name>loadOrDispense</name>
        <argument line="2544">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="2544">
          <name>$id</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2547" package="Default">
        <name>findOrDispense</name>
        <argument line="2547">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="2547">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="2547">
          <name>$values</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2551" package="Default">
        <name>associate</name>
        <argument line="2551">
          <name>$bean1</name>
          <default/>
          <type>RedBean_OODBBean</type>
        </argument>
        <argument line="2551">
          <name>$bean2</name>
          <default/>
          <type>RedBean_OODBBean</type>
        </argument>
        <argument line="2551">
          <name>$extra</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2568" package="Default">
        <name>unassociate</name>
        <argument line="2568">
          <name>$bean1</name>
          <default/>
          <type>RedBean_OODBBean</type>
        </argument>
        <argument line="2568">
          <name>$bean2</name>
          <default/>
          <type>RedBean_OODBBean</type>
        </argument>
        <argument line="2568">
          <name>$fast</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2571" package="Default">
        <name>related</name>
        <argument line="2571">
          <name>$bean</name>
          <default/>
          <type>RedBean_OODBBean</type>
        </argument>
        <argument line="2571">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="2571">
          <name>$sql</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="2571">
          <name>$values</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2579" package="Default">
        <name>areRelated</name>
        <argument line="2579">
          <name>$bean1</name>
          <default/>
          <type>RedBean_OODBBean</type>
        </argument>
        <argument line="2579">
          <name>$bean2</name>
          <default/>
          <type>RedBean_OODBBean</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2582" package="Default">
        <name>unrelated</name>
        <argument line="2582">
          <name>$bean</name>
          <default/>
          <type>RedBean_OODBBean</type>
        </argument>
        <argument line="2582">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="2582">
          <name>$sql</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="2582">
          <name>$values</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2588" package="Default">
        <name>relatedOne</name>
        <argument line="2588">
          <name>$bean</name>
          <default/>
          <type>RedBean_OODBBean</type>
        </argument>
        <argument line="2588">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="2588">
          <name>$sql</name>
          <default>'1'</default>
          <type/>
        </argument>
        <argument line="2588">
          <name>$values</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2593" package="Default">
        <name>clearRelations</name>
        <argument line="2593">
          <name>$bean</name>
          <default/>
          <type>RedBean_OODBBean</type>
        </argument>
        <argument line="2593">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="2593">
          <name>$bean2</name>
          <default>null</default>
          <type>RedBean_OODBBean</type>
        </argument>
        <argument line="2593">
          <name>$extra</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2600" package="Default">
        <name>find</name>
        <argument line="2600">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="2600">
          <name>$sql</name>
          <default>"1"</default>
          <type/>
        </argument>
        <argument line="2600">
          <name>$values</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2603" package="Default">
        <name>findAndExport</name>
        <argument line="2603">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="2603">
          <name>$sql</name>
          <default>"1"</default>
          <type/>
        </argument>
        <argument line="2603">
          <name>$values</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2611" package="Default">
        <name>findOne</name>
        <argument line="2611">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="2611">
          <name>$sql</name>
          <default>"1"</default>
          <type/>
        </argument>
        <argument line="2611">
          <name>$values</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2615" package="Default">
        <name>findLast</name>
        <argument line="2615">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="2615">
          <name>$sql</name>
          <default>"1"</default>
          <type/>
        </argument>
        <argument line="2615">
          <name>$values</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2619" package="Default">
        <name>batch</name>
        <argument line="2619">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="2619">
          <name>$ids</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2622" package="Default">
        <name>exec</name>
        <argument line="2622">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="2622">
          <name>$values</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2644" package="Default">
        <name>getAll</name>
        <argument line="2644">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="2644">
          <name>$values</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2666" package="Default">
        <name>getCell</name>
        <argument line="2666">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="2666">
          <name>$values</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2688" package="Default">
        <name>getRow</name>
        <argument line="2688">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="2688">
          <name>$values</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2710" package="Default">
        <name>getCol</name>
        <argument line="2710">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="2710">
          <name>$values</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2732" package="Default">
        <name>copy</name>
        <argument line="2732">
          <name>$bean</name>
          <default/>
          <type/>
        </argument>
        <argument line="2732">
          <name>$associatedBeanTypesStr</name>
          <default>""</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2749" package="Default">
        <name>swap</name>
        <argument line="2749">
          <name>$beans</name>
          <default/>
          <type/>
        </argument>
        <argument line="2749">
          <name>$property</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2758" package="Default">
        <name>convertToBeans</name>
        <argument line="2758">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="2758">
          <name>$rows</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2762" package="Default">
        <name>hasTag</name>
        <argument line="2762">
          <name>$bean</name>
          <default/>
          <type/>
        </argument>
        <argument line="2762">
          <name>$tags</name>
          <default/>
          <type/>
        </argument>
        <argument line="2762">
          <name>$all</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2771" package="Default">
        <name>untag</name>
        <argument line="2771">
          <name>$bean</name>
          <default/>
          <type/>
        </argument>
        <argument line="2771">
          <name>$tagList</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2780" package="Default">
        <name>tag</name>
        <argument line="2780">
          <name>$bean</name>
          <default/>
          <type>RedBean_OODBBean</type>
        </argument>
        <argument line="2780">
          <name>$tagList</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2793" package="Default">
        <name>addTags</name>
        <argument line="2793">
          <name>$bean</name>
          <default/>
          <type>RedBean_OODBBean</type>
        </argument>
        <argument line="2793">
          <name>$tagList</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2806" package="Default">
        <name>tagged</name>
        <argument line="2806">
          <name>$beanType</name>
          <default/>
          <type/>
        </argument>
        <argument line="2806">
          <name>$tagList</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2817" package="Default">
        <name>wipe</name>
        <argument line="2817">
          <name>$beanType</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2820" package="Default">
        <name>count</name>
        <argument line="2820">
          <name>$beanType</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2823" package="Default">
        <name>configureFacadeWithToolbox</name>
        <argument line="2823">
          <name>$tb</name>
          <default/>
          <type>RedBean_ToolBox</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2842" package="Default">
        <name>cooker</name>
        <argument line="2842">
          <name>$arr</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2845" package="Default">
        <name>view</name>
        <argument line="2845">
          <name>$viewID</name>
          <default/>
          <type/>
        </argument>
        <argument line="2845">
          <name>$types</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2853" package="Default">
        <name>exportAll</name>
        <argument line="2853">
          <name>$beans</name>
          <default/>
          <type/>
        </argument>
        <argument line="2853">
          <name>$recursively</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2871" package="Default">
        <name>exportAllToObj</name>
        <argument line="2871">
          <name>$beans</name>
          <default/>
          <type/>
        </argument>
        <argument line="2871">
          <name>$classname</name>
          <default>'stdClass'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2882" package="Default">
        <name>begin</name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2885" package="Default">
        <name>commit</name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2888" package="Default">
        <name>rollback</name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2891" package="Default">
        <name>getColumns</name>
        <argument line="2891">
          <name>$table</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2894" package="Default">
        <name>now</name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2897" package="Default">
        <name>genSlots</name>
        <argument line="2897">
          <name>$array</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2906" package="Default">
        <name>prefix</name>
        <argument line="2906">
          <name>$prefix</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" line="2911" package="Default">
        <name>nuke</name>
      </method>
    </class>
    <class final="false" abstract="false" line="2922" namespace="default" package="Default">
      <name>RedBean_FacadeHelper</name>
      <extends/>
      <full_name>\RedBean_FacadeHelper</full_name>
      <property final="false" static="false" visibility="private" line="2923" package="Default">
        <name>$key</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="2924" package="Default">
        <name>__construct</name>
        <argument line="2924">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2927" package="Default">
        <name>__call</name>
        <argument line="2927">
          <name>$func</name>
          <default/>
          <type/>
        </argument>
        <argument line="2927">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="2933" namespace="default" package="Default">
      <name>RedBean_BeanCan</name>
      <extends/>
      <full_name>\RedBean_BeanCan</full_name>
      <property final="false" static="false" visibility="private" line="2934" package="Default">
        <name>$modelHelper</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" line="2935" package="Default">
        <name>__construct</name>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" line="2938" package="Default">
        <name>resp</name>
        <argument line="2938">
          <name>$result</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="2938">
          <name>$id</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="2938">
          <name>$errorCode</name>
          <default>"-32603"</default>
          <type/>
        </argument>
        <argument line="2938">
          <name>$errorMessage</name>
          <default>"Internal Error"</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="2956" package="Default">
        <name>handleJSONRequest</name>
        <argument line="2956">
          <name>$jsonString</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="3013" namespace="default" package="Default">
      <name>RedBean_Cooker</name>
      <extends/>
      <full_name>\RedBean_Cooker</full_name>
      <property final="false" static="true" visibility="public" line="3014" package="Default">
        <name>$dontSetEmptyValues</name>
        <default>false</default>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" line="3015" package="Default">
        <name>load</name>
        <argument line="3015">
          <name>$post</name>
          <default/>
          <type/>
        </argument>
        <argument line="3015">
          <name>$toolbox</name>
          <default/>
          <type>RedBean_ToolBox</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="3067" package="Default">
        <name>setToolbox</name>
        <argument line="3067">
          <name>$toolbox</name>
          <default/>
          <type>RedBean_Toolbox</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" line="3071" package="Default">
        <name>graph</name>
        <argument line="3071">
          <name>$array</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" line="3105" namespace="default" package="Default">
      <name>R</name>
      <extends>\RedBean_Facade</extends>
      <full_name>\R</full_name>
    </class>
  </file>
  <package name="Bootstrap"/>
  <package name="Core"/>
  <package name="Default"/>
  <package name="Search"/>
  <package name="Test"/>
  <namespace name="default"/>
  <namespace name="toodle">
    <namespace name="core"/>
  </namespace>
  <marker>todo</marker>
  <marker>fixme</marker>
</project>
